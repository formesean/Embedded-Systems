

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Apr 27 22:07:33 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	psect	text30,local,class=CODE,merge=1,delta=2
    40                           	psect	text31,local,class=CODE,merge=1,delta=2
    41                           	psect	text32,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0008                     	;# 
    52  0009                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000D                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0013                     	;# 
    64  0014                     	;# 
    65  0015                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  001D                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  0087                     	;# 
    82  0088                     	;# 
    83  0089                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0098                     	;# 
    92  0099                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  010F                     	;# 
   101  018C                     	;# 
   102  018D                     	;# 
   103                           
   104                           	psect	strings
   105  1000                     __pstrings:	
   106  1000                     stringtab:	
   107  1000                     __stringtab:	
   108  1000                     stringcode:	
   109                           ;	String table - string pointers are 1 byte each
   110                           
   111  1000                     stringdir:	
   112  1000  3010               	movlw	high stringdir
   113  1001  008A               	movwf	10
   114  1002  0804               	movf	4,w
   115  1003  0A84               	incf	4,f
   116  1004  0782               	addwf	2,f
   117  1005                     __stringbase:	
   118  1005  3400               	retlw	0
   119  1006                     __end_of__stringtab:	
   120  1006                     _dpowers:	
   121  1006  3401               	retlw	1
   122  1007  3400               	retlw	0
   123  1008  3400               	retlw	0
   124  1009  3400               	retlw	0
   125  100A  340A               	retlw	10
   126  100B  3400               	retlw	0
   127  100C  3400               	retlw	0
   128  100D  3400               	retlw	0
   129  100E  3464               	retlw	100
   130  100F  3400               	retlw	0
   131  1010  3400               	retlw	0
   132  1011  3400               	retlw	0
   133  1012  34E8               	retlw	232
   134  1013  3403               	retlw	3
   135  1014  3400               	retlw	0
   136  1015  3400               	retlw	0
   137  1016  3410               	retlw	16
   138  1017  3427               	retlw	39
   139  1018  3400               	retlw	0
   140  1019  3400               	retlw	0
   141  101A  34A0               	retlw	160
   142  101B  3486               	retlw	134
   143  101C  3401               	retlw	1
   144  101D  3400               	retlw	0
   145  101E  3440               	retlw	64
   146  101F  3442               	retlw	66
   147  1020  340F               	retlw	15
   148  1021  3400               	retlw	0
   149  1022  3480               	retlw	128
   150  1023  3496               	retlw	150
   151  1024  3498               	retlw	152
   152  1025  3400               	retlw	0
   153  1026  3400               	retlw	0
   154  1027  34E1               	retlw	225
   155  1028  34F5               	retlw	245
   156  1029  3405               	retlw	5
   157  102A  3400               	retlw	0
   158  102B  34CA               	retlw	202
   159  102C  349A               	retlw	154
   160  102D  343B               	retlw	59
   161  102E                     __end_of_dpowers:	
   162  102E                     __npowers_:	
   163  102E  3400               	retlw	0
   164  102F  3480               	retlw	128
   165  1030  343F               	retlw	63
   166  1031  34CD               	retlw	205
   167  1032  34CC               	retlw	204
   168  1033  343D               	retlw	61
   169  1034  34D7               	retlw	215
   170  1035  3423               	retlw	35
   171  1036  343C               	retlw	60
   172  1037  3412               	retlw	18
   173  1038  3483               	retlw	131
   174  1039  343A               	retlw	58
   175  103A  34B7               	retlw	183
   176  103B  34D1               	retlw	209
   177  103C  3438               	retlw	56
   178  103D  34C6               	retlw	198
   179  103E  3427               	retlw	39
   180  103F  3437               	retlw	55
   181  1040  3438               	retlw	56
   182  1041  3486               	retlw	134
   183  1042  3435               	retlw	53
   184  1043  34C0               	retlw	192
   185  1044  34D6               	retlw	214
   186  1045  3433               	retlw	51
   187  1046  34CC               	retlw	204
   188  1047  342B               	retlw	43
   189  1048  3432               	retlw	50
   190  1049  3470               	retlw	112
   191  104A  3489               	retlw	137
   192  104B  3430               	retlw	48
   193  104C  34E7               	retlw	231
   194  104D  34DB               	retlw	219
   195  104E  342E               	retlw	46
   196  104F  34E5               	retlw	229
   197  1050  343C               	retlw	60
   198  1051  341E               	retlw	30
   199  1052  3442               	retlw	66
   200  1053  34A2               	retlw	162
   201  1054  340D               	retlw	13
   202  1055                     __end_of__npowers_:	
   203  1055                     __powers_:	
   204  1055  3400               	retlw	0
   205  1056  3480               	retlw	128
   206  1057  343F               	retlw	63
   207  1058  3400               	retlw	0
   208  1059  3420               	retlw	32
   209  105A  3441               	retlw	65
   210  105B  3400               	retlw	0
   211  105C  34C8               	retlw	200
   212  105D  3442               	retlw	66
   213  105E  3400               	retlw	0
   214  105F  347A               	retlw	122
   215  1060  3444               	retlw	68
   216  1061  3440               	retlw	64
   217  1062  341C               	retlw	28
   218  1063  3446               	retlw	70
   219  1064  3450               	retlw	80
   220  1065  34C3               	retlw	195
   221  1066  3447               	retlw	71
   222  1067  3424               	retlw	36
   223  1068  3474               	retlw	116
   224  1069  3449               	retlw	73
   225  106A  3497               	retlw	151
   226  106B  3418               	retlw	24
   227  106C  344B               	retlw	75
   228  106D  34BC               	retlw	188
   229  106E  34BE               	retlw	190
   230  106F  344C               	retlw	76
   231  1070  346B               	retlw	107
   232  1071  346E               	retlw	110
   233  1072  344E               	retlw	78
   234  1073  3403               	retlw	3
   235  1074  3415               	retlw	21
   236  1075  3450               	retlw	80
   237  1076  3479               	retlw	121
   238  1077  34AD               	retlw	173
   239  1078  3460               	retlw	96
   240  1079  34F3               	retlw	243
   241  107A  3449               	retlw	73
   242  107B  3471               	retlw	113
   243  107C                     __end_of__powers_:	
   244  0008                     _PORTD	set	8
   245  0013                     _SSPBUF	set	19
   246  0014                     _SSPCON	set	20
   247  0035                     _RB5	set	53
   248  0036                     _RB6	set	54
   249  0037                     _RB7	set	55
   250  0093                     _SSPADD	set	147
   251  0091                     _SSPCON2	set	145
   252  0094                     _SSPSTAT	set	148
   253  0086                     _TRISB	set	134
   254  0088                     _TRISD	set	136
   255  048D                     _ACKDT	set	1165
   256  048C                     _ACKEN	set	1164
   257  048A                     _PEN	set	1162
   258  048B                     _RCEN	set	1163
   259  0489                     _RSEN	set	1161
   260  0488                     _SEN	set	1160
   261  043B                     _TRISC3	set	1083
   262  043C                     _TRISC4	set	1084
   263  107C                     __stringdata:	
   264  107C                     STR_2:	
   265  107C  3454               	retlw	84	;'T'
   266  107D  3465               	retlw	101	;'e'
   267  107E  346D               	retlw	109	;'m'
   268  107F  3470               	retlw	112	;'p'
   269  1080  3465               	retlw	101	;'e'
   270  1081  3472               	retlw	114	;'r'
   271  1082  3461               	retlw	97	;'a'
   272  1083  3474               	retlw	116	;'t'
   273  1084  3475               	retlw	117	;'u'
   274  1085  3472               	retlw	114	;'r'
   275  1086  3465               	retlw	101	;'e'
   276  1087  343A               	retlw	58	;':'
   277  1088  3400               	retlw	0
   278  1089                     STR_1:	
   279  1089  3448               	retlw	72	;'H'
   280  108A  3475               	retlw	117	;'u'
   281  108B  346D               	retlw	109	;'m'
   282  108C  3469               	retlw	105	;'i'
   283  108D  3464               	retlw	100	;'d'
   284  108E  3469               	retlw	105	;'i'
   285  108F  3474               	retlw	116	;'t'
   286  1090  3479               	retlw	121	;'y'
   287  1091  343A               	retlw	58	;':'
   288  1092  3400               	retlw	0
   289  1093                     STR_3:	
   290  1093  3425               	retlw	37	;'%'
   291  1094  3466               	retlw	102	;'f'
   292  1095  3400               	retlw	0
   293  1096                     STR_5:	
   294  1096  3443               	retlw	67	;'C'
   295  1097  3400               	retlw	0
   296  1098                     __end_of__stringdata:	
   297                           
   298                           ; #config settings
   299  0000                     
   300                           	psect	cinit
   301  07FC                     start_initialization:	
   302  07FC                     __initialization:	
   303  07FC                     end_of_initialization:	
   304                           ;End of C runtime variable initialization code
   305                           
   306  07FC                     __end_of__initialization:	
   307  07FC  0183               	clrf	3
   308  07FD  120A  158A  2AF5   	ljmp	_main	;jump to C main() function
   309                           
   310                           	psect	cstackBANK1
   311  00A0                     __pcstackBANK1:	
   312  00A0                     _sprintf$572:	
   313                           
   314                           ; 3 bytes @ 0x0
   315  00A0                     	ds	3
   316  00A3                     _sprintf$146:	
   317                           
   318                           ; 4 bytes @ 0x3
   319  00A3                     	ds	4
   320  00A7                     sprintf@ap:	
   321                           
   322                           ; 1 bytes @ 0x7
   323  00A7                     	ds	1
   324  00A8                     sprintf@vd:	
   325                           
   326                           ; 4 bytes @ 0x8
   327  00A8                     	ds	4
   328  00AC                     sprintf@vd_148:	
   329                           
   330                           ; 4 bytes @ 0xC
   331  00AC                     	ds	4
   332  00B0                     sprintf@flag:	
   333                           
   334                           ; 2 bytes @ 0x10
   335  00B0                     	ds	2
   336  00B2                     sprintf@prec:	
   337                           
   338                           ; 2 bytes @ 0x12
   339  00B2                     	ds	2
   340  00B4                     sprintf@_val:	
   341                           
   342                           ; 4 bytes @ 0x14
   343  00B4                     	ds	4
   344  00B8                     sprintf@integ:	
   345                           
   346                           ; 3 bytes @ 0x18
   347  00B8                     	ds	3
   348  00BB                     sprintf@exp:	
   349                           
   350                           ; 2 bytes @ 0x1B
   351  00BB                     	ds	2
   352  00BD                     sprintf@sp:	
   353                           
   354                           ; 1 bytes @ 0x1D
   355  00BD                     	ds	1
   356  00BE                     sprintf@fval:	
   357                           
   358                           ; 3 bytes @ 0x1E
   359  00BE                     	ds	3
   360  00C1                     sprintf@c:	
   361                           
   362                           ; 1 bytes @ 0x21
   363  00C1                     	ds	1
   364  00C2                     main@humidity:	
   365                           
   366                           ; 3 bytes @ 0x22
   367  00C2                     	ds	3
   368  00C5                     main@temperature:	
   369                           
   370                           ; 3 bytes @ 0x25
   371  00C5                     	ds	3
   372  00C8                     main@LSBH:	
   373                           
   374                           ; 2 bytes @ 0x28
   375  00C8                     	ds	2
   376  00CA                     main@LSBT:	
   377                           
   378                           ; 2 bytes @ 0x2A
   379  00CA                     	ds	2
   380  00CC                     main@humidityStr:	
   381                           
   382                           ; 4 bytes @ 0x2C
   383  00CC                     	ds	4
   384  00D0                     main@MSBH:	
   385                           
   386                           ; 2 bytes @ 0x30
   387  00D0                     	ds	2
   388  00D2                     main@MSBT:	
   389                           
   390                           ; 2 bytes @ 0x32
   391  00D2                     	ds	2
   392  00D4                     main@temperatureStr:	
   393                           
   394                           ; 4 bytes @ 0x34
   395  00D4                     	ds	4
   396                           
   397                           	psect	cstackCOMMON
   398  0070                     __pcstackCOMMON:	
   399  0070                     ?_instCtrl:	
   400  0070                     ??_instCtrl:	
   401                           ; 0 bytes @ 0x0
   402                           
   403  0070                     ?_dataCtrl:	
   404                           ; 0 bytes @ 0x0
   405                           
   406  0070                     ??_dataCtrl:	
   407                           ; 0 bytes @ 0x0
   408                           
   409  0070                     ?_initLCD:	
   410                           ; 0 bytes @ 0x0
   411                           
   412  0070                     ?_displayString:	
   413                           ; 0 bytes @ 0x0
   414                           
   415  0070                     ?_init_I2C_Master:	
   416                           ; 0 bytes @ 0x0
   417                           
   418  0070                     ??_init_I2C_Master:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  0070                     ?_I2C_Wait:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0070                     ??_I2C_Wait:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0070                     ?_I2C_Start:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0070                     ??_I2C_Start:	
   431                           ; 0 bytes @ 0x0
   432                           
   433  0070                     ?_I2C_Stop:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0070                     ??_I2C_Stop:	
   437                           ; 0 bytes @ 0x0
   438                           
   439  0070                     ?_I2C_RepeatedStart:	
   440                           ; 0 bytes @ 0x0
   441                           
   442  0070                     ??_I2C_RepeatedStart:	
   443                           ; 0 bytes @ 0x0
   444                           
   445  0070                     ?_I2C_Send:	
   446                           ; 0 bytes @ 0x0
   447                           
   448  0070                     ??_I2C_Send:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0070                     ??_I2C_Receive:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0070                     ?_main:	
   455                           ; 0 bytes @ 0x0
   456                           
   457  0070                     ?___ftge:	
   458                           ; 0 bytes @ 0x0
   459                           
   460  0070                     ?_I2C_Receive:	
   461                           ; 1 bit 
   462                           
   463  0070                     ?___wmul:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?___awmod:	
   467                           ; 2 bytes @ 0x0
   468                           
   469  0070                     ?___ftpack:	
   470                           ; 2 bytes @ 0x0
   471                           
   472  0070                     ?___ftneg:	
   473                           ; 3 bytes @ 0x0
   474                           
   475  0070                     ?__tdiv_to_l_:	
   476                           ; 3 bytes @ 0x0
   477                           
   478  0070                     ?__div_to_l_:	
   479                           ; 4 bytes @ 0x0
   480                           
   481  0070                     ?___lldiv:	
   482                           ; 4 bytes @ 0x0
   483                           
   484  0070                     ?___llmod:	
   485                           ; 4 bytes @ 0x0
   486                           
   487  0070                     I2C_Send@data:	
   488                           ; 4 bytes @ 0x0
   489                           
   490  0070                     ___wmul@multiplier:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ___awmod@divisor:	
   494                           ; 2 bytes @ 0x0
   495                           
   496  0070                     __div_to_l_@f1:	
   497                           ; 2 bytes @ 0x0
   498                           
   499  0070                     ___ftpack@arg:	
   500                           ; 3 bytes @ 0x0
   501                           
   502  0070                     __tdiv_to_l_@f1:	
   503                           ; 3 bytes @ 0x0
   504                           
   505  0070                     ___ftge@ff1:	
   506                           ; 3 bytes @ 0x0
   507                           
   508  0070                     ___ftneg@f1:	
   509                           ; 3 bytes @ 0x0
   510                           
   511  0070                     ___lldiv@divisor:	
   512                           ; 3 bytes @ 0x0
   513                           
   514  0070                     ___llmod@divisor:	
   515                           ; 4 bytes @ 0x0
   516                           
   517                           
   518                           ; 4 bytes @ 0x0
   519  0070                     	ds	1
   520  0071                     instCtrl@INST:	
   521  0071                     dataCtrl@DATA:	
   522                           ; 1 bytes @ 0x1
   523                           
   524  0071                     I2C_Receive@ack:	
   525                           ; 1 bytes @ 0x1
   526                           
   527                           
   528                           ; 1 bytes @ 0x1
   529  0071                     	ds	1
   530  0072                     ??_initLCD:	
   531  0072                     ??_displayString:	
   532                           ; 0 bytes @ 0x2
   533                           
   534  0072                     I2C_Receive@temp:	
   535                           ; 0 bytes @ 0x2
   536                           
   537  0072                     ___wmul@multiplicand:	
   538                           ; 1 bytes @ 0x2
   539                           
   540  0072                     ___awmod@dividend:	
   541                           ; 2 bytes @ 0x2
   542                           
   543                           
   544                           ; 2 bytes @ 0x2
   545  0072                     	ds	1
   546  0073                     ??___ftneg:	
   547  0073                     displayString@str:	
   548                           ; 0 bytes @ 0x3
   549                           
   550  0073                     ___ftpack@exp:	
   551                           ; 1 bytes @ 0x3
   552                           
   553  0073                     __div_to_l_@f2:	
   554                           ; 1 bytes @ 0x3
   555                           
   556  0073                     __tdiv_to_l_@f2:	
   557                           ; 3 bytes @ 0x3
   558                           
   559  0073                     ___ftge@ff2:	
   560                           ; 3 bytes @ 0x3
   561                           
   562                           
   563                           ; 3 bytes @ 0x3
   564  0073                     	ds	1
   565  0074                     ??___wmul:	
   566  0074                     ??___awmod:	
   567                           ; 0 bytes @ 0x4
   568                           
   569  0074                     ___ftpack@sign:	
   570                           ; 0 bytes @ 0x4
   571                           
   572  0074                     ___wmul@product:	
   573                           ; 1 bytes @ 0x4
   574                           
   575  0074                     ___lldiv@dividend:	
   576                           ; 2 bytes @ 0x4
   577                           
   578  0074                     ___llmod@dividend:	
   579                           ; 4 bytes @ 0x4
   580                           
   581                           
   582                           ; 4 bytes @ 0x4
   583  0074                     	ds	1
   584  0075                     ??___ftpack:	
   585  0075                     ___awmod@counter:	
   586                           ; 0 bytes @ 0x5
   587                           
   588                           
   589                           ; 1 bytes @ 0x5
   590  0075                     	ds	1
   591  0076                     ??__tdiv_to_l_:	
   592  0076                     ??__div_to_l_:	
   593                           ; 0 bytes @ 0x6
   594                           
   595  0076                     ??___ftge:	
   596                           ; 0 bytes @ 0x6
   597                           
   598  0076                     ___awmod@sign:	
   599                           ; 0 bytes @ 0x6
   600                           
   601                           
   602                           ; 1 bytes @ 0x6
   603  0076                     	ds	1
   604  0077                     ?___awdiv:	
   605  0077                     ___awdiv@divisor:	
   606                           ; 2 bytes @ 0x7
   607                           
   608                           
   609                           ; 2 bytes @ 0x7
   610  0077                     	ds	1
   611  0078                     ??___lldiv:	
   612  0078                     ??___llmod:	
   613                           ; 0 bytes @ 0x8
   614                           
   615  0078                     ?___lltoft:	
   616                           ; 0 bytes @ 0x8
   617                           
   618  0078                     ?___lwtoft:	
   619                           ; 3 bytes @ 0x8
   620                           
   621  0078                     ___lwtoft@c:	
   622                           ; 3 bytes @ 0x8
   623                           
   624  0078                     ___lltoft@c:	
   625                           ; 2 bytes @ 0x8
   626                           
   627                           
   628                           ; 4 bytes @ 0x8
   629  0078                     	ds	1
   630  0079                     ___llmod@counter:	
   631  0079                     ___awdiv@dividend:	
   632                           ; 1 bytes @ 0x9
   633                           
   634  0079                     ___lldiv@quotient:	
   635                           ; 2 bytes @ 0x9
   636                           
   637                           
   638                           ; 4 bytes @ 0x9
   639  0079                     	ds	2
   640  007B                     ??___awdiv:	
   641  007B                     ??___lwtoft:	
   642                           ; 0 bytes @ 0xB
   643                           
   644                           
   645                           ; 0 bytes @ 0xB
   646  007B                     	ds	1
   647  007C                     ??___bmul:	
   648  007C                     ??___lltoft:	
   649                           ; 0 bytes @ 0xC
   650                           
   651                           
   652                           ; 0 bytes @ 0xC
   653  007C                     	ds	1
   654  007D                     ___lldiv@counter:	
   655  007D                     ___lltoft@exp:	
   656                           ; 1 bytes @ 0xD
   657                           
   658                           
   659                           ; 1 bytes @ 0xD
   660  007D                     	ds	1
   661  007E                     ??___ftsub:	
   662                           
   663                           	psect	cstackBANK0
   664  0020                     __pcstackBANK0:	
   665                           ; 0 bytes @ 0xE
   666                           
   667  0020                     ?___ftdiv:	
   668  0020                     ___awdiv@counter:	
   669                           ; 3 bytes @ 0x0
   670                           
   671  0020                     ___ftdiv@f2:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0020                     __div_to_l_@quot:	
   675                           ; 3 bytes @ 0x0
   676                           
   677  0020                     __tdiv_to_l_@quot:	
   678                           ; 4 bytes @ 0x0
   679                           
   680                           
   681                           ; 4 bytes @ 0x0
   682  0020                     	ds	1
   683  0021                     ___awdiv@sign:	
   684                           
   685                           ; 1 bytes @ 0x1
   686  0021                     	ds	1
   687  0022                     ___awdiv@quotient:	
   688                           
   689                           ; 2 bytes @ 0x2
   690  0022                     	ds	1
   691  0023                     ___ftdiv@f1:	
   692                           
   693                           ; 3 bytes @ 0x3
   694  0023                     	ds	1
   695  0024                     ?___bmul:	
   696  0024                     ___bmul@multiplicand:	
   697                           ; 1 bytes @ 0x4
   698                           
   699  0024                     __div_to_l_@cntr:	
   700                           ; 1 bytes @ 0x4
   701                           
   702  0024                     __tdiv_to_l_@cntr:	
   703                           ; 1 bytes @ 0x4
   704                           
   705                           
   706                           ; 1 bytes @ 0x4
   707  0024                     	ds	1
   708  0025                     ___bmul@product:	
   709  0025                     __div_to_l_@exp1:	
   710                           ; 1 bytes @ 0x5
   711                           
   712  0025                     __tdiv_to_l_@exp1:	
   713                           ; 1 bytes @ 0x5
   714                           
   715                           
   716                           ; 1 bytes @ 0x5
   717  0025                     	ds	1
   718  0026                     ??___ftdiv:	
   719  0026                     ___bmul@multiplier:	
   720                           ; 0 bytes @ 0x6
   721                           
   722                           
   723                           ; 1 bytes @ 0x6
   724  0026                     	ds	4
   725  002A                     ___ftdiv@cntr:	
   726                           
   727                           ; 1 bytes @ 0xA
   728  002A                     	ds	1
   729  002B                     ___ftdiv@f3:	
   730                           
   731                           ; 3 bytes @ 0xB
   732  002B                     	ds	3
   733  002E                     ___ftdiv@exp:	
   734                           
   735                           ; 1 bytes @ 0xE
   736  002E                     	ds	1
   737  002F                     ___ftdiv@sign:	
   738                           
   739                           ; 1 bytes @ 0xF
   740  002F                     	ds	1
   741  0030                     ?___ftmul:	
   742  0030                     ___ftmul@f1:	
   743                           ; 3 bytes @ 0x10
   744                           
   745                           
   746                           ; 3 bytes @ 0x10
   747  0030                     	ds	3
   748  0033                     ___ftmul@f2:	
   749                           
   750                           ; 3 bytes @ 0x13
   751  0033                     	ds	3
   752  0036                     ??___ftmul:	
   753                           
   754                           ; 0 bytes @ 0x16
   755  0036                     	ds	4
   756  003A                     ___ftmul@exp:	
   757                           
   758                           ; 1 bytes @ 0x1A
   759  003A                     	ds	1
   760  003B                     ___ftmul@f3_as_product:	
   761                           
   762                           ; 3 bytes @ 0x1B
   763  003B                     	ds	3
   764  003E                     ___ftmul@cntr:	
   765                           
   766                           ; 1 bytes @ 0x1E
   767  003E                     	ds	1
   768  003F                     ___ftmul@sign:	
   769                           
   770                           ; 1 bytes @ 0x1F
   771  003F                     	ds	1
   772  0040                     ?_fround:	
   773  0040                     ?_scale:	
   774                           ; 3 bytes @ 0x20
   775                           
   776                           
   777                           ; 3 bytes @ 0x20
   778  0040                     	ds	3
   779  0043                     ??_fround:	
   780  0043                     ??_scale:	
   781                           ; 0 bytes @ 0x23
   782                           
   783                           
   784                           ; 0 bytes @ 0x23
   785  0043                     	ds	2
   786  0045                     _scale$571:	
   787                           
   788                           ; 3 bytes @ 0x25
   789  0045                     	ds	3
   790  0048                     scale@scl:	
   791                           
   792                           ; 1 bytes @ 0x28
   793  0048                     	ds	1
   794  0049                     ?___fttol:	
   795  0049                     ___fttol@f1:	
   796                           ; 4 bytes @ 0x29
   797                           
   798  0049                     _fround$570:	
   799                           ; 3 bytes @ 0x29
   800                           
   801                           
   802                           ; 3 bytes @ 0x29
   803  0049                     	ds	3
   804  004C                     _fround$569:	
   805                           
   806                           ; 3 bytes @ 0x2C
   807  004C                     	ds	1
   808  004D                     ??___fttol:	
   809                           
   810                           ; 0 bytes @ 0x2D
   811  004D                     	ds	2
   812  004F                     fround@prec:	
   813                           
   814                           ; 1 bytes @ 0x2F
   815  004F                     	ds	1
   816  0050                     ?___ftadd:	
   817  0050                     ___ftadd@f1:	
   818                           ; 3 bytes @ 0x30
   819                           
   820                           
   821                           ; 3 bytes @ 0x30
   822  0050                     	ds	1
   823  0051                     ___fttol@sign1:	
   824                           
   825                           ; 1 bytes @ 0x31
   826  0051                     	ds	1
   827  0052                     ___fttol@lval:	
   828                           
   829                           ; 4 bytes @ 0x32
   830  0052                     	ds	1
   831  0053                     ___ftadd@f2:	
   832                           
   833                           ; 3 bytes @ 0x33
   834  0053                     	ds	3
   835  0056                     ??___ftadd:	
   836  0056                     ___fttol@exp1:	
   837                           ; 0 bytes @ 0x36
   838                           
   839                           
   840                           ; 1 bytes @ 0x36
   841  0056                     	ds	4
   842  005A                     ___ftadd@sign:	
   843                           
   844                           ; 1 bytes @ 0x3A
   845  005A                     	ds	1
   846  005B                     ___ftadd@exp2:	
   847                           
   848                           ; 1 bytes @ 0x3B
   849  005B                     	ds	1
   850  005C                     ___ftadd@exp1:	
   851                           
   852                           ; 1 bytes @ 0x3C
   853  005C                     	ds	1
   854  005D                     ?___ftsub:	
   855  005D                     ___ftsub@f2:	
   856                           ; 3 bytes @ 0x3D
   857                           
   858                           
   859                           ; 3 bytes @ 0x3D
   860  005D                     	ds	3
   861  0060                     ___ftsub@f1:	
   862                           
   863                           ; 3 bytes @ 0x40
   864  0060                     	ds	3
   865  0063                     ?_sprintf:	
   866  0063                     sprintf@f:	
   867                           ; 2 bytes @ 0x43
   868                           
   869                           
   870                           ; 1 bytes @ 0x43
   871  0063                     	ds	4
   872  0067                     ??_sprintf:	
   873                           
   874                           ; 0 bytes @ 0x47
   875  0067                     	ds	6
   876  006D                     ??_main:	
   877                           
   878                           ; 0 bytes @ 0x4D
   879  006D                     	ds	2
   880                           
   881                           	psect	maintext
   882  0AF5                     __pmaintext:	
   883 ;;
   884 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   885 ;;
   886 ;; *************** function _main *****************
   887 ;; Defined at:
   888 ;;		line 117 in file "D:\Embedded-Systems\Practical Activity #7\MPLAB\LE7-3.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  temperatureS    4   52[BANK1 ] unsigned char [4]
   893 ;;  humidityStr     4   44[BANK1 ] unsigned char [4]
   894 ;;  temperature     3   37[BANK1 ] float 
   895 ;;  humidity        3   34[BANK1 ] float 
   896 ;;  MSBT            2   50[BANK1 ] unsigned int 
   897 ;;  MSBH            2   48[BANK1 ] unsigned int 
   898 ;;  LSBT            2   42[BANK1 ] unsigned int 
   899 ;;  LSBH            2   40[BANK1 ] unsigned int 
   900 ;; Return value:  Size  Location     Type
   901 ;;		None               void
   902 ;; Registers used:
   903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 17F/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       0       0       0       0
   910 ;;      Locals:         0       0      22       0       0
   911 ;;      Temps:          0       2       0       0       0
   912 ;;      Totals:         0       2      22       0       0
   913 ;;Total ram usage:       24 bytes
   914 ;; Hardware stack levels required when called:    4
   915 ;; This function calls:
   916 ;;		_I2C_Receive
   917 ;;		_I2C_RepeatedStart
   918 ;;		_I2C_Send
   919 ;;		_I2C_Start
   920 ;;		_I2C_Stop
   921 ;;		___ftadd
   922 ;;		___ftdiv
   923 ;;		___ftmul
   924 ;;		___lwtoft
   925 ;;		_dataCtrl
   926 ;;		_displayString
   927 ;;		_initLCD
   928 ;;		_init_I2C_Master
   929 ;;		_instCtrl
   930 ;;		_sprintf
   931 ;; This function is called by:
   932 ;;		Startup code after reset
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _main
   938  0AF5                     _main:	
   939                           
   940                           ;LE7-3.c: 119: TRISB = 0x00;
   941                           
   942                           ;incstack = 0
   943                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   944  0AF5  1683               	bsf	3,5	;RP0=1, select bank1
   945  0AF6  1303               	bcf	3,6	;RP1=0, select bank1
   946  0AF7  0186               	clrf	6	;volatile
   947                           
   948                           ;LE7-3.c: 120: TRISD = 0x00;
   949  0AF8  0188               	clrf	8	;volatile
   950                           
   951                           ;LE7-3.c: 122: initLCD();
   952  0AF9  160A  118A  2411  120A  158A  	fcall	_initLCD
   953                           
   954                           ;LE7-3.c: 123: instCtrl(0x80);
   955  0AFE  3080               	movlw	128
   956  0AFF  160A  118A  237C  120A  158A  	fcall	_instCtrl
   957                           
   958                           ;LE7-3.c: 124: displayString("Humidity:");
   959  0B04  3084               	movlw	(STR_1-__stringbase)& (0+255)
   960  0B05  160A  118A  23B6  120A  158A  	fcall	_displayString
   961                           
   962                           ;LE7-3.c: 125: instCtrl(0xC0);
   963  0B0A  30C0               	movlw	192
   964  0B0B  160A  118A  237C  120A  158A  	fcall	_instCtrl
   965                           
   966                           ;LE7-3.c: 126: displayString("Temperature:");
   967  0B10  3077               	movlw	(STR_2-__stringbase)& (0+255)
   968  0B11  160A  118A  23B6  120A  158A  	fcall	_displayString
   969                           
   970                           ;LE7-3.c: 128: init_I2C_Master();
   971  0B16  160A  118A  235A  120A  158A  	fcall	_init_I2C_Master
   972  0B1B                     l84:	
   973                           ;LE7-3.c: 130: while (1)
   974                           
   975                           
   976                           ;LE7-3.c: 131: {
   977                           ;LE7-3.c: 132: unsigned int MSBH = 0, LSBH = 0, MSBT = 0, LSBT = 0;
   978  0B1B  1683               	bsf	3,5	;RP0=1, select bank1
   979  0B1C  1303               	bcf	3,6	;RP1=0, select bank1
   980  0B1D  01D0               	clrf	main@MSBH^(0+128)
   981  0B1E  01D1               	clrf	(main@MSBH+1)^(0+128)
   982  0B1F  01C8               	clrf	main@LSBH^(0+128)
   983  0B20  01C9               	clrf	(main@LSBH+1)^(0+128)
   984  0B21  01D2               	clrf	main@MSBT^(0+128)
   985  0B22  01D3               	clrf	(main@MSBT+1)^(0+128)
   986  0B23  01CA               	clrf	main@LSBT^(0+128)
   987  0B24  01CB               	clrf	(main@LSBT+1)^(0+128)
   988                           
   989                           ;LE7-3.c: 133: float humidity = 0.0, temperature = 0.0;
   990  0B25  3000               	movlw	0
   991  0B26  00C2               	movwf	main@humidity^(0+128)
   992  0B27  3000               	movlw	0
   993  0B28  00C3               	movwf	(main@humidity+1)^(0+128)
   994  0B29  3000               	movlw	0
   995  0B2A  00C4               	movwf	(main@humidity+2)^(0+128)
   996  0B2B  3000               	movlw	0
   997  0B2C  00C5               	movwf	main@temperature^(0+128)
   998  0B2D  3000               	movlw	0
   999  0B2E  00C6               	movwf	(main@temperature+1)^(0+128)
  1000  0B2F  3000               	movlw	0
  1001  0B30  00C7               	movwf	(main@temperature+2)^(0+128)
  1002                           
  1003                           ;LE7-3.c: 134: char humidityStr[4], temperatureStr[4];
  1004                           ;LE7-3.c: 137: I2C_Start();
  1005  0B31  160A  118A  2333  120A  158A  	fcall	_I2C_Start
  1006                           
  1007                           ;LE7-3.c: 138: I2C_Send(0x80);
  1008  0B36  3080               	movlw	128
  1009  0B37  160A  118A  2351  120A  158A  	fcall	_I2C_Send
  1010                           
  1011                           ;LE7-3.c: 139: I2C_Send(0xE5);
  1012  0B3C  30E5               	movlw	229
  1013  0B3D  160A  118A  2351  120A  158A  	fcall	_I2C_Send
  1014                           
  1015                           ;LE7-3.c: 140: I2C_RepeatedStart();
  1016  0B42  160A  118A  232C  120A  158A  	fcall	_I2C_RepeatedStart
  1017                           
  1018                           ;LE7-3.c: 141: I2C_Send(0x81);
  1019  0B47  3081               	movlw	129
  1020  0B48  160A  118A  2351  120A  158A  	fcall	_I2C_Send
  1021                           
  1022                           ;LE7-3.c: 142: MSBH = I2C_Receive(1);
  1023  0B4D  3001               	movlw	1
  1024  0B4E  160A  118A  2435  120A  158A  	fcall	_I2C_Receive
  1025  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0B55  00ED               	movwf	??_main
  1028  0B56  01EE               	clrf	??_main+1
  1029  0B57  086D               	movf	??_main,w
  1030  0B58  1683               	bsf	3,5	;RP0=1, select bank1
  1031  0B59  1303               	bcf	3,6	;RP1=0, select bank1
  1032  0B5A  00D0               	movwf	main@MSBH^(0+128)
  1033  0B5B  1283               	bcf	3,5	;RP0=0, select bank0
  1034  0B5C  1303               	bcf	3,6	;RP1=0, select bank0
  1035  0B5D  086E               	movf	??_main+1,w
  1036  0B5E  1683               	bsf	3,5	;RP0=1, select bank1
  1037  0B5F  1303               	bcf	3,6	;RP1=0, select bank1
  1038  0B60  00D1               	movwf	(main@MSBH+1)^(0+128)
  1039                           
  1040                           ;LE7-3.c: 143: LSBH = I2C_Receive(0);
  1041  0B61  3000               	movlw	0
  1042  0B62  160A  118A  2435  120A  158A  	fcall	_I2C_Receive
  1043  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0B69  00ED               	movwf	??_main
  1046  0B6A  01EE               	clrf	??_main+1
  1047  0B6B  086D               	movf	??_main,w
  1048  0B6C  1683               	bsf	3,5	;RP0=1, select bank1
  1049  0B6D  1303               	bcf	3,6	;RP1=0, select bank1
  1050  0B6E  00C8               	movwf	main@LSBH^(0+128)
  1051  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  1052  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0B71  086E               	movf	??_main+1,w
  1054  0B72  1683               	bsf	3,5	;RP0=1, select bank1
  1055  0B73  1303               	bcf	3,6	;RP1=0, select bank1
  1056  0B74  00C9               	movwf	(main@LSBH+1)^(0+128)
  1057                           
  1058                           ;LE7-3.c: 144: I2C_Stop();
  1059  0B75  160A  118A  233A  120A  158A  	fcall	_I2C_Stop
  1060                           
  1061                           ;LE7-3.c: 145: _delay((unsigned long)((50)*(4000000/4000.0)));
  1062  0B7A  3041               	movlw	65
  1063  0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  1064  0B7C  1303               	bcf	3,6	;RP1=0, select bank0
  1065  0B7D  00EE               	movwf	??_main+1
  1066  0B7E  30EE               	movlw	238
  1067  0B7F  00ED               	movwf	??_main
  1068  0B80                     u3657:	
  1069  0B80  0BED               	decfsz	??_main,f
  1070  0B81  2B80               	goto	u3657
  1071  0B82  0BEE               	decfsz	??_main+1,f
  1072  0B83  2B80               	goto	u3657
  1073  0B84  0000               	nop
  1074                           
  1075                           ;LE7-3.c: 147: LSBH &= 0xFC;
  1076  0B85  30FC               	movlw	252
  1077  0B86  1683               	bsf	3,5	;RP0=1, select bank1
  1078  0B87  1303               	bcf	3,6	;RP1=0, select bank1
  1079  0B88  05C8               	andwf	main@LSBH^(0+128),f
  1080  0B89  3000               	movlw	0
  1081  0B8A  05C9               	andwf	(main@LSBH+1)^(0+128),f
  1082                           
  1083                           ;LE7-3.c: 148: MSBH <<= 8;
  1084  0B8B  3008               	movlw	8
  1085  0B8C                     u3635:	
  1086  0B8C  1003               	clrc
  1087  0B8D  0DD0               	rlf	main@MSBH^(0+128),f
  1088  0B8E  0DD1               	rlf	(main@MSBH+1)^(0+128),f
  1089  0B8F  3EFF               	addlw	-1
  1090  0B90  1D03               	skipz
  1091  0B91  2B8C               	goto	u3635
  1092                           
  1093                           ;LE7-3.c: 149: MSBH |= LSBH;
  1094  0B92  0848               	movf	main@LSBH^(0+128),w
  1095  0B93  04D0               	iorwf	main@MSBH^(0+128),f
  1096  0B94  0849               	movf	(main@LSBH+1)^(0+128),w
  1097  0B95  04D1               	iorwf	(main@MSBH+1)^(0+128),f
  1098                           
  1099                           ;LE7-3.c: 151: humidity = -6.0 + (125.0 * (MSBH / 65536.0));
  1100  0B96  3000               	movlw	0
  1101  0B97  1283               	bcf	3,5	;RP0=0, select bank0
  1102  0B98  1303               	bcf	3,6	;RP1=0, select bank0
  1103  0B99  00D0               	movwf	___ftadd@f1
  1104  0B9A  30C0               	movlw	192
  1105  0B9B  00D1               	movwf	___ftadd@f1+1
  1106  0B9C  30C0               	movlw	192
  1107  0B9D  00D2               	movwf	___ftadd@f1+2
  1108  0B9E  3000               	movlw	0
  1109  0B9F  00B0               	movwf	___ftmul@f1
  1110  0BA0  30FA               	movlw	250
  1111  0BA1  00B1               	movwf	___ftmul@f1+1
  1112  0BA2  3042               	movlw	66
  1113  0BA3  00B2               	movwf	___ftmul@f1+2
  1114  0BA4  3000               	movlw	0
  1115  0BA5  00A0               	movwf	___ftdiv@f2
  1116  0BA6  3080               	movlw	128
  1117  0BA7  00A1               	movwf	___ftdiv@f2+1
  1118  0BA8  3047               	movlw	71
  1119  0BA9  00A2               	movwf	___ftdiv@f2+2
  1120  0BAA  1683               	bsf	3,5	;RP0=1, select bank1
  1121  0BAB  1303               	bcf	3,6	;RP1=0, select bank1
  1122  0BAC  0851               	movf	(main@MSBH+1)^(0+128),w
  1123  0BAD  01F9               	clrf	___lwtoft@c+1
  1124  0BAE  07F9               	addwf	___lwtoft@c+1,f
  1125  0BAF  0850               	movf	main@MSBH^(0+128),w
  1126  0BB0  01F8               	clrf	___lwtoft@c
  1127  0BB1  07F8               	addwf	___lwtoft@c,f
  1128  0BB2  160A  118A  23A2  120A  158A  	fcall	___lwtoft
  1129  0BB7  0878               	movf	?___lwtoft,w
  1130  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0BBA  00A3               	movwf	___ftdiv@f1
  1133  0BBB  0879               	movf	?___lwtoft+1,w
  1134  0BBC  00A4               	movwf	___ftdiv@f1+1
  1135  0BBD  087A               	movf	?___lwtoft+2,w
  1136  0BBE  00A5               	movwf	___ftdiv@f1+2
  1137  0BBF  120A  158A  2002  120A  158A  	fcall	___ftdiv
  1138  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  1139  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  1140  0BC6  0820               	movf	?___ftdiv,w
  1141  0BC7  00B3               	movwf	___ftmul@f2
  1142  0BC8  0821               	movf	?___ftdiv+1,w
  1143  0BC9  00B4               	movwf	___ftmul@f2+1
  1144  0BCA  0822               	movf	?___ftdiv+2,w
  1145  0BCB  00B5               	movwf	___ftmul@f2+2
  1146  0BCC  160A  118A  272D  120A  158A  	fcall	___ftmul
  1147  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  1148  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  1149  0BD3  0830               	movf	?___ftmul,w
  1150  0BD4  00D3               	movwf	___ftadd@f2
  1151  0BD5  0831               	movf	?___ftmul+1,w
  1152  0BD6  00D4               	movwf	___ftadd@f2+1
  1153  0BD7  0832               	movf	?___ftmul+2,w
  1154  0BD8  00D5               	movwf	___ftadd@f2+2
  1155  0BD9  120A  158A  20BA  120A  158A  	fcall	___ftadd
  1156  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0BE0  0850               	movf	?___ftadd,w
  1159  0BE1  1683               	bsf	3,5	;RP0=1, select bank1
  1160  0BE2  1303               	bcf	3,6	;RP1=0, select bank1
  1161  0BE3  00C2               	movwf	main@humidity^(0+128)
  1162  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0BE6  0851               	movf	?___ftadd+1,w
  1165  0BE7  1683               	bsf	3,5	;RP0=1, select bank1
  1166  0BE8  1303               	bcf	3,6	;RP1=0, select bank1
  1167  0BE9  00C3               	movwf	(main@humidity+1)^(0+128)
  1168  0BEA  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0BEB  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0BEC  0852               	movf	?___ftadd+2,w
  1171  0BED  1683               	bsf	3,5	;RP0=1, select bank1
  1172  0BEE  1303               	bcf	3,6	;RP1=0, select bank1
  1173  0BEF  00C4               	movwf	(main@humidity+2)^(0+128)
  1174                           
  1175                           ;LE7-3.c: 152: sprintf(humidityStr, "%f", humidity);
  1176  0BF0  308E               	movlw	(STR_3-__stringbase)& (0+255)
  1177  0BF1  1283               	bcf	3,5	;RP0=0, select bank0
  1178  0BF2  1303               	bcf	3,6	;RP1=0, select bank0
  1179  0BF3  00ED               	movwf	??_main
  1180  0BF4  086D               	movf	??_main,w
  1181  0BF5  00E3               	movwf	sprintf@f
  1182  0BF6  1683               	bsf	3,5	;RP0=1, select bank1
  1183  0BF7  1303               	bcf	3,6	;RP1=0, select bank1
  1184  0BF8  0842               	movf	main@humidity^(0+128),w
  1185  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0BFB  00E4               	movwf	?_sprintf+1
  1188  0BFC  1683               	bsf	3,5	;RP0=1, select bank1
  1189  0BFD  1303               	bcf	3,6	;RP1=0, select bank1
  1190  0BFE  0843               	movf	(main@humidity+1)^(0+128),w
  1191  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  1192  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  1193  0C01  00E5               	movwf	?_sprintf+2
  1194  0C02  1683               	bsf	3,5	;RP0=1, select bank1
  1195  0C03  1303               	bcf	3,6	;RP1=0, select bank1
  1196  0C04  0844               	movf	(main@humidity+2)^(0+128),w
  1197  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0C06  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0C07  00E6               	movwf	?_sprintf+3
  1200  0C08  30CC               	movlw	main@humidityStr& (0+255)
  1201  0C09  120A  118A  2263  120A  158A  	fcall	_sprintf
  1202                           
  1203                           ;LE7-3.c: 154: instCtrl(0x8A);
  1204  0C0E  308A               	movlw	138
  1205  0C0F  160A  118A  237C  120A  158A  	fcall	_instCtrl
  1206                           
  1207                           ;LE7-3.c: 157: dataCtrl(humidityStr[0]);
  1208  0C14  1683               	bsf	3,5	;RP0=1, select bank1
  1209  0C15  1303               	bcf	3,6	;RP1=0, select bank1
  1210  0C16  084C               	movf	main@humidityStr^(0+128),w
  1211  0C17  160A  118A  2369  120A  158A  	fcall	_dataCtrl
  1212                           
  1213                           ;LE7-3.c: 158: dataCtrl(humidityStr[1]);
  1214  0C1C  1683               	bsf	3,5	;RP0=1, select bank1
  1215  0C1D  1303               	bcf	3,6	;RP1=0, select bank1
  1216  0C1E  084D               	movf	(main@humidityStr^(0+128)+1),w
  1217  0C1F  160A  118A  2369  120A  158A  	fcall	_dataCtrl
  1218                           
  1219                           ;LE7-3.c: 159: dataCtrl('%');
  1220  0C24  3025               	movlw	37
  1221  0C25  160A  118A  2369  120A  158A  	fcall	_dataCtrl
  1222                           
  1223                           ;LE7-3.c: 162: I2C_Start();
  1224  0C2A  160A  118A  2333  120A  158A  	fcall	_I2C_Start
  1225                           
  1226                           ;LE7-3.c: 163: I2C_Send(0x80);
  1227  0C2F  3080               	movlw	128
  1228  0C30  160A  118A  2351  120A  158A  	fcall	_I2C_Send
  1229                           
  1230                           ;LE7-3.c: 164: I2C_Send(0xFE);
  1231  0C35  30FE               	movlw	254
  1232  0C36  160A  118A  2351  120A  158A  	fcall	_I2C_Send
  1233                           
  1234                           ;LE7-3.c: 165: I2C_Send(0xE3);
  1235  0C3B  30E3               	movlw	227
  1236  0C3C  160A  118A  2351  120A  158A  	fcall	_I2C_Send
  1237                           
  1238                           ;LE7-3.c: 166: I2C_RepeatedStart();
  1239  0C41  160A  118A  232C  120A  158A  	fcall	_I2C_RepeatedStart
  1240                           
  1241                           ;LE7-3.c: 167: I2C_Send(0x81);
  1242  0C46  3081               	movlw	129
  1243  0C47  160A  118A  2351  120A  158A  	fcall	_I2C_Send
  1244                           
  1245                           ;LE7-3.c: 168: MSBT = I2C_Receive(1);
  1246  0C4C  3001               	movlw	1
  1247  0C4D  160A  118A  2435  120A  158A  	fcall	_I2C_Receive
  1248  0C52  1283               	bcf	3,5	;RP0=0, select bank0
  1249  0C53  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0C54  00ED               	movwf	??_main
  1251  0C55  01EE               	clrf	??_main+1
  1252  0C56  086D               	movf	??_main,w
  1253  0C57  1683               	bsf	3,5	;RP0=1, select bank1
  1254  0C58  1303               	bcf	3,6	;RP1=0, select bank1
  1255  0C59  00D2               	movwf	main@MSBT^(0+128)
  1256  0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0C5C  086E               	movf	??_main+1,w
  1259  0C5D  1683               	bsf	3,5	;RP0=1, select bank1
  1260  0C5E  1303               	bcf	3,6	;RP1=0, select bank1
  1261  0C5F  00D3               	movwf	(main@MSBT+1)^(0+128)
  1262                           
  1263                           ;LE7-3.c: 169: LSBT = I2C_Receive(0);
  1264  0C60  3000               	movlw	0
  1265  0C61  160A  118A  2435  120A  158A  	fcall	_I2C_Receive
  1266  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0C68  00ED               	movwf	??_main
  1269  0C69  01EE               	clrf	??_main+1
  1270  0C6A  086D               	movf	??_main,w
  1271  0C6B  1683               	bsf	3,5	;RP0=1, select bank1
  1272  0C6C  1303               	bcf	3,6	;RP1=0, select bank1
  1273  0C6D  00CA               	movwf	main@LSBT^(0+128)
  1274  0C6E  1283               	bcf	3,5	;RP0=0, select bank0
  1275  0C6F  1303               	bcf	3,6	;RP1=0, select bank0
  1276  0C70  086E               	movf	??_main+1,w
  1277  0C71  1683               	bsf	3,5	;RP0=1, select bank1
  1278  0C72  1303               	bcf	3,6	;RP1=0, select bank1
  1279  0C73  00CB               	movwf	(main@LSBT+1)^(0+128)
  1280                           
  1281                           ;LE7-3.c: 170: I2C_Stop();
  1282  0C74  160A  118A  233A  120A  158A  	fcall	_I2C_Stop
  1283                           
  1284                           ;LE7-3.c: 171: _delay((unsigned long)((50)*(4000000/4000.0)));
  1285  0C79  3041               	movlw	65
  1286  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0C7C  00EE               	movwf	??_main+1
  1289  0C7D  30EE               	movlw	238
  1290  0C7E  00ED               	movwf	??_main
  1291  0C7F                     u3667:	
  1292  0C7F  0BED               	decfsz	??_main,f
  1293  0C80  2C7F               	goto	u3667
  1294  0C81  0BEE               	decfsz	??_main+1,f
  1295  0C82  2C7F               	goto	u3667
  1296  0C83  0000               	nop
  1297                           
  1298                           ;LE7-3.c: 173: LSBT &= 0xFC;
  1299  0C84  30FC               	movlw	252
  1300  0C85  1683               	bsf	3,5	;RP0=1, select bank1
  1301  0C86  1303               	bcf	3,6	;RP1=0, select bank1
  1302  0C87  05CA               	andwf	main@LSBT^(0+128),f
  1303  0C88  3000               	movlw	0
  1304  0C89  05CB               	andwf	(main@LSBT+1)^(0+128),f
  1305                           
  1306                           ;LE7-3.c: 174: MSBT <<= 8;
  1307  0C8A  3008               	movlw	8
  1308  0C8B                     u3645:	
  1309  0C8B  1003               	clrc
  1310  0C8C  0DD2               	rlf	main@MSBT^(0+128),f
  1311  0C8D  0DD3               	rlf	(main@MSBT+1)^(0+128),f
  1312  0C8E  3EFF               	addlw	-1
  1313  0C8F  1D03               	skipz
  1314  0C90  2C8B               	goto	u3645
  1315                           
  1316                           ;LE7-3.c: 175: MSBT |= LSBT;
  1317  0C91  084A               	movf	main@LSBT^(0+128),w
  1318  0C92  04D2               	iorwf	main@MSBT^(0+128),f
  1319  0C93  084B               	movf	(main@LSBT+1)^(0+128),w
  1320  0C94  04D3               	iorwf	(main@MSBT+1)^(0+128),f
  1321                           
  1322                           ;LE7-3.c: 177: temperature = -46.85 + (175.72 * (MSBT / 65536.0));
  1323  0C95  3066               	movlw	102
  1324  0C96  1283               	bcf	3,5	;RP0=0, select bank0
  1325  0C97  1303               	bcf	3,6	;RP1=0, select bank0
  1326  0C98  00D0               	movwf	___ftadd@f1
  1327  0C99  303B               	movlw	59
  1328  0C9A  00D1               	movwf	___ftadd@f1+1
  1329  0C9B  30C2               	movlw	194
  1330  0C9C  00D2               	movwf	___ftadd@f1+2
  1331  0C9D  30B8               	movlw	184
  1332  0C9E  00B0               	movwf	___ftmul@f1
  1333  0C9F  302F               	movlw	47
  1334  0CA0  00B1               	movwf	___ftmul@f1+1
  1335  0CA1  3043               	movlw	67
  1336  0CA2  00B2               	movwf	___ftmul@f1+2
  1337  0CA3  3000               	movlw	0
  1338  0CA4  00A0               	movwf	___ftdiv@f2
  1339  0CA5  3080               	movlw	128
  1340  0CA6  00A1               	movwf	___ftdiv@f2+1
  1341  0CA7  3047               	movlw	71
  1342  0CA8  00A2               	movwf	___ftdiv@f2+2
  1343  0CA9  1683               	bsf	3,5	;RP0=1, select bank1
  1344  0CAA  1303               	bcf	3,6	;RP1=0, select bank1
  1345  0CAB  0853               	movf	(main@MSBT+1)^(0+128),w
  1346  0CAC  01F9               	clrf	___lwtoft@c+1
  1347  0CAD  07F9               	addwf	___lwtoft@c+1,f
  1348  0CAE  0852               	movf	main@MSBT^(0+128),w
  1349  0CAF  01F8               	clrf	___lwtoft@c
  1350  0CB0  07F8               	addwf	___lwtoft@c,f
  1351  0CB1  160A  118A  23A2  120A  158A  	fcall	___lwtoft
  1352  0CB6  0878               	movf	?___lwtoft,w
  1353  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  1354  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  1355  0CB9  00A3               	movwf	___ftdiv@f1
  1356  0CBA  0879               	movf	?___lwtoft+1,w
  1357  0CBB  00A4               	movwf	___ftdiv@f1+1
  1358  0CBC  087A               	movf	?___lwtoft+2,w
  1359  0CBD  00A5               	movwf	___ftdiv@f1+2
  1360  0CBE  120A  158A  2002  120A  158A  	fcall	___ftdiv
  1361  0CC3  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0CC4  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0CC5  0820               	movf	?___ftdiv,w
  1364  0CC6  00B3               	movwf	___ftmul@f2
  1365  0CC7  0821               	movf	?___ftdiv+1,w
  1366  0CC8  00B4               	movwf	___ftmul@f2+1
  1367  0CC9  0822               	movf	?___ftdiv+2,w
  1368  0CCA  00B5               	movwf	___ftmul@f2+2
  1369  0CCB  160A  118A  272D  120A  158A  	fcall	___ftmul
  1370  0CD0  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0CD1  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0CD2  0830               	movf	?___ftmul,w
  1373  0CD3  00D3               	movwf	___ftadd@f2
  1374  0CD4  0831               	movf	?___ftmul+1,w
  1375  0CD5  00D4               	movwf	___ftadd@f2+1
  1376  0CD6  0832               	movf	?___ftmul+2,w
  1377  0CD7  00D5               	movwf	___ftadd@f2+2
  1378  0CD8  120A  158A  20BA  120A  158A  	fcall	___ftadd
  1379  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  1380  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  1381  0CDF  0850               	movf	?___ftadd,w
  1382  0CE0  1683               	bsf	3,5	;RP0=1, select bank1
  1383  0CE1  1303               	bcf	3,6	;RP1=0, select bank1
  1384  0CE2  00C5               	movwf	main@temperature^(0+128)
  1385  0CE3  1283               	bcf	3,5	;RP0=0, select bank0
  1386  0CE4  1303               	bcf	3,6	;RP1=0, select bank0
  1387  0CE5  0851               	movf	?___ftadd+1,w
  1388  0CE6  1683               	bsf	3,5	;RP0=1, select bank1
  1389  0CE7  1303               	bcf	3,6	;RP1=0, select bank1
  1390  0CE8  00C6               	movwf	(main@temperature+1)^(0+128)
  1391  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  1392  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  1393  0CEB  0852               	movf	?___ftadd+2,w
  1394  0CEC  1683               	bsf	3,5	;RP0=1, select bank1
  1395  0CED  1303               	bcf	3,6	;RP1=0, select bank1
  1396  0CEE  00C7               	movwf	(main@temperature+2)^(0+128)
  1397                           
  1398                           ;LE7-3.c: 178: sprintf(temperatureStr, "%f", temperature);
  1399  0CEF  308E               	movlw	(STR_3-__stringbase)& (0+255)
  1400  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0CF2  00ED               	movwf	??_main
  1403  0CF3  086D               	movf	??_main,w
  1404  0CF4  00E3               	movwf	sprintf@f
  1405  0CF5  1683               	bsf	3,5	;RP0=1, select bank1
  1406  0CF6  1303               	bcf	3,6	;RP1=0, select bank1
  1407  0CF7  0845               	movf	main@temperature^(0+128),w
  1408  0CF8  1283               	bcf	3,5	;RP0=0, select bank0
  1409  0CF9  1303               	bcf	3,6	;RP1=0, select bank0
  1410  0CFA  00E4               	movwf	?_sprintf+1
  1411  0CFB  1683               	bsf	3,5	;RP0=1, select bank1
  1412  0CFC  1303               	bcf	3,6	;RP1=0, select bank1
  1413  0CFD  0846               	movf	(main@temperature+1)^(0+128),w
  1414  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0D00  00E5               	movwf	?_sprintf+2
  1417  0D01  1683               	bsf	3,5	;RP0=1, select bank1
  1418  0D02  1303               	bcf	3,6	;RP1=0, select bank1
  1419  0D03  0847               	movf	(main@temperature+2)^(0+128),w
  1420  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  1421  0D05  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0D06  00E6               	movwf	?_sprintf+3
  1423  0D07  30D4               	movlw	main@temperatureStr& (0+255)
  1424  0D08  120A  118A  2263  120A  158A  	fcall	_sprintf
  1425                           
  1426                           ;LE7-3.c: 180: instCtrl(0xCD);
  1427  0D0D  30CD               	movlw	205
  1428  0D0E  160A  118A  237C  120A  158A  	fcall	_instCtrl
  1429                           
  1430                           ;LE7-3.c: 181: dataCtrl(temperatureStr[0]);
  1431  0D13  1683               	bsf	3,5	;RP0=1, select bank1
  1432  0D14  1303               	bcf	3,6	;RP1=0, select bank1
  1433  0D15  0854               	movf	main@temperatureStr^(0+128),w
  1434  0D16  160A  118A  2369  120A  158A  	fcall	_dataCtrl
  1435                           
  1436                           ;LE7-3.c: 182: dataCtrl(temperatureStr[1]);
  1437  0D1B  1683               	bsf	3,5	;RP0=1, select bank1
  1438  0D1C  1303               	bcf	3,6	;RP1=0, select bank1
  1439  0D1D  0855               	movf	(main@temperatureStr^(0+128)+1),w
  1440  0D1E  160A  118A  2369  120A  158A  	fcall	_dataCtrl
  1441                           
  1442                           ;LE7-3.c: 183: dataCtrl(temperatureStr[2]);
  1443  0D23  1683               	bsf	3,5	;RP0=1, select bank1
  1444  0D24  1303               	bcf	3,6	;RP1=0, select bank1
  1445  0D25  0856               	movf	(main@temperatureStr^(0+128)+2),w
  1446  0D26  160A  118A  2369  120A  158A  	fcall	_dataCtrl
  1447                           
  1448                           ;LE7-3.c: 184: dataCtrl(temperatureStr[3]);
  1449  0D2B  1683               	bsf	3,5	;RP0=1, select bank1
  1450  0D2C  1303               	bcf	3,6	;RP1=0, select bank1
  1451  0D2D  0857               	movf	(main@temperatureStr^(0+128)+3),w
  1452  0D2E  160A  118A  2369  120A  158A  	fcall	_dataCtrl
  1453                           
  1454                           ;LE7-3.c: 185: dataCtrl(0xDF);
  1455  0D33  30DF               	movlw	223
  1456  0D34  160A  118A  2369  120A  158A  	fcall	_dataCtrl
  1457                           
  1458                           ;LE7-3.c: 186: dataCtrl("C");
  1459  0D39  3096               	movlw	STR_5& (0+255)
  1460  0D3A  160A  118A  2369  120A  158A  	fcall	_dataCtrl
  1461                           
  1462                           ;LE7-3.c: 188: I2C_Start();
  1463  0D3F  160A  118A  2333  120A  158A  	fcall	_I2C_Start
  1464                           
  1465                           ;LE7-3.c: 189: I2C_Send(0x80);
  1466  0D44  3080               	movlw	128
  1467  0D45  160A  118A  2351  120A  158A  	fcall	_I2C_Send
  1468                           
  1469                           ;LE7-3.c: 190: I2C_Send(0xFE);
  1470  0D4A  30FE               	movlw	254
  1471  0D4B  160A  118A  2351  120A  158A  	fcall	_I2C_Send
  1472                           
  1473                           ;LE7-3.c: 191: I2C_Stop();
  1474  0D50  160A  118A  233A  120A  158A  	fcall	_I2C_Stop
  1475                           
  1476                           ;LE7-3.c: 192: _delay((unsigned long)((50)*(4000000/4000.0)));
  1477  0D55  3041               	movlw	65
  1478  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  1479  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  1480  0D58  00EE               	movwf	??_main+1
  1481  0D59  30EE               	movlw	238
  1482  0D5A  00ED               	movwf	??_main
  1483  0D5B                     u3677:	
  1484  0D5B  0BED               	decfsz	??_main,f
  1485  0D5C  2D5B               	goto	u3677
  1486  0D5D  0BEE               	decfsz	??_main+1,f
  1487  0D5E  2D5B               	goto	u3677
  1488  0D5F  0000               	nop
  1489  0D60  2B1B               	goto	l84
  1490  0D61                     __end_of_main:	
  1491                           
  1492                           	psect	text1
  1493  0263                     __ptext1:	
  1494 ;; *************** function _sprintf *****************
  1495 ;; Defined at:
  1496 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  sp              1    wreg     PTR unsigned char 
  1499 ;;		 -> main@temperatureStr(4), main@humidityStr(4), 
  1500 ;;  f               1   67[BANK0 ] PTR const unsigned char 
  1501 ;;		 -> STR_4(3), STR_3(3), 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  1504 ;;		 -> main@temperatureStr(4), main@humidityStr(4), 
  1505 ;;  vd              4    8[BANK1 ] unsigned long 
  1506 ;;  vd              4   12[BANK1 ] unsigned long 
  1507 ;;  _val            4   20[BANK1 ] struct .
  1508 ;;  fval            3   30[BANK1 ] struct .
  1509 ;;  integ           3   24[BANK1 ] struct .
  1510 ;;  ival            3    0        struct .
  1511 ;;  exp             2   27[BANK1 ] int 
  1512 ;;  prec            2   18[BANK1 ] int 
  1513 ;;  flag            2   16[BANK1 ] unsigned short 
  1514 ;;  width           2    0        int 
  1515 ;;  c               1   33[BANK1 ] char 
  1516 ;;  ap              1    7[BANK1 ] PTR void [1]
  1517 ;;		 -> ?_sprintf(2), 
  1518 ;;  d               1    0        unsigned char 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  2   67[BANK0 ] int 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1528 ;;      Params:         0       4       0       0       0
  1529 ;;      Locals:         0       0      34       0       0
  1530 ;;      Temps:          0       6       0       0       0
  1531 ;;      Totals:         0      10      34       0       0
  1532 ;;Total ram usage:       44 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    3
  1535 ;; This function calls:
  1536 ;;		___awdiv
  1537 ;;		___ftadd
  1538 ;;		___ftge
  1539 ;;		___ftmul
  1540 ;;		___ftneg
  1541 ;;		___ftsub
  1542 ;;		___fttol
  1543 ;;		___lldiv
  1544 ;;		___llmod
  1545 ;;		___lltoft
  1546 ;;		___wmul
  1547 ;;		__div_to_l_
  1548 ;;		__tdiv_to_l_
  1549 ;;		_fround
  1550 ;;		_scale
  1551 ;; This function is called by:
  1552 ;;		_main
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           
  1557                           ;psect for function _sprintf
  1558  0263                     _sprintf:	
  1559                           
  1560                           ;incstack = 0
  1561                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1562                           ;sprintf@sp stored from wreg
  1563  0263  1683               	bsf	3,5	;RP0=1, select bank1
  1564  0264  1303               	bcf	3,6	;RP1=0, select bank1
  1565  0265  00BD               	movwf	sprintf@sp^(0+128)
  1566                           
  1567                           ;doprnt.c: 494: va_list ap;
  1568                           ;doprnt.c: 499: signed char c;
  1569                           ;doprnt.c: 501: int width;
  1570                           ;doprnt.c: 504: int prec;
  1571                           ;doprnt.c: 508: unsigned short flag;
  1572                           ;doprnt.c: 515: char d;
  1573                           ;doprnt.c: 516: double fval, integ;
  1574                           ;doprnt.c: 517: int exp;
  1575                           ;doprnt.c: 518: double ival;
  1576                           ;doprnt.c: 519: union {
  1577                           ;doprnt.c: 520: unsigned long _val;
  1578                           ;doprnt.c: 521: struct {
  1579                           ;doprnt.c: 522: const char * _cp;
  1580                           ;doprnt.c: 523: unsigned _len;
  1581                           ;doprnt.c: 524: } _str;
  1582                           ;doprnt.c: 525: } _val;
  1583                           ;doprnt.c: 542: *ap = __va_start();
  1584  0266  3064               	movlw	(?_sprintf+1)& (0+255)
  1585  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1586  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1587  0269  00E7               	movwf	??_sprintf
  1588  026A  0867               	movf	??_sprintf,w
  1589  026B  1683               	bsf	3,5	;RP0=1, select bank1
  1590  026C  1303               	bcf	3,6	;RP1=0, select bank1
  1591  026D  00A7               	movwf	sprintf@ap^(0+128)
  1592  026E                     l2455:	
  1593                           ;doprnt.c: 545: while(c = *f++) {
  1594                           
  1595  026E  3001               	movlw	1
  1596  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1597  0270  07E3               	addwf	sprintf@f,f
  1598  0271  30FF               	movlw	-1
  1599  0272  0763               	addwf	sprintf@f,w
  1600  0273  0084               	movwf	4
  1601  0274  160A  118A  2000  120A  118A  	fcall	stringdir
  1602  0279  00E7               	movwf	??_sprintf
  1603  027A  0867               	movf	??_sprintf,w
  1604  027B  1683               	bsf	3,5	;RP0=1, select bank1
  1605  027C  1303               	bcf	3,6	;RP1=0, select bank1
  1606  027D  00C1               	movwf	sprintf@c^(0+128)
  1607  027E  08C1               	movf	sprintf@c^(0+128),f
  1608  027F  1903               	btfsc	3,2
  1609  0280  2FF7               	goto	l2457
  1610                           
  1611                           ;doprnt.c: 547: if(c != '%')
  1612  0281  0841               	movf	sprintf@c^(0+128),w
  1613  0282  3A25               	xorlw	37
  1614  0283  1903               	skipnz
  1615  0284  2A89               	goto	l2303
  1616                           
  1617                           ;doprnt.c: 549: {
  1618                           ;doprnt.c: 550: ((*sp++ = (c)));
  1619  0285  0841               	movf	sprintf@c^(0+128),w
  1620  0286  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0287  1303               	bcf	3,6	;RP1=0, select bank0
  1622  0288  2FE6               	goto	L6
  1623  0289                     l2303:	
  1624                           ;doprnt.c: 551: continue;
  1625                           
  1626                           
  1627                           ;doprnt.c: 552: }
  1628                           ;doprnt.c: 557: flag = 0;
  1629  0289  01B0               	clrf	sprintf@flag^(0+128)
  1630  028A  01B1               	clrf	(sprintf@flag+1)^(0+128)
  1631                           
  1632                           ;doprnt.c: 644: switch(c = *f++) {
  1633  028B  2A8E               	goto	l2307
  1634  028C                     l126:	
  1635                           ;doprnt.c: 671: case 'f':
  1636                           
  1637                           ;doprnt.c: 647: goto alldone;
  1638                           
  1639                           ;doprnt.c: 646: case 0:
  1640                           
  1641                           
  1642                           ;doprnt.c: 672: flag |= 0x400;
  1643  028C  1531               	bsf	(sprintf@flag^(0+128)+1),2
  1644                           
  1645                           ;doprnt.c: 673: break;
  1646  028D  2AA4               	goto	l2309
  1647  028E                     l2307:	
  1648                           ;doprnt.c: 831: }
  1649                           
  1650                           ;doprnt.c: 822: continue;
  1651                           
  1652                           ;doprnt.c: 811: default:
  1653                           
  1654  028E  3001               	movlw	1
  1655  028F  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0290  1303               	bcf	3,6	;RP1=0, select bank0
  1657  0291  07E3               	addwf	sprintf@f,f
  1658  0292  30FF               	movlw	-1
  1659  0293  0763               	addwf	sprintf@f,w
  1660  0294  0084               	movwf	4
  1661  0295  160A  118A  2000  120A  118A  	fcall	stringdir
  1662  029A  1683               	bsf	3,5	;RP0=1, select bank1
  1663  029B  1303               	bcf	3,6	;RP1=0, select bank1
  1664  029C  00C1               	movwf	sprintf@c^(0+128)
  1665                           
  1666                           ; Switch size 1, requested type "space"
  1667                           ; Number of cases is 2, Range of values is 0 to 102
  1668                           ; switch strategies available:
  1669                           ; Name         Instructions Cycles
  1670                           ; simple_byte            7     4 (average)
  1671                           ; jumptable            260     6 (fixed)
  1672                           ;	Chosen strategy is simple_byte
  1673  029D  3A00               	xorlw	0	; case 0
  1674  029E  1903               	skipnz
  1675  029F  2FF7               	goto	l2457
  1676  02A0  3A66               	xorlw	102	; case 102
  1677  02A1  1903               	skipnz
  1678  02A2  2A8C               	goto	l126
  1679  02A3  2A6E               	goto	l2455
  1680  02A4                     l2309:	
  1681                           
  1682                           ;doprnt.c: 834: if(flag & (0x700)) {
  1683  02A4  3000               	movlw	0
  1684  02A5  0530               	andwf	sprintf@flag^(0+128),w
  1685  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1686  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1687  02A8  00E7               	movwf	??_sprintf
  1688  02A9  3007               	movlw	7
  1689  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  1690  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  1691  02AC  0531               	andwf	(sprintf@flag+1)^(0+128),w
  1692  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1693  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1694  02AF  00E8               	movwf	??_sprintf+1
  1695  02B0  0868               	movf	??_sprintf+1,w
  1696  02B1  0467               	iorwf	??_sprintf,w
  1697  02B2  1903               	skipnz
  1698  02B3  2FD3               	goto	l2449
  1699                           
  1700                           ;doprnt.c: 838: prec = 6;
  1701  02B4  3006               	movlw	6
  1702  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  1703  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  1704  02B7  00B2               	movwf	sprintf@prec^(0+128)
  1705  02B8  3000               	movlw	0
  1706  02B9  00B3               	movwf	(sprintf@prec^(0+128)+1)
  1707                           
  1708                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1709  02BA  0827               	movf	sprintf@ap^(0+128),w
  1710  02BB  0084               	movwf	4
  1711  02BC  1383               	bcf	3,7	;select IRP bank0
  1712  02BD  0800               	movf	0,w
  1713  02BE  00BE               	movwf	sprintf@fval^(0+128)
  1714  02BF  0A84               	incf	4,f
  1715  02C0  0800               	movf	0,w
  1716  02C1  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1717  02C2  0A84               	incf	4,f
  1718  02C3  0800               	movf	0,w
  1719  02C4  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1720  02C5  3003               	movlw	3
  1721  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  1722  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  1723  02C8  00E7               	movwf	??_sprintf
  1724  02C9  0867               	movf	??_sprintf,w
  1725  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1726  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1727  02CC  07A7               	addwf	sprintf@ap^(0+128),f
  1728                           
  1729                           ;doprnt.c: 840: if(fval < 0.0) {
  1730  02CD  083E               	movf	sprintf@fval^(0+128),w
  1731  02CE  00F0               	movwf	___ftge@ff1
  1732  02CF  083F               	movf	(sprintf@fval+1)^(0+128),w
  1733  02D0  00F1               	movwf	___ftge@ff1+1
  1734  02D1  0840               	movf	(sprintf@fval+2)^(0+128),w
  1735  02D2  00F2               	movwf	___ftge@ff1+2
  1736  02D3  3000               	movlw	0
  1737  02D4  00F3               	movwf	___ftge@ff2
  1738  02D5  3000               	movlw	0
  1739  02D6  00F4               	movwf	___ftge@ff2+1
  1740  02D7  3000               	movlw	0
  1741  02D8  00F5               	movwf	___ftge@ff2+2
  1742  02D9  160A  118A  251F  120A  118A  	fcall	___ftge
  1743  02DE  1803               	btfsc	3,0
  1744  02DF  2AF9               	goto	l2323
  1745                           
  1746                           ;doprnt.c: 841: fval = -fval;
  1747  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  1748  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  1749  02E2  083E               	movf	sprintf@fval^(0+128),w
  1750  02E3  00F0               	movwf	___ftneg@f1
  1751  02E4  083F               	movf	(sprintf@fval+1)^(0+128),w
  1752  02E5  00F1               	movwf	___ftneg@f1+1
  1753  02E6  0840               	movf	(sprintf@fval+2)^(0+128),w
  1754  02E7  00F2               	movwf	___ftneg@f1+2
  1755  02E8  160A  118A  2349  120A  118A  	fcall	___ftneg
  1756  02ED  0870               	movf	?___ftneg,w
  1757  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  1758  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  1759  02F0  00BE               	movwf	sprintf@fval^(0+128)
  1760  02F1  0871               	movf	?___ftneg+1,w
  1761  02F2  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1762  02F3  0872               	movf	?___ftneg+2,w
  1763  02F4  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1764                           
  1765                           ;doprnt.c: 842: flag |= 0x03;
  1766  02F5  3003               	movlw	3
  1767  02F6  04B0               	iorwf	sprintf@flag^(0+128),f
  1768  02F7  3000               	movlw	0
  1769  02F8  04B1               	iorwf	(sprintf@flag+1)^(0+128),f
  1770  02F9                     l2323:	
  1771                           
  1772                           ;doprnt.c: 843: }
  1773                           ;doprnt.c: 844: exp = 0;
  1774  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  1775  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  1776  02FB  01BB               	clrf	sprintf@exp^(0+128)
  1777  02FC  01BC               	clrf	(sprintf@exp+1)^(0+128)
  1778                           
  1779                           ;doprnt.c: 845: if( fval!=0) {
  1780  02FD  0840               	movf	(sprintf@fval+2)^(0+128),w
  1781  02FE  043F               	iorwf	(sprintf@fval+1)^(0+128),w
  1782  02FF  043E               	iorwf	sprintf@fval^(0+128),w
  1783  0300  1903               	skipnz
  1784  0301  2BF5               	goto	l2351
  1785                           
  1786                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1787  0302  30BE               	movlw	low sprintf@fval
  1788  0303  0084               	movwf	4
  1789  0304  1383               	bcf	3,7	;select IRP bank1
  1790  0305  0800               	movf	0,w
  1791  0306  1283               	bcf	3,5	;RP0=0, select bank0
  1792  0307  1303               	bcf	3,6	;RP1=0, select bank0
  1793  0308  00E7               	movwf	??_sprintf
  1794  0309  0A84               	incf	4,f
  1795  030A  0800               	movf	0,w
  1796  030B  00E8               	movwf	??_sprintf+1
  1797  030C  0A84               	incf	4,f
  1798  030D  0800               	movf	0,w
  1799  030E  00E9               	movwf	??_sprintf+2
  1800  030F  0A84               	incf	4,f
  1801  0310  0800               	movf	0,w
  1802  0311  00EA               	movwf	??_sprintf+3
  1803  0312  300F               	movlw	15
  1804  0313                     u3295:	
  1805  0313  1003               	clrc
  1806  0314  0CEA               	rrf	??_sprintf+3,f
  1807  0315  0CE9               	rrf	??_sprintf+2,f
  1808  0316  0CE8               	rrf	??_sprintf+1,f
  1809  0317  0CE7               	rrf	??_sprintf,f
  1810  0318  3EFF               	addlw	-1
  1811  0319  1D03               	skipz
  1812  031A  2B13               	goto	u3295
  1813  031B  30FF               	movlw	255
  1814  031C  0567               	andwf	??_sprintf,w
  1815  031D  00EB               	movwf	??_sprintf+4
  1816  031E  3000               	movlw	0
  1817  031F  0568               	andwf	??_sprintf+1,w
  1818  0320  00EC               	movwf	??_sprintf+5
  1819  0321  086B               	movf	??_sprintf+4,w
  1820  0322  3E82               	addlw	130
  1821  0323  1683               	bsf	3,5	;RP0=1, select bank1
  1822  0324  1303               	bcf	3,6	;RP1=0, select bank1
  1823  0325  00BB               	movwf	sprintf@exp^(0+128)
  1824  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1825  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1826  0328  086C               	movf	??_sprintf+5,w
  1827  0329  1803               	skipnc
  1828  032A  3E01               	addlw	1
  1829  032B  3EFF               	addlw	255
  1830  032C  1683               	bsf	3,5	;RP0=1, select bank1
  1831  032D  1303               	bcf	3,6	;RP1=0, select bank1
  1832  032E  00BC               	movwf	(sprintf@exp+1)^(0+128)
  1833                           
  1834                           ;doprnt.c: 847: exp--;
  1835  032F  30FF               	movlw	255
  1836  0330  07BB               	addwf	sprintf@exp^(0+128),f
  1837  0331  1803               	skipnc
  1838  0332  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  1839  0333  30FF               	movlw	255
  1840  0334  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  1841                           
  1842                           ;doprnt.c: 848: exp *= 3;
  1843  0335  3003               	movlw	3
  1844  0336  00F0               	movwf	___wmul@multiplier
  1845  0337  3000               	movlw	0
  1846  0338  00F1               	movwf	___wmul@multiplier+1
  1847  0339  083C               	movf	(sprintf@exp+1)^(0+128),w
  1848  033A  01F3               	clrf	___wmul@multiplicand+1
  1849  033B  07F3               	addwf	___wmul@multiplicand+1,f
  1850  033C  083B               	movf	sprintf@exp^(0+128),w
  1851  033D  01F2               	clrf	___wmul@multiplicand
  1852  033E  07F2               	addwf	___wmul@multiplicand,f
  1853  033F  160A  118A  23EE  120A  118A  	fcall	___wmul
  1854  0344  0871               	movf	?___wmul+1,w
  1855  0345  1683               	bsf	3,5	;RP0=1, select bank1
  1856  0346  1303               	bcf	3,6	;RP1=0, select bank1
  1857  0347  01BC               	clrf	(sprintf@exp+1)^(0+128)
  1858  0348  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  1859  0349  0870               	movf	?___wmul,w
  1860  034A  01BB               	clrf	sprintf@exp^(0+128)
  1861  034B  07BB               	addwf	sprintf@exp^(0+128),f
  1862                           
  1863                           ;doprnt.c: 849: exp /= 10;
  1864  034C  300A               	movlw	10
  1865  034D  00F7               	movwf	___awdiv@divisor
  1866  034E  3000               	movlw	0
  1867  034F  00F8               	movwf	___awdiv@divisor+1
  1868  0350  083C               	movf	(sprintf@exp+1)^(0+128),w
  1869  0351  01FA               	clrf	___awdiv@dividend+1
  1870  0352  07FA               	addwf	___awdiv@dividend+1,f
  1871  0353  083B               	movf	sprintf@exp^(0+128),w
  1872  0354  01F9               	clrf	___awdiv@dividend
  1873  0355  07F9               	addwf	___awdiv@dividend,f
  1874  0356  160A  118A  257C  120A  118A  	fcall	___awdiv
  1875  035B  0878               	movf	?___awdiv+1,w
  1876  035C  1683               	bsf	3,5	;RP0=1, select bank1
  1877  035D  1303               	bcf	3,6	;RP1=0, select bank1
  1878  035E  01BC               	clrf	(sprintf@exp+1)^(0+128)
  1879  035F  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  1880  0360  0877               	movf	?___awdiv,w
  1881  0361  01BB               	clrf	sprintf@exp^(0+128)
  1882  0362  07BB               	addwf	sprintf@exp^(0+128),f
  1883                           
  1884                           ;doprnt.c: 850: if(exp < 0)
  1885  0363  1FBC               	btfss	(sprintf@exp+1)^(0+128),7
  1886  0364  2B6B               	goto	l2339
  1887                           
  1888                           ;doprnt.c: 851: exp--;
  1889  0365  30FF               	movlw	255
  1890  0366  07BB               	addwf	sprintf@exp^(0+128),f
  1891  0367  1803               	skipnc
  1892  0368  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  1893  0369  30FF               	movlw	255
  1894  036A  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  1895  036B                     l2339:	
  1896                           
  1897                           ;doprnt.c: 855: integ = scale(-exp);
  1898  036B  033B               	decf	sprintf@exp^(0+128),w
  1899  036C  3AFF               	xorlw	255
  1900  036D  120A  158A  2561  120A  118A  	fcall	_scale
  1901  0372  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0373  1303               	bcf	3,6	;RP1=0, select bank0
  1903  0374  0840               	movf	?_scale,w
  1904  0375  1683               	bsf	3,5	;RP0=1, select bank1
  1905  0376  1303               	bcf	3,6	;RP1=0, select bank1
  1906  0377  00B8               	movwf	sprintf@integ^(0+128)
  1907  0378  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0379  1303               	bcf	3,6	;RP1=0, select bank0
  1909  037A  0841               	movf	?_scale+1,w
  1910  037B  1683               	bsf	3,5	;RP0=1, select bank1
  1911  037C  1303               	bcf	3,6	;RP1=0, select bank1
  1912  037D  00B9               	movwf	(sprintf@integ+1)^(0+128)
  1913  037E  1283               	bcf	3,5	;RP0=0, select bank0
  1914  037F  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0380  0842               	movf	?_scale+2,w
  1916  0381  1683               	bsf	3,5	;RP0=1, select bank1
  1917  0382  1303               	bcf	3,6	;RP1=0, select bank1
  1918  0383  00BA               	movwf	(sprintf@integ+2)^(0+128)
  1919                           
  1920                           ;doprnt.c: 856: integ *= fval;
  1921  0384  083E               	movf	sprintf@fval^(0+128),w
  1922  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1923  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1924  0387  00B0               	movwf	___ftmul@f1
  1925  0388  1683               	bsf	3,5	;RP0=1, select bank1
  1926  0389  1303               	bcf	3,6	;RP1=0, select bank1
  1927  038A  083F               	movf	(sprintf@fval+1)^(0+128),w
  1928  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1929  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1930  038D  00B1               	movwf	___ftmul@f1+1
  1931  038E  1683               	bsf	3,5	;RP0=1, select bank1
  1932  038F  1303               	bcf	3,6	;RP1=0, select bank1
  1933  0390  0840               	movf	(sprintf@fval+2)^(0+128),w
  1934  0391  1283               	bcf	3,5	;RP0=0, select bank0
  1935  0392  1303               	bcf	3,6	;RP1=0, select bank0
  1936  0393  00B2               	movwf	___ftmul@f1+2
  1937  0394  1683               	bsf	3,5	;RP0=1, select bank1
  1938  0395  1303               	bcf	3,6	;RP1=0, select bank1
  1939  0396  0838               	movf	sprintf@integ^(0+128),w
  1940  0397  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0398  1303               	bcf	3,6	;RP1=0, select bank0
  1942  0399  00B3               	movwf	___ftmul@f2
  1943  039A  1683               	bsf	3,5	;RP0=1, select bank1
  1944  039B  1303               	bcf	3,6	;RP1=0, select bank1
  1945  039C  0839               	movf	(sprintf@integ+1)^(0+128),w
  1946  039D  1283               	bcf	3,5	;RP0=0, select bank0
  1947  039E  1303               	bcf	3,6	;RP1=0, select bank0
  1948  039F  00B4               	movwf	___ftmul@f2+1
  1949  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  1950  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  1951  03A2  083A               	movf	(sprintf@integ+2)^(0+128),w
  1952  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1953  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1954  03A5  00B5               	movwf	___ftmul@f2+2
  1955  03A6  160A  118A  272D  120A  118A  	fcall	___ftmul
  1956  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  1957  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  1958  03AD  0830               	movf	?___ftmul,w
  1959  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  1960  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  1961  03B0  00B8               	movwf	sprintf@integ^(0+128)
  1962  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  1963  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  1964  03B3  0831               	movf	?___ftmul+1,w
  1965  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  1966  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  1967  03B6  00B9               	movwf	(sprintf@integ+1)^(0+128)
  1968  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1969  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1970  03B9  0832               	movf	?___ftmul+2,w
  1971  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  1972  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  1973  03BC  00BA               	movwf	(sprintf@integ+2)^(0+128)
  1974                           
  1975                           ;doprnt.c: 857: if(integ < 1.0)
  1976  03BD  0838               	movf	sprintf@integ^(0+128),w
  1977  03BE  00F0               	movwf	___ftge@ff1
  1978  03BF  0839               	movf	(sprintf@integ+1)^(0+128),w
  1979  03C0  00F1               	movwf	___ftge@ff1+1
  1980  03C1  083A               	movf	(sprintf@integ+2)^(0+128),w
  1981  03C2  00F2               	movwf	___ftge@ff1+2
  1982  03C3  3000               	movlw	0
  1983  03C4  00F3               	movwf	___ftge@ff2
  1984  03C5  3080               	movlw	128
  1985  03C6  00F4               	movwf	___ftge@ff2+1
  1986  03C7  303F               	movlw	63
  1987  03C8  00F5               	movwf	___ftge@ff2+2
  1988  03C9  160A  118A  251F  120A  118A  	fcall	___ftge
  1989  03CE  1803               	btfsc	3,0
  1990  03CF  2BD8               	goto	l2347
  1991                           
  1992                           ;doprnt.c: 858: exp--;
  1993  03D0  30FF               	movlw	255
  1994  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  1995  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  1996  03D3  07BB               	addwf	sprintf@exp^(0+128),f
  1997  03D4  1803               	skipnc
  1998  03D5  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  1999  03D6  30FF               	movlw	255
  2000  03D7  2BF4               	goto	L1
  2001  03D8                     l2347:	
  2002                           
  2003                           ;doprnt.c: 859: else if(integ >= 10.0)
  2004  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2005  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  2006  03DA  0838               	movf	sprintf@integ^(0+128),w
  2007  03DB  00F0               	movwf	___ftge@ff1
  2008  03DC  0839               	movf	(sprintf@integ+1)^(0+128),w
  2009  03DD  00F1               	movwf	___ftge@ff1+1
  2010  03DE  083A               	movf	(sprintf@integ+2)^(0+128),w
  2011  03DF  00F2               	movwf	___ftge@ff1+2
  2012  03E0  3000               	movlw	0
  2013  03E1  00F3               	movwf	___ftge@ff2
  2014  03E2  3020               	movlw	32
  2015  03E3  00F4               	movwf	___ftge@ff2+1
  2016  03E4  3041               	movlw	65
  2017  03E5  00F5               	movwf	___ftge@ff2+2
  2018  03E6  160A  118A  251F  120A  118A  	fcall	___ftge
  2019  03EB  1C03               	btfss	3,0
  2020  03EC  2BF5               	goto	l2351
  2021                           
  2022                           ;doprnt.c: 860: exp++;
  2023  03ED  3001               	movlw	1
  2024  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2025  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2026  03F0  07BB               	addwf	sprintf@exp^(0+128),f
  2027  03F1  1803               	skipnc
  2028  03F2  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  2029  03F3  3000               	movlw	0
  2030  03F4                     L1:	
  2031  03F4  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  2032  03F5                     l2351:	
  2033                           
  2034                           ;doprnt.c: 861: }
  2035                           ;doprnt.c: 1121: if(prec <= 12)
  2036  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2037  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  2038  03F7  0833               	movf	(sprintf@prec+1)^(0+128),w
  2039  03F8  3A80               	xorlw	128
  2040  03F9  00FF               	movwf	127
  2041  03FA  3080               	movlw	128
  2042  03FB  027F               	subwf	127,w
  2043  03FC  1D03               	skipz
  2044  03FD  2C00               	goto	u3335
  2045  03FE  300D               	movlw	13
  2046  03FF  0232               	subwf	sprintf@prec^(0+128),w
  2047  0400                     u3335:	
  2048  0400  1803               	skipnc
  2049  0401  2C3B               	goto	l2355
  2050                           
  2051                           ;doprnt.c: 1122: fval += fround(prec);
  2052  0402  1683               	bsf	3,5	;RP0=1, select bank1
  2053  0403  1303               	bcf	3,6	;RP1=0, select bank1
  2054  0404  0832               	movf	sprintf@prec^(0+128),w
  2055  0405  120A  118A  20C7  120A  118A  	fcall	_fround
  2056  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2057  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2058  040C  0840               	movf	?_fround,w
  2059  040D  00D0               	movwf	___ftadd@f1
  2060  040E  0841               	movf	?_fround+1,w
  2061  040F  00D1               	movwf	___ftadd@f1+1
  2062  0410  0842               	movf	?_fround+2,w
  2063  0411  00D2               	movwf	___ftadd@f1+2
  2064  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2065  0413  1303               	bcf	3,6	;RP1=0, select bank1
  2066  0414  083E               	movf	sprintf@fval^(0+128),w
  2067  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0416  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0417  00D3               	movwf	___ftadd@f2
  2070  0418  1683               	bsf	3,5	;RP0=1, select bank1
  2071  0419  1303               	bcf	3,6	;RP1=0, select bank1
  2072  041A  083F               	movf	(sprintf@fval+1)^(0+128),w
  2073  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2074  041C  1303               	bcf	3,6	;RP1=0, select bank0
  2075  041D  00D4               	movwf	___ftadd@f2+1
  2076  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2077  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2078  0420  0840               	movf	(sprintf@fval+2)^(0+128),w
  2079  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0422  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0423  00D5               	movwf	___ftadd@f2+2
  2082  0424  120A  158A  20BA  120A  118A  	fcall	___ftadd
  2083  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2084  042A  1303               	bcf	3,6	;RP1=0, select bank0
  2085  042B  0850               	movf	?___ftadd,w
  2086  042C  1683               	bsf	3,5	;RP0=1, select bank1
  2087  042D  1303               	bcf	3,6	;RP1=0, select bank1
  2088  042E  00BE               	movwf	sprintf@fval^(0+128)
  2089  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2090  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2091  0431  0851               	movf	?___ftadd+1,w
  2092  0432  1683               	bsf	3,5	;RP0=1, select bank1
  2093  0433  1303               	bcf	3,6	;RP1=0, select bank1
  2094  0434  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2095  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2097  0437  0852               	movf	?___ftadd+2,w
  2098  0438  1683               	bsf	3,5	;RP0=1, select bank1
  2099  0439  1303               	bcf	3,6	;RP1=0, select bank1
  2100  043A  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2101  043B                     l2355:	
  2102                           
  2103                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2104  043B  1683               	bsf	3,5	;RP0=1, select bank1
  2105  043C  1303               	bcf	3,6	;RP1=0, select bank1
  2106  043D  083C               	movf	(sprintf@exp+1)^(0+128),w
  2107  043E  3A80               	xorlw	128
  2108  043F  00FF               	movwf	127
  2109  0440  3080               	movlw	128
  2110  0441  027F               	subwf	127,w
  2111  0442  1D03               	skipz
  2112  0443  2C46               	goto	u3345
  2113  0444  300A               	movlw	10
  2114  0445  023B               	subwf	sprintf@exp^(0+128),w
  2115  0446                     u3345:	
  2116  0446  1803               	skipnc
  2117  0447  2C79               	goto	l2363
  2118  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2119  0449  1303               	bcf	3,6	;RP1=0, select bank1
  2120  044A  0840               	movf	(sprintf@fval+2)^(0+128),w
  2121  044B  043F               	iorwf	(sprintf@fval+1)^(0+128),w
  2122  044C  043E               	iorwf	sprintf@fval^(0+128),w
  2123  044D  1903               	skipnz
  2124  044E  2CDA               	goto	l2379
  2125  044F  083E               	movf	sprintf@fval^(0+128),w
  2126  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2127  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2128  0452  00C9               	movwf	___fttol@f1
  2129  0453  1683               	bsf	3,5	;RP0=1, select bank1
  2130  0454  1303               	bcf	3,6	;RP1=0, select bank1
  2131  0455  083F               	movf	(sprintf@fval+1)^(0+128),w
  2132  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0457  1303               	bcf	3,6	;RP1=0, select bank0
  2134  0458  00CA               	movwf	___fttol@f1+1
  2135  0459  1683               	bsf	3,5	;RP0=1, select bank1
  2136  045A  1303               	bcf	3,6	;RP1=0, select bank1
  2137  045B  0840               	movf	(sprintf@fval+2)^(0+128),w
  2138  045C  1283               	bcf	3,5	;RP0=0, select bank0
  2139  045D  1303               	bcf	3,6	;RP1=0, select bank0
  2140  045E  00CB               	movwf	___fttol@f1+2
  2141  045F  160A  118A  269F  120A  118A  	fcall	___fttol
  2142  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2143  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2144  0466  084C               	movf	?___fttol+3,w
  2145  0467  044B               	iorwf	?___fttol+2,w
  2146  0468  044A               	iorwf	?___fttol+1,w
  2147  0469  0449               	iorwf	?___fttol,w
  2148  046A  1D03               	skipz
  2149  046B  2CDA               	goto	l2379
  2150  046C  1683               	bsf	3,5	;RP0=1, select bank1
  2151  046D  1303               	bcf	3,6	;RP1=0, select bank1
  2152  046E  083C               	movf	(sprintf@exp+1)^(0+128),w
  2153  046F  3A80               	xorlw	128
  2154  0470  00FF               	movwf	127
  2155  0471  3080               	movlw	128
  2156  0472  027F               	subwf	127,w
  2157  0473  1D03               	skipz
  2158  0474  2C77               	goto	u3375
  2159  0475  3002               	movlw	2
  2160  0476  023B               	subwf	sprintf@exp^(0+128),w
  2161  0477                     u3375:	
  2162  0477  1C03               	skipc
  2163  0478  2CDA               	goto	l2379
  2164  0479                     l2363:	
  2165                           
  2166                           ;doprnt.c: 1129: if(integ < 4.294967296){
  2167  0479  1683               	bsf	3,5	;RP0=1, select bank1
  2168  047A  1303               	bcf	3,6	;RP1=0, select bank1
  2169  047B  0838               	movf	sprintf@integ^(0+128),w
  2170  047C  00F0               	movwf	___ftge@ff1
  2171  047D  0839               	movf	(sprintf@integ+1)^(0+128),w
  2172  047E  00F1               	movwf	___ftge@ff1+1
  2173  047F  083A               	movf	(sprintf@integ+2)^(0+128),w
  2174  0480  00F2               	movwf	___ftge@ff1+2
  2175  0481  3070               	movlw	112
  2176  0482  00F3               	movwf	___ftge@ff2
  2177  0483  3089               	movlw	137
  2178  0484  00F4               	movwf	___ftge@ff2+1
  2179  0485  3040               	movlw	64
  2180  0486  00F5               	movwf	___ftge@ff2+2
  2181  0487  160A  118A  251F  120A  118A  	fcall	___ftge
  2182  048C  1803               	btfsc	3,0
  2183  048D  2C90               	goto	l2367
  2184                           
  2185                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2186  048E  30F7               	movlw	247
  2187  048F  2C91               	goto	L2
  2188  0490                     l2367:	
  2189                           ;doprnt.c: 1131: }else{
  2190                           
  2191                           
  2192                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2193  0490  30F8               	movlw	248
  2194  0491                     L2:	
  2195  0491  1683               	bsf	3,5	;RP0=1, select bank1
  2196  0492  1303               	bcf	3,6	;RP1=0, select bank1
  2197  0493  07BB               	addwf	sprintf@exp^(0+128),f
  2198  0494  1803               	skipnc
  2199  0495  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  2200  0496  30FF               	movlw	255
  2201  0497  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  2202                           
  2203                           ;doprnt.c: 1133: }
  2204                           ;doprnt.c: 1134: integ = scale(exp);
  2205  0498  083B               	movf	sprintf@exp^(0+128),w
  2206  0499  120A  158A  2561  120A  118A  	fcall	_scale
  2207  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2208  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2209  04A0  0840               	movf	?_scale,w
  2210  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  2211  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  2212  04A3  00B8               	movwf	sprintf@integ^(0+128)
  2213  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2214  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2215  04A6  0841               	movf	?_scale+1,w
  2216  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  2217  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  2218  04A9  00B9               	movwf	(sprintf@integ+1)^(0+128)
  2219  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2220  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2221  04AC  0842               	movf	?_scale+2,w
  2222  04AD  1683               	bsf	3,5	;RP0=1, select bank1
  2223  04AE  1303               	bcf	3,6	;RP1=0, select bank1
  2224  04AF  00BA               	movwf	(sprintf@integ+2)^(0+128)
  2225                           
  2226                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  2227  04B0  083E               	movf	sprintf@fval^(0+128),w
  2228  04B1  00F0               	movwf	__tdiv_to_l_@f1
  2229  04B2  083F               	movf	(sprintf@fval+1)^(0+128),w
  2230  04B3  00F1               	movwf	__tdiv_to_l_@f1+1
  2231  04B4  0840               	movf	(sprintf@fval+2)^(0+128),w
  2232  04B5  00F2               	movwf	__tdiv_to_l_@f1+2
  2233  04B6  0838               	movf	sprintf@integ^(0+128),w
  2234  04B7  00F3               	movwf	__tdiv_to_l_@f2
  2235  04B8  0839               	movf	(sprintf@integ+1)^(0+128),w
  2236  04B9  00F4               	movwf	__tdiv_to_l_@f2+1
  2237  04BA  083A               	movf	(sprintf@integ+2)^(0+128),w
  2238  04BB  00F5               	movwf	__tdiv_to_l_@f2+2
  2239  04BC  120A  118A  2004  120A  118A  	fcall	__tdiv_to_l_
  2240  04C1  0873               	movf	?__tdiv_to_l_+3,w
  2241  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  2242  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  2243  04C4  00A6               	movwf	(_sprintf$146+3)^(0+128)
  2244  04C5  0872               	movf	?__tdiv_to_l_+2,w
  2245  04C6  00A5               	movwf	(_sprintf$146+2)^(0+128)
  2246  04C7  0871               	movf	?__tdiv_to_l_+1,w
  2247  04C8  00A4               	movwf	(_sprintf$146+1)^(0+128)
  2248  04C9  0870               	movf	?__tdiv_to_l_,w
  2249  04CA  00A3               	movwf	_sprintf$146^(0+128)
  2250  04CB  0826               	movf	(_sprintf$146+3)^(0+128),w
  2251  04CC  00B7               	movwf	(sprintf@_val+3)^(0+128)
  2252  04CD  0825               	movf	(_sprintf$146+2)^(0+128),w
  2253  04CE  00B6               	movwf	(sprintf@_val+2)^(0+128)
  2254  04CF  0824               	movf	(_sprintf$146+1)^(0+128),w
  2255  04D0  00B5               	movwf	(sprintf@_val+1)^(0+128)
  2256  04D1  0823               	movf	_sprintf$146^(0+128),w
  2257  04D2  00B4               	movwf	sprintf@_val^(0+128)
  2258                           
  2259                           ;doprnt.c: 1138: fval = 0.0;
  2260  04D3  3000               	movlw	0
  2261  04D4  00BE               	movwf	sprintf@fval^(0+128)
  2262  04D5  3000               	movlw	0
  2263  04D6  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2264  04D7  3000               	movlw	0
  2265  04D8  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2266                           
  2267                           ;doprnt.c: 1139: } else {
  2268  04D9  2D49               	goto	l2383
  2269  04DA                     l2379:	
  2270                           
  2271                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  2272  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  2273  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  2274  04DC  083E               	movf	sprintf@fval^(0+128),w
  2275  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2276  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2277  04DF  00C9               	movwf	___fttol@f1
  2278  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  2279  04E1  1303               	bcf	3,6	;RP1=0, select bank1
  2280  04E2  083F               	movf	(sprintf@fval+1)^(0+128),w
  2281  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2282  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2283  04E5  00CA               	movwf	___fttol@f1+1
  2284  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  2285  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  2286  04E8  0840               	movf	(sprintf@fval+2)^(0+128),w
  2287  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2288  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  2289  04EB  00CB               	movwf	___fttol@f1+2
  2290  04EC  160A  118A  269F  120A  118A  	fcall	___fttol
  2291  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2292  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2293  04F3  084C               	movf	?___fttol+3,w
  2294  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  2295  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  2296  04F6  00B7               	movwf	(sprintf@_val+3)^(0+128)
  2297  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2298  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2299  04F9  084B               	movf	?___fttol+2,w
  2300  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2301  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  2302  04FC  00B6               	movwf	(sprintf@_val+2)^(0+128)
  2303  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2304  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2305  04FF  084A               	movf	?___fttol+1,w
  2306  0500  1683               	bsf	3,5	;RP0=1, select bank1
  2307  0501  1303               	bcf	3,6	;RP1=0, select bank1
  2308  0502  00B5               	movwf	(sprintf@_val+1)^(0+128)
  2309  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2310  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2311  0505  0849               	movf	?___fttol,w
  2312  0506  1683               	bsf	3,5	;RP0=1, select bank1
  2313  0507  1303               	bcf	3,6	;RP1=0, select bank1
  2314  0508  00B4               	movwf	sprintf@_val^(0+128)
  2315                           
  2316                           ;doprnt.c: 1141: fval -= (double)_val._val;
  2317  0509  0837               	movf	(sprintf@_val+3)^(0+128),w
  2318  050A  00FB               	movwf	___lltoft@c+3
  2319  050B  0836               	movf	(sprintf@_val+2)^(0+128),w
  2320  050C  00FA               	movwf	___lltoft@c+2
  2321  050D  0835               	movf	(sprintf@_val+1)^(0+128),w
  2322  050E  00F9               	movwf	___lltoft@c+1
  2323  050F  0834               	movf	sprintf@_val^(0+128),w
  2324  0510  00F8               	movwf	___lltoft@c
  2325  0511  160A  118A  245B  120A  118A  	fcall	___lltoft
  2326  0516  0878               	movf	?___lltoft,w
  2327  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2328  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2329  0519  00DD               	movwf	___ftsub@f2
  2330  051A  0879               	movf	?___lltoft+1,w
  2331  051B  00DE               	movwf	___ftsub@f2+1
  2332  051C  087A               	movf	?___lltoft+2,w
  2333  051D  00DF               	movwf	___ftsub@f2+2
  2334  051E  1683               	bsf	3,5	;RP0=1, select bank1
  2335  051F  1303               	bcf	3,6	;RP1=0, select bank1
  2336  0520  083E               	movf	sprintf@fval^(0+128),w
  2337  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2338  0522  1303               	bcf	3,6	;RP1=0, select bank0
  2339  0523  00E0               	movwf	___ftsub@f1
  2340  0524  1683               	bsf	3,5	;RP0=1, select bank1
  2341  0525  1303               	bcf	3,6	;RP1=0, select bank1
  2342  0526  083F               	movf	(sprintf@fval+1)^(0+128),w
  2343  0527  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0528  1303               	bcf	3,6	;RP1=0, select bank0
  2345  0529  00E1               	movwf	___ftsub@f1+1
  2346  052A  1683               	bsf	3,5	;RP0=1, select bank1
  2347  052B  1303               	bcf	3,6	;RP1=0, select bank1
  2348  052C  0840               	movf	(sprintf@fval+2)^(0+128),w
  2349  052D  1283               	bcf	3,5	;RP0=0, select bank0
  2350  052E  1303               	bcf	3,6	;RP1=0, select bank0
  2351  052F  00E2               	movwf	___ftsub@f1+2
  2352  0530  160A  118A  23D2  120A  118A  	fcall	___ftsub
  2353  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0536  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0537  085D               	movf	?___ftsub,w
  2356  0538  1683               	bsf	3,5	;RP0=1, select bank1
  2357  0539  1303               	bcf	3,6	;RP1=0, select bank1
  2358  053A  00BE               	movwf	sprintf@fval^(0+128)
  2359  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2360  053C  1303               	bcf	3,6	;RP1=0, select bank0
  2361  053D  085E               	movf	?___ftsub+1,w
  2362  053E  1683               	bsf	3,5	;RP0=1, select bank1
  2363  053F  1303               	bcf	3,6	;RP1=0, select bank1
  2364  0540  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2365  0541  1283               	bcf	3,5	;RP0=0, select bank0
  2366  0542  1303               	bcf	3,6	;RP1=0, select bank0
  2367  0543  085F               	movf	?___ftsub+2,w
  2368  0544  1683               	bsf	3,5	;RP0=1, select bank1
  2369  0545  1303               	bcf	3,6	;RP1=0, select bank1
  2370  0546  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2371                           
  2372                           ;doprnt.c: 1142: exp = 0;
  2373  0547  01BB               	clrf	sprintf@exp^(0+128)
  2374  0548  01BC               	clrf	(sprintf@exp+1)^(0+128)
  2375  0549                     l2383:	
  2376                           
  2377                           ;doprnt.c: 1143: }
  2378                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2379  0549  01C1               	clrf	sprintf@c^(0+128)
  2380  054A  0AC1               	incf	sprintf@c^(0+128),f
  2381  054B  0841               	movf	sprintf@c^(0+128),w
  2382  054C  3A0A               	xorlw	10
  2383  054D  1903               	btfsc	3,2
  2384  054E  2D9F               	goto	l2397
  2385  054F                     l2389:	
  2386                           
  2387                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  2388  054F  0841               	movf	sprintf@c^(0+128),w
  2389  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2391  0552  00E7               	movwf	??_sprintf
  2392  0553  3001               	movlw	1
  2393  0554                     u3405:	
  2394  0554  1003               	clrc
  2395  0555  0DE7               	rlf	??_sprintf,f
  2396  0556  3EFF               	addlw	-1
  2397  0557  1D03               	skipz
  2398  0558  2D54               	goto	u3405
  2399  0559  1003               	clrc
  2400  055A  0D67               	rlf	??_sprintf,w
  2401  055B  3E01               	addlw	low (_dpowers-__stringbase)
  2402  055C  0084               	movwf	4
  2403  055D  160A  118A  2000  120A  118A  	fcall	stringdir
  2404  0562  00E8               	movwf	??_sprintf+1
  2405  0563  160A  118A  2000  120A  118A  	fcall	stringdir
  2406  0568  00E9               	movwf	??_sprintf+2
  2407  0569  160A  118A  2000  120A  118A  	fcall	stringdir
  2408  056E  00EA               	movwf	??_sprintf+3
  2409  056F  160A  118A  2000  120A  118A  	fcall	stringdir
  2410  0574  00EB               	movwf	??_sprintf+4
  2411  0575  086B               	movf	??_sprintf+4,w
  2412  0576  1683               	bsf	3,5	;RP0=1, select bank1
  2413  0577  1303               	bcf	3,6	;RP1=0, select bank1
  2414  0578  0237               	subwf	(sprintf@_val+3)^(0+128),w
  2415  0579  1D03               	skipz
  2416  057A  2D91               	goto	u3415
  2417  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2418  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2419  057D  086A               	movf	??_sprintf+3,w
  2420  057E  1683               	bsf	3,5	;RP0=1, select bank1
  2421  057F  1303               	bcf	3,6	;RP1=0, select bank1
  2422  0580  0236               	subwf	(sprintf@_val+2)^(0+128),w
  2423  0581  1D03               	skipz
  2424  0582  2D91               	goto	u3415
  2425  0583  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0584  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0585  0869               	movf	??_sprintf+2,w
  2428  0586  1683               	bsf	3,5	;RP0=1, select bank1
  2429  0587  1303               	bcf	3,6	;RP1=0, select bank1
  2430  0588  0235               	subwf	(sprintf@_val+1)^(0+128),w
  2431  0589  1D03               	skipz
  2432  058A  2D91               	goto	u3415
  2433  058B  1283               	bcf	3,5	;RP0=0, select bank0
  2434  058C  1303               	bcf	3,6	;RP1=0, select bank0
  2435  058D  0868               	movf	??_sprintf+1,w
  2436  058E  1683               	bsf	3,5	;RP0=1, select bank1
  2437  058F  1303               	bcf	3,6	;RP1=0, select bank1
  2438  0590  0234               	subwf	sprintf@_val^(0+128),w
  2439  0591                     u3415:	
  2440  0591  1C03               	btfss	3,0
  2441  0592  2D9F               	goto	l2397
  2442                           
  2443                           ;doprnt.c: 1147: break;
  2444  0593  3001               	movlw	1
  2445  0594  1283               	bcf	3,5	;RP0=0, select bank0
  2446  0595  1303               	bcf	3,6	;RP1=0, select bank0
  2447  0596  00E7               	movwf	??_sprintf
  2448  0597  0867               	movf	??_sprintf,w
  2449  0598  1683               	bsf	3,5	;RP0=1, select bank1
  2450  0599  1303               	bcf	3,6	;RP1=0, select bank1
  2451  059A  07C1               	addwf	sprintf@c^(0+128),f
  2452  059B  0841               	movf	sprintf@c^(0+128),w
  2453  059C  3A0A               	xorlw	10
  2454  059D  1D03               	skipz
  2455  059E  2D4F               	goto	l2389
  2456  059F                     l2397:	
  2457                           
  2458                           ;doprnt.c: 1184: {
  2459                           ;doprnt.c: 1197: if(flag & 0x03)
  2460  059F  3003               	movlw	3
  2461  05A0  0530               	andwf	sprintf@flag^(0+128),w
  2462  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2463  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2464  05A3  00E7               	movwf	??_sprintf
  2465  05A4  3000               	movlw	0
  2466  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  2467  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  2468  05A7  0531               	andwf	(sprintf@flag+1)^(0+128),w
  2469  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  2470  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  2471  05AA  00E8               	movwf	??_sprintf+1
  2472  05AB  0868               	movf	??_sprintf+1,w
  2473  05AC  0467               	iorwf	??_sprintf,w
  2474  05AD  1903               	skipnz
  2475  05AE  2DC0               	goto	l151
  2476                           
  2477                           ;doprnt.c: 1199: ((*sp++ = ('-')));
  2478  05AF  302D               	movlw	45
  2479  05B0                     L3:	
  2480  05B0  00E7               	movwf	??_sprintf
  2481  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  2482  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  2483  05B3  083D               	movf	sprintf@sp^(0+128),w
  2484  05B4  0084               	movwf	4
  2485  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  2486  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  2487  05B7  0867               	movf	??_sprintf,w
  2488  05B8  1383               	bcf	3,7	;select IRP bank0
  2489  05B9  0080               	movwf	0
  2490  05BA  3001               	movlw	1
  2491  05BB  00E7               	movwf	??_sprintf
  2492  05BC  0867               	movf	??_sprintf,w
  2493  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  2494  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  2495  05BF  07BD               	addwf	sprintf@sp^(0+128),f
  2496  05C0                     l151:	
  2497  05C0  30FF               	movlw	-1
  2498  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2499  05C2  00E7               	movwf	??_sprintf
  2500  05C3  0867               	movf	??_sprintf,w
  2501  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  2502  05C5  1303               	bcf	3,6	;RP1=0, select bank1
  2503  05C6  07C1               	addwf	sprintf@c^(0+128),f
  2504  05C7  0841               	movf	sprintf@c^(0+128),w
  2505  05C8  3AFF               	xorlw	-1
  2506  05C9  1903               	btfsc	3,2
  2507  05CA  2E47               	goto	l2415
  2508                           
  2509                           ;doprnt.c: 1209: {
  2510                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
  2511                           
  2512                           ;doprnt.c: 1204: }
  2513                           ;doprnt.c: 1205: while(c--) {
  2514  05CB  0841               	movf	sprintf@c^(0+128),w
  2515  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2516  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2517  05CE  00E7               	movwf	??_sprintf
  2518  05CF  3001               	movlw	1
  2519  05D0                     u3445:	
  2520  05D0  1003               	clrc
  2521  05D1  0DE7               	rlf	??_sprintf,f
  2522  05D2  3EFF               	addlw	-1
  2523  05D3  1D03               	skipz
  2524  05D4  2DD0               	goto	u3445
  2525  05D5  1003               	clrc
  2526  05D6  0D67               	rlf	??_sprintf,w
  2527  05D7  3E01               	addlw	low (_dpowers-__stringbase)
  2528  05D8  0084               	movwf	4
  2529  05D9  160A  118A  2000  120A  118A  	fcall	stringdir
  2530  05DE  00F0               	movwf	___lldiv@divisor
  2531  05DF  160A  118A  2000  120A  118A  	fcall	stringdir
  2532  05E4  00F1               	movwf	___lldiv@divisor+1
  2533  05E5  160A  118A  2000  120A  118A  	fcall	stringdir
  2534  05EA  00F2               	movwf	___lldiv@divisor+2
  2535  05EB  160A  118A  2000  120A  118A  	fcall	stringdir
  2536  05F0  00F3               	movwf	___lldiv@divisor+3
  2537  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  2538  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  2539  05F3  0837               	movf	(sprintf@_val+3)^(0+128),w
  2540  05F4  00F7               	movwf	___lldiv@dividend+3
  2541  05F5  0836               	movf	(sprintf@_val+2)^(0+128),w
  2542  05F6  00F6               	movwf	___lldiv@dividend+2
  2543  05F7  0835               	movf	(sprintf@_val+1)^(0+128),w
  2544  05F8  00F5               	movwf	___lldiv@dividend+1
  2545  05F9  0834               	movf	sprintf@_val^(0+128),w
  2546  05FA  00F4               	movwf	___lldiv@dividend
  2547  05FB  160A  118A  25D9  120A  118A  	fcall	___lldiv
  2548  0600  0873               	movf	?___lldiv+3,w
  2549  0601  1683               	bsf	3,5	;RP0=1, select bank1
  2550  0602  1303               	bcf	3,6	;RP1=0, select bank1
  2551  0603  00AB               	movwf	(sprintf@vd+3)^(0+128)
  2552  0604  0872               	movf	?___lldiv+2,w
  2553  0605  00AA               	movwf	(sprintf@vd+2)^(0+128)
  2554  0606  0871               	movf	?___lldiv+1,w
  2555  0607  00A9               	movwf	(sprintf@vd+1)^(0+128)
  2556  0608  0870               	movf	?___lldiv,w
  2557  0609  00A8               	movwf	sprintf@vd^(0+128)
  2558                           
  2559                           ;doprnt.c: 1211: vd %= 10;
  2560  060A  3000               	movlw	0
  2561  060B  00F3               	movwf	___llmod@divisor+3
  2562  060C  3000               	movlw	0
  2563  060D  00F2               	movwf	___llmod@divisor+2
  2564  060E  3000               	movlw	0
  2565  060F  00F1               	movwf	___llmod@divisor+1
  2566  0610  300A               	movlw	10
  2567  0611  00F0               	movwf	___llmod@divisor
  2568  0612  082B               	movf	(sprintf@vd+3)^(0+128),w
  2569  0613  00F7               	movwf	___llmod@dividend+3
  2570  0614  082A               	movf	(sprintf@vd+2)^(0+128),w
  2571  0615  00F6               	movwf	___llmod@dividend+2
  2572  0616  0829               	movf	(sprintf@vd+1)^(0+128),w
  2573  0617  00F5               	movwf	___llmod@dividend+1
  2574  0618  0828               	movf	sprintf@vd^(0+128),w
  2575  0619  00F4               	movwf	___llmod@dividend
  2576  061A  160A  118A  2486  120A  118A  	fcall	___llmod
  2577  061F  0873               	movf	?___llmod+3,w
  2578  0620  1683               	bsf	3,5	;RP0=1, select bank1
  2579  0621  1303               	bcf	3,6	;RP1=0, select bank1
  2580  0622  00AB               	movwf	(sprintf@vd+3)^(0+128)
  2581  0623  0872               	movf	?___llmod+2,w
  2582  0624  00AA               	movwf	(sprintf@vd+2)^(0+128)
  2583  0625  0871               	movf	?___llmod+1,w
  2584  0626  00A9               	movwf	(sprintf@vd+1)^(0+128)
  2585  0627  0870               	movf	?___llmod,w
  2586  0628  00A8               	movwf	sprintf@vd^(0+128)
  2587                           
  2588                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)));
  2589  0629  0828               	movf	sprintf@vd^(0+128),w
  2590  062A  3E30               	addlw	48
  2591  062B  1283               	bcf	3,5	;RP0=0, select bank0
  2592  062C  1303               	bcf	3,6	;RP1=0, select bank0
  2593  062D  2DB0               	goto	L3
  2594  062E                     l2409:	
  2595                           ;doprnt.c: 1213: }
  2596                           ;doprnt.c: 1215: }
  2597                           ;doprnt.c: 1216: while(exp > 0) {
  2598                           
  2599                           
  2600                           ;doprnt.c: 1217: ((*sp++ = ('0')));
  2601  062E  3030               	movlw	48
  2602  062F  1283               	bcf	3,5	;RP0=0, select bank0
  2603  0630  1303               	bcf	3,6	;RP1=0, select bank0
  2604  0631  00E7               	movwf	??_sprintf
  2605  0632  1683               	bsf	3,5	;RP0=1, select bank1
  2606  0633  1303               	bcf	3,6	;RP1=0, select bank1
  2607  0634  083D               	movf	sprintf@sp^(0+128),w
  2608  0635  0084               	movwf	4
  2609  0636  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0637  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0638  0867               	movf	??_sprintf,w
  2612  0639  1383               	bcf	3,7	;select IRP bank0
  2613  063A  0080               	movwf	0
  2614  063B  3001               	movlw	1
  2615  063C  00E7               	movwf	??_sprintf
  2616  063D  0867               	movf	??_sprintf,w
  2617  063E  1683               	bsf	3,5	;RP0=1, select bank1
  2618  063F  1303               	bcf	3,6	;RP1=0, select bank1
  2619  0640  07BD               	addwf	sprintf@sp^(0+128),f
  2620                           
  2621                           ;doprnt.c: 1218: exp--;
  2622  0641  30FF               	movlw	255
  2623  0642  07BB               	addwf	sprintf@exp^(0+128),f
  2624  0643  1803               	skipnc
  2625  0644  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  2626  0645  30FF               	movlw	255
  2627  0646  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  2628  0647                     l2415:	
  2629  0647  083C               	movf	(sprintf@exp+1)^(0+128),w
  2630  0648  3A80               	xorlw	128
  2631  0649  00FF               	movwf	127
  2632  064A  3080               	movlw	128
  2633  064B  027F               	subwf	127,w
  2634  064C  1D03               	skipz
  2635  064D  2E50               	goto	u3465
  2636  064E  3001               	movlw	1
  2637  064F  023B               	subwf	sprintf@exp^(0+128),w
  2638  0650                     u3465:	
  2639  0650  1803               	skipnc
  2640  0651  2E2E               	goto	l2409
  2641                           
  2642                           ;doprnt.c: 1219: }
  2643                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2644  0652  1683               	bsf	3,5	;RP0=1, select bank1
  2645  0653  1303               	bcf	3,6	;RP1=0, select bank1
  2646  0654  0833               	movf	(sprintf@prec+1)^(0+128),w
  2647  0655  3A80               	xorlw	128
  2648  0656  00FF               	movwf	127
  2649  0657  3080               	movlw	128
  2650  0658  027F               	subwf	127,w
  2651  0659  1D03               	skipz
  2652  065A  2E5D               	goto	u3475
  2653  065B  3009               	movlw	9
  2654  065C  0232               	subwf	sprintf@prec^(0+128),w
  2655  065D                     u3475:	
  2656  065D  1C03               	skipc
  2657  065E  2E61               	goto	l2421
  2658                           
  2659                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2660  065F  3008               	movlw	8
  2661  0660  2E64               	goto	L4
  2662  0661                     l2421:	
  2663                           
  2664                           ;doprnt.c: 1222: else
  2665                           ;doprnt.c: 1223: c = prec;
  2666  0661  1683               	bsf	3,5	;RP0=1, select bank1
  2667  0662  1303               	bcf	3,6	;RP1=0, select bank1
  2668  0663  0832               	movf	sprintf@prec^(0+128),w
  2669  0664                     L4:	
  2670  0664  1283               	bcf	3,5	;RP0=0, select bank0
  2671  0665  1303               	bcf	3,6	;RP1=0, select bank0
  2672  0666  00E7               	movwf	??_sprintf
  2673  0667  0867               	movf	??_sprintf,w
  2674  0668  1683               	bsf	3,5	;RP0=1, select bank1
  2675  0669  1303               	bcf	3,6	;RP1=0, select bank1
  2676  066A  00C1               	movwf	sprintf@c^(0+128)
  2677                           
  2678                           ;doprnt.c: 1224: prec -= c;
  2679  066B  0841               	movf	sprintf@c^(0+128),w
  2680  066C  1283               	bcf	3,5	;RP0=0, select bank0
  2681  066D  1303               	bcf	3,6	;RP1=0, select bank0
  2682  066E  00E7               	movwf	??_sprintf
  2683  066F  01E8               	clrf	??_sprintf+1
  2684  0670  1BE7               	btfsc	??_sprintf,7
  2685  0671  03E8               	decf	??_sprintf+1,f
  2686  0672  0867               	movf	??_sprintf,w
  2687  0673  1683               	bsf	3,5	;RP0=1, select bank1
  2688  0674  1303               	bcf	3,6	;RP1=0, select bank1
  2689  0675  02B2               	subwf	sprintf@prec^(0+128),f
  2690  0676  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0677  1303               	bcf	3,6	;RP1=0, select bank0
  2692  0678  0868               	movf	??_sprintf+1,w
  2693  0679  1683               	bsf	3,5	;RP0=1, select bank1
  2694  067A  1303               	bcf	3,6	;RP1=0, select bank1
  2695  067B  1C03               	skipc
  2696  067C  03B3               	decf	(sprintf@prec+1)^(0+128),f
  2697  067D  02B3               	subwf	(sprintf@prec+1)^(0+128),f
  2698                           
  2699                           ;doprnt.c: 1228: if(c)
  2700  067E  0841               	movf	sprintf@c^(0+128),w
  2701  067F  1903               	btfsc	3,2
  2702  0680  2E94               	goto	l2427
  2703                           
  2704                           ;doprnt.c: 1230: ((*sp++ = ('.')));
  2705  0681  302E               	movlw	46
  2706  0682  1283               	bcf	3,5	;RP0=0, select bank0
  2707  0683  1303               	bcf	3,6	;RP1=0, select bank0
  2708  0684  00E7               	movwf	??_sprintf
  2709  0685  1683               	bsf	3,5	;RP0=1, select bank1
  2710  0686  1303               	bcf	3,6	;RP1=0, select bank1
  2711  0687  083D               	movf	sprintf@sp^(0+128),w
  2712  0688  0084               	movwf	4
  2713  0689  1283               	bcf	3,5	;RP0=0, select bank0
  2714  068A  1303               	bcf	3,6	;RP1=0, select bank0
  2715  068B  0867               	movf	??_sprintf,w
  2716  068C  1383               	bcf	3,7	;select IRP bank0
  2717  068D  0080               	movwf	0
  2718  068E  3001               	movlw	1
  2719  068F  00E7               	movwf	??_sprintf
  2720  0690  0867               	movf	??_sprintf,w
  2721  0691  1683               	bsf	3,5	;RP0=1, select bank1
  2722  0692  1303               	bcf	3,6	;RP1=0, select bank1
  2723  0693  07BD               	addwf	sprintf@sp^(0+128),f
  2724  0694                     l2427:	
  2725                           
  2726                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  2727  0694  0841               	movf	sprintf@c^(0+128),w
  2728  0695  120A  158A  2561  120A  118A  	fcall	_scale
  2729  069A  1283               	bcf	3,5	;RP0=0, select bank0
  2730  069B  1303               	bcf	3,6	;RP1=0, select bank0
  2731  069C  0840               	movf	?_scale,w
  2732  069D  1683               	bsf	3,5	;RP0=1, select bank1
  2733  069E  1303               	bcf	3,6	;RP1=0, select bank1
  2734  069F  00A0               	movwf	_sprintf$572^(0+128)
  2735  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  2736  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  2737  06A2  0841               	movf	?_scale+1,w
  2738  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  2739  06A4  1303               	bcf	3,6	;RP1=0, select bank1
  2740  06A5  00A1               	movwf	(_sprintf$572+1)^(0+128)
  2741  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  2742  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  2743  06A8  0842               	movf	?_scale+2,w
  2744  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  2745  06AA  1303               	bcf	3,6	;RP1=0, select bank1
  2746  06AB  00A2               	movwf	(_sprintf$572+2)^(0+128)
  2747                           
  2748                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  2749  06AC  0820               	movf	_sprintf$572^(0+128),w
  2750  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2751  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2752  06AF  00B3               	movwf	___ftmul@f2
  2753  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  2754  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  2755  06B2  0821               	movf	(_sprintf$572+1)^(0+128),w
  2756  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2757  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2758  06B5  00B4               	movwf	___ftmul@f2+1
  2759  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  2760  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  2761  06B8  0822               	movf	(_sprintf$572+2)^(0+128),w
  2762  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  2763  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  2764  06BB  00B5               	movwf	___ftmul@f2+2
  2765  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  2766  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  2767  06BE  083E               	movf	sprintf@fval^(0+128),w
  2768  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  2769  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  2770  06C1  00B0               	movwf	___ftmul@f1
  2771  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  2772  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  2773  06C4  083F               	movf	(sprintf@fval+1)^(0+128),w
  2774  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  2775  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  2776  06C7  00B1               	movwf	___ftmul@f1+1
  2777  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  2778  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  2779  06CA  0840               	movf	(sprintf@fval+2)^(0+128),w
  2780  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  2781  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  2782  06CD  00B2               	movwf	___ftmul@f1+2
  2783  06CE  160A  118A  272D  120A  118A  	fcall	___ftmul
  2784  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  2785  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  2786  06D5  0830               	movf	?___ftmul,w
  2787  06D6  00C9               	movwf	___fttol@f1
  2788  06D7  0831               	movf	?___ftmul+1,w
  2789  06D8  00CA               	movwf	___fttol@f1+1
  2790  06D9  0832               	movf	?___ftmul+2,w
  2791  06DA  00CB               	movwf	___fttol@f1+2
  2792  06DB  160A  118A  269F  120A  118A  	fcall	___fttol
  2793  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  2794  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  2795  06E2  084C               	movf	?___fttol+3,w
  2796  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  2797  06E4  1303               	bcf	3,6	;RP1=0, select bank1
  2798  06E5  00B7               	movwf	(sprintf@_val+3)^(0+128)
  2799  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  2800  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  2801  06E8  084B               	movf	?___fttol+2,w
  2802  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  2803  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  2804  06EB  00B6               	movwf	(sprintf@_val+2)^(0+128)
  2805  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  2806  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  2807  06EE  084A               	movf	?___fttol+1,w
  2808  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  2809  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  2810  06F1  00B5               	movwf	(sprintf@_val+1)^(0+128)
  2811  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  2812  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  2813  06F4  0849               	movf	?___fttol,w
  2814  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  2815  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  2816  06F7                     L5:	
  2817  06F7  00B4               	movwf	sprintf@_val^(0+128)
  2818  06F8  30FF               	movlw	-1
  2819  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  2820  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  2821  06FB  00E7               	movwf	??_sprintf
  2822  06FC  0867               	movf	??_sprintf,w
  2823  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  2824  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  2825  06FF  07C1               	addwf	sprintf@c^(0+128),f
  2826  0700  0841               	movf	sprintf@c^(0+128),w
  2827  0701  3AFF               	xorlw	-1
  2828  0702  1903               	btfsc	3,2
  2829  0703  2FCE               	goto	l2447
  2830                           
  2831                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
  2832                           
  2833                           ;doprnt.c: 1237: while(c--) {
  2834  0704  0841               	movf	sprintf@c^(0+128),w
  2835  0705  1283               	bcf	3,5	;RP0=0, select bank0
  2836  0706  1303               	bcf	3,6	;RP1=0, select bank0
  2837  0707  00E7               	movwf	??_sprintf
  2838  0708  3001               	movlw	1
  2839  0709                     u3495:	
  2840  0709  1003               	clrc
  2841  070A  0DE7               	rlf	??_sprintf,f
  2842  070B  3EFF               	addlw	-1
  2843  070C  1D03               	skipz
  2844  070D  2F09               	goto	u3495
  2845  070E  1003               	clrc
  2846  070F  0D67               	rlf	??_sprintf,w
  2847  0710  3E01               	addlw	low (_dpowers-__stringbase)
  2848  0711  0084               	movwf	4
  2849  0712  160A  118A  2000  120A  118A  	fcall	stringdir
  2850  0717  00F0               	movwf	___lldiv@divisor
  2851  0718  160A  118A  2000  120A  118A  	fcall	stringdir
  2852  071D  00F1               	movwf	___lldiv@divisor+1
  2853  071E  160A  118A  2000  120A  118A  	fcall	stringdir
  2854  0723  00F2               	movwf	___lldiv@divisor+2
  2855  0724  160A  118A  2000  120A  118A  	fcall	stringdir
  2856  0729  00F3               	movwf	___lldiv@divisor+3
  2857  072A  1683               	bsf	3,5	;RP0=1, select bank1
  2858  072B  1303               	bcf	3,6	;RP1=0, select bank1
  2859  072C  0837               	movf	(sprintf@_val+3)^(0+128),w
  2860  072D  00F7               	movwf	___lldiv@dividend+3
  2861  072E  0836               	movf	(sprintf@_val+2)^(0+128),w
  2862  072F  00F6               	movwf	___lldiv@dividend+2
  2863  0730  0835               	movf	(sprintf@_val+1)^(0+128),w
  2864  0731  00F5               	movwf	___lldiv@dividend+1
  2865  0732  0834               	movf	sprintf@_val^(0+128),w
  2866  0733  00F4               	movwf	___lldiv@dividend
  2867  0734  160A  118A  25D9  120A  118A  	fcall	___lldiv
  2868  0739  0873               	movf	?___lldiv+3,w
  2869  073A  1683               	bsf	3,5	;RP0=1, select bank1
  2870  073B  1303               	bcf	3,6	;RP1=0, select bank1
  2871  073C  00AF               	movwf	(sprintf@vd_148+3)^(0+128)
  2872  073D  0872               	movf	?___lldiv+2,w
  2873  073E  00AE               	movwf	(sprintf@vd_148+2)^(0+128)
  2874  073F  0871               	movf	?___lldiv+1,w
  2875  0740  00AD               	movwf	(sprintf@vd_148+1)^(0+128)
  2876  0741  0870               	movf	?___lldiv,w
  2877  0742  00AC               	movwf	sprintf@vd_148^(0+128)
  2878                           
  2879                           ;doprnt.c: 1239: vd %= 10;
  2880  0743  3000               	movlw	0
  2881  0744  00F3               	movwf	___llmod@divisor+3
  2882  0745  3000               	movlw	0
  2883  0746  00F2               	movwf	___llmod@divisor+2
  2884  0747  3000               	movlw	0
  2885  0748  00F1               	movwf	___llmod@divisor+1
  2886  0749  300A               	movlw	10
  2887  074A  00F0               	movwf	___llmod@divisor
  2888  074B  082F               	movf	(sprintf@vd_148+3)^(0+128),w
  2889  074C  00F7               	movwf	___llmod@dividend+3
  2890  074D  082E               	movf	(sprintf@vd_148+2)^(0+128),w
  2891  074E  00F6               	movwf	___llmod@dividend+2
  2892  074F  082D               	movf	(sprintf@vd_148+1)^(0+128),w
  2893  0750  00F5               	movwf	___llmod@dividend+1
  2894  0751  082C               	movf	sprintf@vd_148^(0+128),w
  2895  0752  00F4               	movwf	___llmod@dividend
  2896  0753  160A  118A  2486  120A  118A  	fcall	___llmod
  2897  0758  0873               	movf	?___llmod+3,w
  2898  0759  1683               	bsf	3,5	;RP0=1, select bank1
  2899  075A  1303               	bcf	3,6	;RP1=0, select bank1
  2900  075B  00AF               	movwf	(sprintf@vd_148+3)^(0+128)
  2901  075C  0872               	movf	?___llmod+2,w
  2902  075D  00AE               	movwf	(sprintf@vd_148+2)^(0+128)
  2903  075E  0871               	movf	?___llmod+1,w
  2904  075F  00AD               	movwf	(sprintf@vd_148+1)^(0+128)
  2905  0760  0870               	movf	?___llmod,w
  2906  0761  00AC               	movwf	sprintf@vd_148^(0+128)
  2907                           
  2908                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)));
  2909  0762  082C               	movf	sprintf@vd_148^(0+128),w
  2910  0763  3E30               	addlw	48
  2911  0764  1283               	bcf	3,5	;RP0=0, select bank0
  2912  0765  1303               	bcf	3,6	;RP1=0, select bank0
  2913  0766  00E7               	movwf	??_sprintf
  2914  0767  1683               	bsf	3,5	;RP0=1, select bank1
  2915  0768  1303               	bcf	3,6	;RP1=0, select bank1
  2916  0769  083D               	movf	sprintf@sp^(0+128),w
  2917  076A  0084               	movwf	4
  2918  076B  1283               	bcf	3,5	;RP0=0, select bank0
  2919  076C  1303               	bcf	3,6	;RP1=0, select bank0
  2920  076D  0867               	movf	??_sprintf,w
  2921  076E  1383               	bcf	3,7	;select IRP bank0
  2922  076F  0080               	movwf	0
  2923  0770  3001               	movlw	1
  2924  0771  00E7               	movwf	??_sprintf
  2925  0772  0867               	movf	??_sprintf,w
  2926  0773  1683               	bsf	3,5	;RP0=1, select bank1
  2927  0774  1303               	bcf	3,6	;RP1=0, select bank1
  2928  0775  07BD               	addwf	sprintf@sp^(0+128),f
  2929                           
  2930                           ;doprnt.c: 1241: _val._val %= dpowers[c];
  2931  0776  0841               	movf	sprintf@c^(0+128),w
  2932  0777  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0778  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0779  00E7               	movwf	??_sprintf
  2935  077A  3001               	movlw	1
  2936  077B                     u3505:	
  2937  077B  1003               	clrc
  2938  077C  0DE7               	rlf	??_sprintf,f
  2939  077D  3EFF               	addlw	-1
  2940  077E  1D03               	skipz
  2941  077F  2F7B               	goto	u3505
  2942  0780  1003               	clrc
  2943  0781  0D67               	rlf	??_sprintf,w
  2944  0782  3E01               	addlw	low (_dpowers-__stringbase)
  2945  0783  0084               	movwf	4
  2946  0784  160A  118A  2000  120A  118A  	fcall	stringdir
  2947  0789  00F0               	movwf	___llmod@divisor
  2948  078A  160A  118A  2000  120A  118A  	fcall	stringdir
  2949  078F  00F1               	movwf	___llmod@divisor+1
  2950  0790  160A  118A  2000  120A  118A  	fcall	stringdir
  2951  0795  00F2               	movwf	___llmod@divisor+2
  2952  0796  160A  118A  2000  120A  118A  	fcall	stringdir
  2953  079B  00F3               	movwf	___llmod@divisor+3
  2954  079C  1683               	bsf	3,5	;RP0=1, select bank1
  2955  079D  1303               	bcf	3,6	;RP1=0, select bank1
  2956  079E  0837               	movf	(sprintf@_val+3)^(0+128),w
  2957  079F  00F7               	movwf	___llmod@dividend+3
  2958  07A0  0836               	movf	(sprintf@_val+2)^(0+128),w
  2959  07A1  00F6               	movwf	___llmod@dividend+2
  2960  07A2  0835               	movf	(sprintf@_val+1)^(0+128),w
  2961  07A3  00F5               	movwf	___llmod@dividend+1
  2962  07A4  0834               	movf	sprintf@_val^(0+128),w
  2963  07A5  00F4               	movwf	___llmod@dividend
  2964  07A6  160A  118A  2486  120A  118A  	fcall	___llmod
  2965  07AB  0873               	movf	?___llmod+3,w
  2966  07AC  1683               	bsf	3,5	;RP0=1, select bank1
  2967  07AD  1303               	bcf	3,6	;RP1=0, select bank1
  2968  07AE  00B7               	movwf	(sprintf@_val+3)^(0+128)
  2969  07AF  0872               	movf	?___llmod+2,w
  2970  07B0  00B6               	movwf	(sprintf@_val+2)^(0+128)
  2971  07B1  0871               	movf	?___llmod+1,w
  2972  07B2  00B5               	movwf	(sprintf@_val+1)^(0+128)
  2973  07B3  0870               	movf	?___llmod,w
  2974  07B4  2EF7               	goto	L5
  2975  07B5                     l2441:	
  2976                           ;doprnt.c: 1242: }
  2977                           ;doprnt.c: 1244: while(prec) {
  2978                           
  2979                           
  2980                           ;doprnt.c: 1245: ((*sp++ = ('0')));
  2981  07B5  3030               	movlw	48
  2982  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  2983  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  2984  07B8  00E7               	movwf	??_sprintf
  2985  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  2986  07BA  1303               	bcf	3,6	;RP1=0, select bank1
  2987  07BB  083D               	movf	sprintf@sp^(0+128),w
  2988  07BC  0084               	movwf	4
  2989  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  2990  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  2991  07BF  0867               	movf	??_sprintf,w
  2992  07C0  1383               	bcf	3,7	;select IRP bank0
  2993  07C1  0080               	movwf	0
  2994  07C2  3001               	movlw	1
  2995  07C3  00E7               	movwf	??_sprintf
  2996  07C4  0867               	movf	??_sprintf,w
  2997  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  2998  07C6  1303               	bcf	3,6	;RP1=0, select bank1
  2999  07C7  07BD               	addwf	sprintf@sp^(0+128),f
  3000                           
  3001                           ;doprnt.c: 1246: prec--;
  3002  07C8  30FF               	movlw	255
  3003  07C9  07B2               	addwf	sprintf@prec^(0+128),f
  3004  07CA  1803               	skipnc
  3005  07CB  0AB3               	incf	(sprintf@prec+1)^(0+128),f
  3006  07CC  30FF               	movlw	255
  3007  07CD  07B3               	addwf	(sprintf@prec+1)^(0+128),f
  3008  07CE                     l2447:	
  3009  07CE  0833               	movf	(sprintf@prec+1)^(0+128),w
  3010  07CF  0432               	iorwf	sprintf@prec^(0+128),w
  3011  07D0  1903               	btfsc	3,2
  3012  07D1  2A6E               	goto	l2455
  3013  07D2  2FB5               	goto	l2441
  3014  07D3                     l2449:	
  3015                           ;doprnt.c: 1247: }
  3016                           ;doprnt.c: 1254: continue;
  3017                           
  3018                           
  3019                           ;doprnt.c: 1255: }
  3020                           ;doprnt.c: 1431: {
  3021                           ;doprnt.c: 1447: if(flag & 0x03)
  3022  07D3  3003               	movlw	3
  3023  07D4  1683               	bsf	3,5	;RP0=1, select bank1
  3024  07D5  1303               	bcf	3,6	;RP1=0, select bank1
  3025  07D6  0530               	andwf	sprintf@flag^(0+128),w
  3026  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  3027  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  3028  07D9  00E7               	movwf	??_sprintf
  3029  07DA  3000               	movlw	0
  3030  07DB  1683               	bsf	3,5	;RP0=1, select bank1
  3031  07DC  1303               	bcf	3,6	;RP1=0, select bank1
  3032  07DD  0531               	andwf	(sprintf@flag+1)^(0+128),w
  3033  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  3034  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  3035  07E0  00E8               	movwf	??_sprintf+1
  3036  07E1  0868               	movf	??_sprintf+1,w
  3037  07E2  0467               	iorwf	??_sprintf,w
  3038  07E3  1903               	skipnz
  3039  07E4  2A6E               	goto	l2455
  3040                           
  3041                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3042  07E5  302D               	movlw	45
  3043  07E6                     L6:	
  3044  07E6  00E7               	movwf	??_sprintf
  3045  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  3046  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  3047  07E9  083D               	movf	sprintf@sp^(0+128),w
  3048  07EA  0084               	movwf	4
  3049  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  3050  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  3051  07ED  0867               	movf	??_sprintf,w
  3052  07EE  1383               	bcf	3,7	;select IRP bank0
  3053  07EF  0080               	movwf	0
  3054  07F0  3001               	movlw	1
  3055  07F1  00E7               	movwf	??_sprintf
  3056  07F2  0867               	movf	??_sprintf,w
  3057  07F3  1683               	bsf	3,5	;RP0=1, select bank1
  3058  07F4  1303               	bcf	3,6	;RP1=0, select bank1
  3059  07F5  07BD               	addwf	sprintf@sp^(0+128),f
  3060  07F6  2A6E               	goto	l2455
  3061  07F7                     l2457:	
  3062                           ;doprnt.c: 1478: }
  3063                           ;doprnt.c: 1542: }
  3064                           ;doprnt.c: 1544: alldone:
  3065                           
  3066                           
  3067                           ;doprnt.c: 1547: *sp = 0;
  3068  07F7  083D               	movf	sprintf@sp^(0+128),w
  3069  07F8  0084               	movwf	4
  3070  07F9  1383               	bcf	3,7	;select IRP bank0
  3071  07FA  0180               	clrf	0
  3072  07FB  0008               	return
  3073  07FC                     __end_of_sprintf:	
  3074                           ;doprnt.c: 1549: return 0;
  3075                           ;	Return value of _sprintf is never used
  3076                           
  3077                           
  3078                           	psect	text2
  3079  0D61                     __ptext2:	
  3080 ;; *************** function _scale *****************
  3081 ;; Defined at:
  3082 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  scl             1    wreg     char 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  scl             1   40[BANK0 ] char 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  3   32[BANK0 ] char 
  3089 ;; Registers used:
  3090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3096 ;;      Params:         0       3       0       0       0
  3097 ;;      Locals:         0       4       0       0       0
  3098 ;;      Temps:          0       2       0       0       0
  3099 ;;      Totals:         0       9       0       0       0
  3100 ;;Total ram usage:        9 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    2
  3103 ;; This function calls:
  3104 ;;		___awdiv
  3105 ;;		___awmod
  3106 ;;		___bmul
  3107 ;;		___ftmul
  3108 ;; This function is called by:
  3109 ;;		_sprintf
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           
  3114                           ;psect for function _scale
  3115  0D61                     _scale:	
  3116                           
  3117                           ;incstack = 0
  3118                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3119                           ;scale@scl stored from wreg
  3120  0D61  1283               	bcf	3,5	;RP0=0, select bank0
  3121  0D62  1303               	bcf	3,6	;RP1=0, select bank0
  3122  0D63  00C8               	movwf	scale@scl
  3123                           
  3124                           ;doprnt.c: 428: if(scl < 0) {
  3125  0D64  1FC8               	btfss	scale@scl,7
  3126  0D65  2EB4               	goto	l1967
  3127                           
  3128                           ;doprnt.c: 429: scl = -scl;
  3129  0D66  09C8               	comf	scale@scl,f
  3130  0D67  0AC8               	incf	scale@scl,f
  3131                           
  3132                           ;doprnt.c: 430: if(scl>=110)
  3133  0D68  0848               	movf	scale@scl,w
  3134  0D69  3A80               	xorlw	128
  3135  0D6A  3E12               	addlw	-238
  3136  0D6B  1C03               	skipc
  3137  0D6C  2E27               	goto	l1957
  3138                           
  3139                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3140  0D6D  3003               	movlw	3
  3141  0D6E  00C3               	movwf	??_scale
  3142  0D6F  0843               	movf	??_scale,w
  3143  0D70  00A4               	movwf	___bmul@multiplicand
  3144  0D71  300A               	movlw	10
  3145  0D72  00F7               	movwf	___awdiv@divisor
  3146  0D73  3000               	movlw	0
  3147  0D74  00F8               	movwf	___awdiv@divisor+1
  3148  0D75  0848               	movf	scale@scl,w
  3149  0D76  00F2               	movwf	___awmod@dividend
  3150  0D77  01F3               	clrf	___awmod@dividend+1
  3151  0D78  1BF2               	btfsc	___awmod@dividend,7
  3152  0D79  03F3               	decf	___awmod@dividend+1,f
  3153  0D7A  3064               	movlw	100
  3154  0D7B  00F0               	movwf	___awmod@divisor
  3155  0D7C  3000               	movlw	0
  3156  0D7D  00F1               	movwf	___awmod@divisor+1
  3157  0D7E  160A  118A  24D2  120A  158A  	fcall	___awmod
  3158  0D83  0871               	movf	?___awmod+1,w
  3159  0D84  01FA               	clrf	___awdiv@dividend+1
  3160  0D85  07FA               	addwf	___awdiv@dividend+1,f
  3161  0D86  0870               	movf	?___awmod,w
  3162  0D87  01F9               	clrf	___awdiv@dividend
  3163  0D88  07F9               	addwf	___awdiv@dividend,f
  3164  0D89  160A  118A  257C  120A  158A  	fcall	___awdiv
  3165  0D8E  0877               	movf	?___awdiv,w
  3166  0D8F  3E09               	addlw	9
  3167  0D90  160A  118A  238F  120A  158A  	fcall	___bmul
  3168  0D95  3E29               	addlw	low (__npowers_-__stringbase)
  3169  0D96  0084               	movwf	4
  3170  0D97  160A  118A  2000  120A  158A  	fcall	stringdir
  3171  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  3173  0D9E  00B0               	movwf	___ftmul@f1
  3174  0D9F  160A  118A  2000  120A  158A  	fcall	stringdir
  3175  0DA4  00B1               	movwf	___ftmul@f1+1
  3176  0DA5  160A  118A  2000  120A  158A  	fcall	stringdir
  3177  0DAA  00B2               	movwf	___ftmul@f1+2
  3178  0DAB  3003               	movlw	3
  3179  0DAC  00C4               	movwf	??_scale+1
  3180  0DAD  0844               	movf	??_scale+1,w
  3181  0DAE  00A4               	movwf	___bmul@multiplicand
  3182  0DAF  3064               	movlw	100
  3183  0DB0  00F7               	movwf	___awdiv@divisor
  3184  0DB1  3000               	movlw	0
  3185  0DB2  00F8               	movwf	___awdiv@divisor+1
  3186  0DB3  0848               	movf	scale@scl,w
  3187  0DB4  00F9               	movwf	___awdiv@dividend
  3188  0DB5  01FA               	clrf	___awdiv@dividend+1
  3189  0DB6  1BF9               	btfsc	___awdiv@dividend,7
  3190  0DB7  03FA               	decf	___awdiv@dividend+1,f
  3191  0DB8  160A  118A  257C  120A  158A  	fcall	___awdiv
  3192  0DBD  0877               	movf	?___awdiv,w
  3193  0DBE  3E12               	addlw	18
  3194  0DBF  160A  118A  238F  120A  158A  	fcall	___bmul
  3195  0DC4  3E29               	addlw	low (__npowers_-__stringbase)
  3196  0DC5  0084               	movwf	4
  3197  0DC6  160A  118A  2000  120A  158A  	fcall	stringdir
  3198  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  3199  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  3200  0DCD  00B3               	movwf	___ftmul@f2
  3201  0DCE  160A  118A  2000  120A  158A  	fcall	stringdir
  3202  0DD3  00B4               	movwf	___ftmul@f2+1
  3203  0DD4  160A  118A  2000  120A  158A  	fcall	stringdir
  3204  0DD9  00B5               	movwf	___ftmul@f2+2
  3205  0DDA  160A  118A  272D  120A  158A  	fcall	___ftmul
  3206  0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  3207  0DE0  1303               	bcf	3,6	;RP1=0, select bank0
  3208  0DE1  0830               	movf	?___ftmul,w
  3209  0DE2  00C5               	movwf	_scale$571
  3210  0DE3  0831               	movf	?___ftmul+1,w
  3211  0DE4  00C6               	movwf	_scale$571+1
  3212  0DE5  0832               	movf	?___ftmul+2,w
  3213  0DE6  00C7               	movwf	_scale$571+2
  3214                           
  3215                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3216  0DE7  3003               	movlw	3
  3217  0DE8  00C3               	movwf	??_scale
  3218  0DE9  0843               	movf	??_scale,w
  3219  0DEA  00A4               	movwf	___bmul@multiplicand
  3220  0DEB  0848               	movf	scale@scl,w
  3221  0DEC  00F2               	movwf	___awmod@dividend
  3222  0DED  01F3               	clrf	___awmod@dividend+1
  3223  0DEE  1BF2               	btfsc	___awmod@dividend,7
  3224  0DEF  03F3               	decf	___awmod@dividend+1,f
  3225  0DF0  300A               	movlw	10
  3226  0DF1  00F0               	movwf	___awmod@divisor
  3227  0DF2  3000               	movlw	0
  3228  0DF3  00F1               	movwf	___awmod@divisor+1
  3229  0DF4  160A  118A  24D2  120A  158A  	fcall	___awmod
  3230  0DF9  0870               	movf	?___awmod,w
  3231  0DFA  160A  118A  238F  120A  158A  	fcall	___bmul
  3232  0DFF  3E29               	addlw	low (__npowers_-__stringbase)
  3233  0E00  0084               	movwf	4
  3234  0E01  160A  118A  2000  120A  158A  	fcall	stringdir
  3235  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  3236  0E07  1303               	bcf	3,6	;RP1=0, select bank0
  3237  0E08  00B0               	movwf	___ftmul@f1
  3238  0E09  160A  118A  2000  120A  158A  	fcall	stringdir
  3239  0E0E  00B1               	movwf	___ftmul@f1+1
  3240  0E0F  160A  118A  2000  120A  158A  	fcall	stringdir
  3241  0E14  00B2               	movwf	___ftmul@f1+2
  3242  0E15  0845               	movf	_scale$571,w
  3243  0E16  00B3               	movwf	___ftmul@f2
  3244  0E17  0846               	movf	_scale$571+1,w
  3245  0E18  00B4               	movwf	___ftmul@f2+1
  3246  0E19  0847               	movf	_scale$571+2,w
  3247  0E1A  00B5               	movwf	___ftmul@f2+2
  3248  0E1B  160A  118A  272D   	fcall	___ftmul
  3249  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  3250  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  3251  0E20  0830               	movf	?___ftmul,w
  3252  0E21  00C0               	movwf	?_scale
  3253  0E22  0831               	movf	?___ftmul+1,w
  3254  0E23  00C1               	movwf	?_scale+1
  3255  0E24  0832               	movf	?___ftmul+2,w
  3256  0E25  00C2               	movwf	?_scale+2
  3257  0E26  0008               	return
  3258  0E27                     l1957:	
  3259                           
  3260                           ;doprnt.c: 432: else if(scl > 10)
  3261  0E27  0848               	movf	scale@scl,w
  3262  0E28  3A80               	xorlw	128
  3263  0E29  3E75               	addlw	-139
  3264  0E2A  1C03               	skipc
  3265  0E2B  2E95               	goto	l1963
  3266                           
  3267                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3268  0E2C  3003               	movlw	3
  3269  0E2D  00C3               	movwf	??_scale
  3270  0E2E  0843               	movf	??_scale,w
  3271  0E2F  00A4               	movwf	___bmul@multiplicand
  3272  0E30  0848               	movf	scale@scl,w
  3273  0E31  00F2               	movwf	___awmod@dividend
  3274  0E32  01F3               	clrf	___awmod@dividend+1
  3275  0E33  1BF2               	btfsc	___awmod@dividend,7
  3276  0E34  03F3               	decf	___awmod@dividend+1,f
  3277  0E35  300A               	movlw	10
  3278  0E36  00F0               	movwf	___awmod@divisor
  3279  0E37  3000               	movlw	0
  3280  0E38  00F1               	movwf	___awmod@divisor+1
  3281  0E39  160A  118A  24D2  120A  158A  	fcall	___awmod
  3282  0E3E  0870               	movf	?___awmod,w
  3283  0E3F  160A  118A  238F  120A  158A  	fcall	___bmul
  3284  0E44  3E29               	addlw	low (__npowers_-__stringbase)
  3285  0E45  0084               	movwf	4
  3286  0E46  160A  118A  2000  120A  158A  	fcall	stringdir
  3287  0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  3288  0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0E4D  00B0               	movwf	___ftmul@f1
  3290  0E4E  160A  118A  2000  120A  158A  	fcall	stringdir
  3291  0E53  00B1               	movwf	___ftmul@f1+1
  3292  0E54  160A  118A  2000  120A  158A  	fcall	stringdir
  3293  0E59  00B2               	movwf	___ftmul@f1+2
  3294  0E5A  3003               	movlw	3
  3295  0E5B  00C4               	movwf	??_scale+1
  3296  0E5C  0844               	movf	??_scale+1,w
  3297  0E5D  00A4               	movwf	___bmul@multiplicand
  3298  0E5E  300A               	movlw	10
  3299  0E5F  00F7               	movwf	___awdiv@divisor
  3300  0E60  3000               	movlw	0
  3301  0E61  00F8               	movwf	___awdiv@divisor+1
  3302  0E62  0848               	movf	scale@scl,w
  3303  0E63  00F9               	movwf	___awdiv@dividend
  3304  0E64  01FA               	clrf	___awdiv@dividend+1
  3305  0E65  1BF9               	btfsc	___awdiv@dividend,7
  3306  0E66  03FA               	decf	___awdiv@dividend+1,f
  3307  0E67  160A  118A  257C  120A  158A  	fcall	___awdiv
  3308  0E6C  0877               	movf	?___awdiv,w
  3309  0E6D  3E09               	addlw	9
  3310  0E6E  160A  118A  238F  120A  158A  	fcall	___bmul
  3311  0E73  3E29               	addlw	low (__npowers_-__stringbase)
  3312  0E74  0084               	movwf	4
  3313  0E75  160A  118A  2000  120A  158A  	fcall	stringdir
  3314  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  3315  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  3316  0E7C  00B3               	movwf	___ftmul@f2
  3317  0E7D  160A  118A  2000  120A  158A  	fcall	stringdir
  3318  0E82  00B4               	movwf	___ftmul@f2+1
  3319  0E83  160A  118A  2000  120A  158A  	fcall	stringdir
  3320  0E88  00B5               	movwf	___ftmul@f2+2
  3321  0E89  160A  118A  272D   	fcall	___ftmul
  3322  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  3324  0E8E  0830               	movf	?___ftmul,w
  3325  0E8F  00C0               	movwf	?_scale
  3326  0E90  0831               	movf	?___ftmul+1,w
  3327  0E91  00C1               	movwf	?_scale+1
  3328  0E92  0832               	movf	?___ftmul+2,w
  3329  0E93  00C2               	movwf	?_scale+2
  3330  0E94  0008               	return
  3331  0E95                     l1963:	
  3332                           
  3333                           ;doprnt.c: 434: return _npowers_[scl];
  3334  0E95  3003               	movlw	3
  3335  0E96  00C3               	movwf	??_scale
  3336  0E97  0843               	movf	??_scale,w
  3337  0E98  00A4               	movwf	___bmul@multiplicand
  3338  0E99  0848               	movf	scale@scl,w
  3339  0E9A  160A  118A  238F  120A  158A  	fcall	___bmul
  3340  0E9F  3E29               	addlw	low (__npowers_-__stringbase)
  3341  0EA0  0084               	movwf	4
  3342  0EA1  160A  118A  2000  120A  158A  	fcall	stringdir
  3343  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  3344  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  3345  0EA8  00C0               	movwf	?_scale
  3346  0EA9  160A  118A  2000  120A  158A  	fcall	stringdir
  3347  0EAE  00C1               	movwf	?_scale+1
  3348  0EAF  160A  118A  2000   	fcall	stringdir
  3349  0EB2  00C2               	movwf	?_scale+2
  3350  0EB3  0008               	return
  3351  0EB4                     l1967:	
  3352                           
  3353                           ;doprnt.c: 435: }
  3354                           ;doprnt.c: 436: if(scl>=110)
  3355  0EB4  0848               	movf	scale@scl,w
  3356  0EB5  3A80               	xorlw	128
  3357  0EB6  3E12               	addlw	-238
  3358  0EB7  1C03               	skipc
  3359  0EB8  2F73               	goto	l1975
  3360                           
  3361                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3362  0EB9  3003               	movlw	3
  3363  0EBA  00C3               	movwf	??_scale
  3364  0EBB  0843               	movf	??_scale,w
  3365  0EBC  00A4               	movwf	___bmul@multiplicand
  3366  0EBD  300A               	movlw	10
  3367  0EBE  00F7               	movwf	___awdiv@divisor
  3368  0EBF  3000               	movlw	0
  3369  0EC0  00F8               	movwf	___awdiv@divisor+1
  3370  0EC1  0848               	movf	scale@scl,w
  3371  0EC2  00F2               	movwf	___awmod@dividend
  3372  0EC3  01F3               	clrf	___awmod@dividend+1
  3373  0EC4  1BF2               	btfsc	___awmod@dividend,7
  3374  0EC5  03F3               	decf	___awmod@dividend+1,f
  3375  0EC6  3064               	movlw	100
  3376  0EC7  00F0               	movwf	___awmod@divisor
  3377  0EC8  3000               	movlw	0
  3378  0EC9  00F1               	movwf	___awmod@divisor+1
  3379  0ECA  160A  118A  24D2  120A  158A  	fcall	___awmod
  3380  0ECF  0871               	movf	?___awmod+1,w
  3381  0ED0  01FA               	clrf	___awdiv@dividend+1
  3382  0ED1  07FA               	addwf	___awdiv@dividend+1,f
  3383  0ED2  0870               	movf	?___awmod,w
  3384  0ED3  01F9               	clrf	___awdiv@dividend
  3385  0ED4  07F9               	addwf	___awdiv@dividend,f
  3386  0ED5  160A  118A  257C  120A  158A  	fcall	___awdiv
  3387  0EDA  0877               	movf	?___awdiv,w
  3388  0EDB  3E09               	addlw	9
  3389  0EDC  160A  118A  238F  120A  158A  	fcall	___bmul
  3390  0EE1  3E50               	addlw	low (__powers_-__stringbase)
  3391  0EE2  0084               	movwf	4
  3392  0EE3  160A  118A  2000  120A  158A  	fcall	stringdir
  3393  0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  3394  0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  3395  0EEA  00B0               	movwf	___ftmul@f1
  3396  0EEB  160A  118A  2000  120A  158A  	fcall	stringdir
  3397  0EF0  00B1               	movwf	___ftmul@f1+1
  3398  0EF1  160A  118A  2000  120A  158A  	fcall	stringdir
  3399  0EF6  00B2               	movwf	___ftmul@f1+2
  3400  0EF7  3003               	movlw	3
  3401  0EF8  00C4               	movwf	??_scale+1
  3402  0EF9  0844               	movf	??_scale+1,w
  3403  0EFA  00A4               	movwf	___bmul@multiplicand
  3404  0EFB  3064               	movlw	100
  3405  0EFC  00F7               	movwf	___awdiv@divisor
  3406  0EFD  3000               	movlw	0
  3407  0EFE  00F8               	movwf	___awdiv@divisor+1
  3408  0EFF  0848               	movf	scale@scl,w
  3409  0F00  00F9               	movwf	___awdiv@dividend
  3410  0F01  01FA               	clrf	___awdiv@dividend+1
  3411  0F02  1BF9               	btfsc	___awdiv@dividend,7
  3412  0F03  03FA               	decf	___awdiv@dividend+1,f
  3413  0F04  160A  118A  257C  120A  158A  	fcall	___awdiv
  3414  0F09  0877               	movf	?___awdiv,w
  3415  0F0A  3E12               	addlw	18
  3416  0F0B  160A  118A  238F  120A  158A  	fcall	___bmul
  3417  0F10  3E50               	addlw	low (__powers_-__stringbase)
  3418  0F11  0084               	movwf	4
  3419  0F12  160A  118A  2000  120A  158A  	fcall	stringdir
  3420  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  3421  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  3422  0F19  00B3               	movwf	___ftmul@f2
  3423  0F1A  160A  118A  2000  120A  158A  	fcall	stringdir
  3424  0F1F  00B4               	movwf	___ftmul@f2+1
  3425  0F20  160A  118A  2000  120A  158A  	fcall	stringdir
  3426  0F25  00B5               	movwf	___ftmul@f2+2
  3427  0F26  160A  118A  272D  120A  158A  	fcall	___ftmul
  3428  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  3429  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  3430  0F2D  0830               	movf	?___ftmul,w
  3431  0F2E  00C5               	movwf	_scale$571
  3432  0F2F  0831               	movf	?___ftmul+1,w
  3433  0F30  00C6               	movwf	_scale$571+1
  3434  0F31  0832               	movf	?___ftmul+2,w
  3435  0F32  00C7               	movwf	_scale$571+2
  3436                           
  3437                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3438  0F33  3003               	movlw	3
  3439  0F34  00C3               	movwf	??_scale
  3440  0F35  0843               	movf	??_scale,w
  3441  0F36  00A4               	movwf	___bmul@multiplicand
  3442  0F37  0848               	movf	scale@scl,w
  3443  0F38  00F2               	movwf	___awmod@dividend
  3444  0F39  01F3               	clrf	___awmod@dividend+1
  3445  0F3A  1BF2               	btfsc	___awmod@dividend,7
  3446  0F3B  03F3               	decf	___awmod@dividend+1,f
  3447  0F3C  300A               	movlw	10
  3448  0F3D  00F0               	movwf	___awmod@divisor
  3449  0F3E  3000               	movlw	0
  3450  0F3F  00F1               	movwf	___awmod@divisor+1
  3451  0F40  160A  118A  24D2  120A  158A  	fcall	___awmod
  3452  0F45  0870               	movf	?___awmod,w
  3453  0F46  160A  118A  238F  120A  158A  	fcall	___bmul
  3454  0F4B  3E50               	addlw	low (__powers_-__stringbase)
  3455  0F4C  0084               	movwf	4
  3456  0F4D  160A  118A  2000  120A  158A  	fcall	stringdir
  3457  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3458  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  3459  0F54  00B0               	movwf	___ftmul@f1
  3460  0F55  160A  118A  2000  120A  158A  	fcall	stringdir
  3461  0F5A  00B1               	movwf	___ftmul@f1+1
  3462  0F5B  160A  118A  2000  120A  158A  	fcall	stringdir
  3463  0F60  00B2               	movwf	___ftmul@f1+2
  3464  0F61  0845               	movf	_scale$571,w
  3465  0F62  00B3               	movwf	___ftmul@f2
  3466  0F63  0846               	movf	_scale$571+1,w
  3467  0F64  00B4               	movwf	___ftmul@f2+1
  3468  0F65  0847               	movf	_scale$571+2,w
  3469  0F66  00B5               	movwf	___ftmul@f2+2
  3470  0F67  160A  118A  272D   	fcall	___ftmul
  3471  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  3472  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  3473  0F6C  0830               	movf	?___ftmul,w
  3474  0F6D  00C0               	movwf	?_scale
  3475  0F6E  0831               	movf	?___ftmul+1,w
  3476  0F6F  00C1               	movwf	?_scale+1
  3477  0F70  0832               	movf	?___ftmul+2,w
  3478  0F71  00C2               	movwf	?_scale+2
  3479  0F72  0008               	return
  3480  0F73                     l1975:	
  3481                           
  3482                           ;doprnt.c: 438: else if(scl > 10)
  3483  0F73  0848               	movf	scale@scl,w
  3484  0F74  3A80               	xorlw	128
  3485  0F75  3E75               	addlw	-139
  3486  0F76  1C03               	skipc
  3487  0F77  2FE1               	goto	l1981
  3488                           
  3489                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3490  0F78  3003               	movlw	3
  3491  0F79  00C3               	movwf	??_scale
  3492  0F7A  0843               	movf	??_scale,w
  3493  0F7B  00A4               	movwf	___bmul@multiplicand
  3494  0F7C  0848               	movf	scale@scl,w
  3495  0F7D  00F2               	movwf	___awmod@dividend
  3496  0F7E  01F3               	clrf	___awmod@dividend+1
  3497  0F7F  1BF2               	btfsc	___awmod@dividend,7
  3498  0F80  03F3               	decf	___awmod@dividend+1,f
  3499  0F81  300A               	movlw	10
  3500  0F82  00F0               	movwf	___awmod@divisor
  3501  0F83  3000               	movlw	0
  3502  0F84  00F1               	movwf	___awmod@divisor+1
  3503  0F85  160A  118A  24D2  120A  158A  	fcall	___awmod
  3504  0F8A  0870               	movf	?___awmod,w
  3505  0F8B  160A  118A  238F  120A  158A  	fcall	___bmul
  3506  0F90  3E50               	addlw	low (__powers_-__stringbase)
  3507  0F91  0084               	movwf	4
  3508  0F92  160A  118A  2000  120A  158A  	fcall	stringdir
  3509  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  3511  0F99  00B0               	movwf	___ftmul@f1
  3512  0F9A  160A  118A  2000  120A  158A  	fcall	stringdir
  3513  0F9F  00B1               	movwf	___ftmul@f1+1
  3514  0FA0  160A  118A  2000  120A  158A  	fcall	stringdir
  3515  0FA5  00B2               	movwf	___ftmul@f1+2
  3516  0FA6  3003               	movlw	3
  3517  0FA7  00C4               	movwf	??_scale+1
  3518  0FA8  0844               	movf	??_scale+1,w
  3519  0FA9  00A4               	movwf	___bmul@multiplicand
  3520  0FAA  300A               	movlw	10
  3521  0FAB  00F7               	movwf	___awdiv@divisor
  3522  0FAC  3000               	movlw	0
  3523  0FAD  00F8               	movwf	___awdiv@divisor+1
  3524  0FAE  0848               	movf	scale@scl,w
  3525  0FAF  00F9               	movwf	___awdiv@dividend
  3526  0FB0  01FA               	clrf	___awdiv@dividend+1
  3527  0FB1  1BF9               	btfsc	___awdiv@dividend,7
  3528  0FB2  03FA               	decf	___awdiv@dividend+1,f
  3529  0FB3  160A  118A  257C  120A  158A  	fcall	___awdiv
  3530  0FB8  0877               	movf	?___awdiv,w
  3531  0FB9  3E09               	addlw	9
  3532  0FBA  160A  118A  238F  120A  158A  	fcall	___bmul
  3533  0FBF  3E50               	addlw	low (__powers_-__stringbase)
  3534  0FC0  0084               	movwf	4
  3535  0FC1  160A  118A  2000  120A  158A  	fcall	stringdir
  3536  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  3537  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  3538  0FC8  00B3               	movwf	___ftmul@f2
  3539  0FC9  160A  118A  2000  120A  158A  	fcall	stringdir
  3540  0FCE  00B4               	movwf	___ftmul@f2+1
  3541  0FCF  160A  118A  2000  120A  158A  	fcall	stringdir
  3542  0FD4  00B5               	movwf	___ftmul@f2+2
  3543  0FD5  160A  118A  272D   	fcall	___ftmul
  3544  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  3545  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  3546  0FDA  0830               	movf	?___ftmul,w
  3547  0FDB  00C0               	movwf	?_scale
  3548  0FDC  0831               	movf	?___ftmul+1,w
  3549  0FDD  00C1               	movwf	?_scale+1
  3550  0FDE  0832               	movf	?___ftmul+2,w
  3551  0FDF  00C2               	movwf	?_scale+2
  3552  0FE0  0008               	return
  3553  0FE1                     l1981:	
  3554                           
  3555                           ;doprnt.c: 440: return _powers_[scl];
  3556  0FE1  3003               	movlw	3
  3557  0FE2  00C3               	movwf	??_scale
  3558  0FE3  0843               	movf	??_scale,w
  3559  0FE4  00A4               	movwf	___bmul@multiplicand
  3560  0FE5  0848               	movf	scale@scl,w
  3561  0FE6  160A  118A  238F  120A  158A  	fcall	___bmul
  3562  0FEB  3E50               	addlw	low (__powers_-__stringbase)
  3563  0FEC  0084               	movwf	4
  3564  0FED  160A  118A  2000  120A  158A  	fcall	stringdir
  3565  0FF2  1283               	bcf	3,5	;RP0=0, select bank0
  3566  0FF3  1303               	bcf	3,6	;RP1=0, select bank0
  3567  0FF4  00C0               	movwf	?_scale
  3568  0FF5  160A  118A  2000  120A  158A  	fcall	stringdir
  3569  0FFA  00C1               	movwf	?_scale+1
  3570  0FFB  160A  118A  2000   	fcall	stringdir
  3571  0FFE  00C2               	movwf	?_scale+2
  3572  0FFF  0008               	return
  3573  1000                     __end_of_scale:	
  3574                           
  3575                           	psect	text3
  3576  00C7                     __ptext3:	
  3577 ;; *************** function _fround *****************
  3578 ;; Defined at:
  3579 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  prec            1    wreg     unsigned char 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  prec            1   47[BANK0 ] unsigned char 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  3   32[BANK0 ] unsigned char 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3593 ;;      Params:         0       3       0       0       0
  3594 ;;      Locals:         0       7       0       0       0
  3595 ;;      Temps:          0       6       0       0       0
  3596 ;;      Totals:         0      16       0       0       0
  3597 ;;Total ram usage:       16 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    2
  3600 ;; This function calls:
  3601 ;;		___awdiv
  3602 ;;		___awmod
  3603 ;;		___bmul
  3604 ;;		___ftmul
  3605 ;; This function is called by:
  3606 ;;		_sprintf
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           
  3611                           ;psect for function _fround
  3612  00C7                     _fround:	
  3613                           
  3614                           ;incstack = 0
  3615                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3616                           ;fround@prec stored from wreg
  3617  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  3618  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  3619  00C9  00CF               	movwf	fround@prec
  3620                           
  3621                           ;doprnt.c: 413: if(prec>=110)
  3622  00CA  306E               	movlw	110
  3623  00CB  024F               	subwf	fround@prec,w
  3624  00CC  1C03               	skipc
  3625  00CD  29A7               	goto	l1933
  3626                           
  3627                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3628  00CE  3003               	movlw	3
  3629  00CF  00C3               	movwf	??_fround
  3630  00D0  0843               	movf	??_fround,w
  3631  00D1  00A4               	movwf	___bmul@multiplicand
  3632  00D2  300A               	movlw	10
  3633  00D3  00F7               	movwf	___awdiv@divisor
  3634  00D4  3000               	movlw	0
  3635  00D5  00F8               	movwf	___awdiv@divisor+1
  3636  00D6  084F               	movf	fround@prec,w
  3637  00D7  00C4               	movwf	??_fround+1
  3638  00D8  01C5               	clrf	??_fround+2
  3639  00D9  0844               	movf	??_fround+1,w
  3640  00DA  00F2               	movwf	___awmod@dividend
  3641  00DB  0845               	movf	??_fround+2,w
  3642  00DC  00F3               	movwf	___awmod@dividend+1
  3643  00DD  3064               	movlw	100
  3644  00DE  00F0               	movwf	___awmod@divisor
  3645  00DF  3000               	movlw	0
  3646  00E0  00F1               	movwf	___awmod@divisor+1
  3647  00E1  160A  118A  24D2  120A  118A  	fcall	___awmod
  3648  00E6  0871               	movf	?___awmod+1,w
  3649  00E7  01FA               	clrf	___awdiv@dividend+1
  3650  00E8  07FA               	addwf	___awdiv@dividend+1,f
  3651  00E9  0870               	movf	?___awmod,w
  3652  00EA  01F9               	clrf	___awdiv@dividend
  3653  00EB  07F9               	addwf	___awdiv@dividend,f
  3654  00EC  160A  118A  257C  120A  118A  	fcall	___awdiv
  3655  00F1  0877               	movf	?___awdiv,w
  3656  00F2  3E09               	addlw	9
  3657  00F3  160A  118A  238F  120A  118A  	fcall	___bmul
  3658  00F8  3E29               	addlw	low (__npowers_-__stringbase)
  3659  00F9  0084               	movwf	4
  3660  00FA  160A  118A  2000  120A  118A  	fcall	stringdir
  3661  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  3662  0100  1303               	bcf	3,6	;RP1=0, select bank0
  3663  0101  00B0               	movwf	___ftmul@f1
  3664  0102  160A  118A  2000  120A  118A  	fcall	stringdir
  3665  0107  00B1               	movwf	___ftmul@f1+1
  3666  0108  160A  118A  2000  120A  118A  	fcall	stringdir
  3667  010D  00B2               	movwf	___ftmul@f1+2
  3668  010E  3003               	movlw	3
  3669  010F  00C6               	movwf	??_fround+3
  3670  0110  0846               	movf	??_fround+3,w
  3671  0111  00A4               	movwf	___bmul@multiplicand
  3672  0112  3064               	movlw	100
  3673  0113  00F7               	movwf	___awdiv@divisor
  3674  0114  3000               	movlw	0
  3675  0115  00F8               	movwf	___awdiv@divisor+1
  3676  0116  084F               	movf	fround@prec,w
  3677  0117  00C7               	movwf	??_fround+4
  3678  0118  01C8               	clrf	??_fround+5
  3679  0119  0847               	movf	??_fround+4,w
  3680  011A  00F9               	movwf	___awdiv@dividend
  3681  011B  0848               	movf	??_fround+5,w
  3682  011C  00FA               	movwf	___awdiv@dividend+1
  3683  011D  160A  118A  257C  120A  118A  	fcall	___awdiv
  3684  0122  0877               	movf	?___awdiv,w
  3685  0123  3E12               	addlw	18
  3686  0124  160A  118A  238F  120A  118A  	fcall	___bmul
  3687  0129  3E29               	addlw	low (__npowers_-__stringbase)
  3688  012A  0084               	movwf	4
  3689  012B  160A  118A  2000  120A  118A  	fcall	stringdir
  3690  0130  1283               	bcf	3,5	;RP0=0, select bank0
  3691  0131  1303               	bcf	3,6	;RP1=0, select bank0
  3692  0132  00B3               	movwf	___ftmul@f2
  3693  0133  160A  118A  2000  120A  118A  	fcall	stringdir
  3694  0138  00B4               	movwf	___ftmul@f2+1
  3695  0139  160A  118A  2000  120A  118A  	fcall	stringdir
  3696  013E  00B5               	movwf	___ftmul@f2+2
  3697  013F  160A  118A  272D  120A  118A  	fcall	___ftmul
  3698  0144  1283               	bcf	3,5	;RP0=0, select bank0
  3699  0145  1303               	bcf	3,6	;RP1=0, select bank0
  3700  0146  0830               	movf	?___ftmul,w
  3701  0147  00CC               	movwf	_fround$569
  3702  0148  0831               	movf	?___ftmul+1,w
  3703  0149  00CD               	movwf	_fround$569+1
  3704  014A  0832               	movf	?___ftmul+2,w
  3705  014B  00CE               	movwf	_fround$569+2
  3706                           
  3707                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3708  014C  3003               	movlw	3
  3709  014D  00C3               	movwf	??_fround
  3710  014E  0843               	movf	??_fround,w
  3711  014F  00A4               	movwf	___bmul@multiplicand
  3712  0150  084F               	movf	fround@prec,w
  3713  0151  00C4               	movwf	??_fround+1
  3714  0152  01C5               	clrf	??_fround+2
  3715  0153  0844               	movf	??_fround+1,w
  3716  0154  00F2               	movwf	___awmod@dividend
  3717  0155  0845               	movf	??_fround+2,w
  3718  0156  00F3               	movwf	___awmod@dividend+1
  3719  0157  300A               	movlw	10
  3720  0158  00F0               	movwf	___awmod@divisor
  3721  0159  3000               	movlw	0
  3722  015A  00F1               	movwf	___awmod@divisor+1
  3723  015B  160A  118A  24D2  120A  118A  	fcall	___awmod
  3724  0160  0870               	movf	?___awmod,w
  3725  0161  160A  118A  238F  120A  118A  	fcall	___bmul
  3726  0166  3E29               	addlw	low (__npowers_-__stringbase)
  3727  0167  0084               	movwf	4
  3728  0168  160A  118A  2000  120A  118A  	fcall	stringdir
  3729  016D  1283               	bcf	3,5	;RP0=0, select bank0
  3730  016E  1303               	bcf	3,6	;RP1=0, select bank0
  3731  016F  00B0               	movwf	___ftmul@f1
  3732  0170  160A  118A  2000  120A  118A  	fcall	stringdir
  3733  0175  00B1               	movwf	___ftmul@f1+1
  3734  0176  160A  118A  2000  120A  118A  	fcall	stringdir
  3735  017B  00B2               	movwf	___ftmul@f1+2
  3736  017C  084C               	movf	_fround$569,w
  3737  017D  00B3               	movwf	___ftmul@f2
  3738  017E  084D               	movf	_fround$569+1,w
  3739  017F  00B4               	movwf	___ftmul@f2+1
  3740  0180  084E               	movf	_fround$569+2,w
  3741  0181  00B5               	movwf	___ftmul@f2+2
  3742  0182  160A  118A  272D  120A  118A  	fcall	___ftmul
  3743  0187  1283               	bcf	3,5	;RP0=0, select bank0
  3744  0188  1303               	bcf	3,6	;RP1=0, select bank0
  3745  0189  0830               	movf	?___ftmul,w
  3746  018A  00C9               	movwf	_fround$570
  3747  018B  0831               	movf	?___ftmul+1,w
  3748  018C  00CA               	movwf	_fround$570+1
  3749  018D  0832               	movf	?___ftmul+2,w
  3750  018E  00CB               	movwf	_fround$570+2
  3751                           
  3752                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3753  018F  3000               	movlw	0
  3754  0190  00B0               	movwf	___ftmul@f1
  3755  0191  3000               	movlw	0
  3756  0192  00B1               	movwf	___ftmul@f1+1
  3757  0193  303F               	movlw	63
  3758  0194  00B2               	movwf	___ftmul@f1+2
  3759  0195  0849               	movf	_fround$570,w
  3760  0196  00B3               	movwf	___ftmul@f2
  3761  0197  084A               	movf	_fround$570+1,w
  3762  0198  00B4               	movwf	___ftmul@f2+1
  3763  0199  084B               	movf	_fround$570+2,w
  3764  019A  00B5               	movwf	___ftmul@f2+2
  3765  019B  160A  118A  272D   	fcall	___ftmul
  3766  019E  1283               	bcf	3,5	;RP0=0, select bank0
  3767  019F  1303               	bcf	3,6	;RP1=0, select bank0
  3768  01A0  0830               	movf	?___ftmul,w
  3769  01A1  00C0               	movwf	?_fround
  3770  01A2  0831               	movf	?___ftmul+1,w
  3771  01A3  00C1               	movwf	?_fround+1
  3772  01A4  0832               	movf	?___ftmul+2,w
  3773  01A5  00C2               	movwf	?_fround+2
  3774  01A6  0008               	return
  3775  01A7                     l1933:	
  3776                           
  3777                           ;doprnt.c: 415: else if(prec > 10)
  3778  01A7  300B               	movlw	11
  3779  01A8  024F               	subwf	fround@prec,w
  3780  01A9  1C03               	skipc
  3781  01AA  2A31               	goto	l1941
  3782                           
  3783                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3784  01AB  3003               	movlw	3
  3785  01AC  00C3               	movwf	??_fround
  3786  01AD  0843               	movf	??_fround,w
  3787  01AE  00A4               	movwf	___bmul@multiplicand
  3788  01AF  084F               	movf	fround@prec,w
  3789  01B0  00C4               	movwf	??_fround+1
  3790  01B1  01C5               	clrf	??_fround+2
  3791  01B2  0844               	movf	??_fround+1,w
  3792  01B3  00F2               	movwf	___awmod@dividend
  3793  01B4  0845               	movf	??_fround+2,w
  3794  01B5  00F3               	movwf	___awmod@dividend+1
  3795  01B6  300A               	movlw	10
  3796  01B7  00F0               	movwf	___awmod@divisor
  3797  01B8  3000               	movlw	0
  3798  01B9  00F1               	movwf	___awmod@divisor+1
  3799  01BA  160A  118A  24D2  120A  118A  	fcall	___awmod
  3800  01BF  0870               	movf	?___awmod,w
  3801  01C0  160A  118A  238F  120A  118A  	fcall	___bmul
  3802  01C5  3E29               	addlw	low (__npowers_-__stringbase)
  3803  01C6  0084               	movwf	4
  3804  01C7  160A  118A  2000  120A  118A  	fcall	stringdir
  3805  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3806  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3807  01CE  00B0               	movwf	___ftmul@f1
  3808  01CF  160A  118A  2000  120A  118A  	fcall	stringdir
  3809  01D4  00B1               	movwf	___ftmul@f1+1
  3810  01D5  160A  118A  2000  120A  118A  	fcall	stringdir
  3811  01DA  00B2               	movwf	___ftmul@f1+2
  3812  01DB  3003               	movlw	3
  3813  01DC  00C6               	movwf	??_fround+3
  3814  01DD  0846               	movf	??_fround+3,w
  3815  01DE  00A4               	movwf	___bmul@multiplicand
  3816  01DF  300A               	movlw	10
  3817  01E0  00F7               	movwf	___awdiv@divisor
  3818  01E1  3000               	movlw	0
  3819  01E2  00F8               	movwf	___awdiv@divisor+1
  3820  01E3  084F               	movf	fround@prec,w
  3821  01E4  00C7               	movwf	??_fround+4
  3822  01E5  01C8               	clrf	??_fround+5
  3823  01E6  0847               	movf	??_fround+4,w
  3824  01E7  00F9               	movwf	___awdiv@dividend
  3825  01E8  0848               	movf	??_fround+5,w
  3826  01E9  00FA               	movwf	___awdiv@dividend+1
  3827  01EA  160A  118A  257C  120A  118A  	fcall	___awdiv
  3828  01EF  0877               	movf	?___awdiv,w
  3829  01F0  3E09               	addlw	9
  3830  01F1  160A  118A  238F  120A  118A  	fcall	___bmul
  3831  01F6  3E29               	addlw	low (__npowers_-__stringbase)
  3832  01F7  0084               	movwf	4
  3833  01F8  160A  118A  2000  120A  118A  	fcall	stringdir
  3834  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  3835  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  3836  01FF  00B3               	movwf	___ftmul@f2
  3837  0200  160A  118A  2000  120A  118A  	fcall	stringdir
  3838  0205  00B4               	movwf	___ftmul@f2+1
  3839  0206  160A  118A  2000  120A  118A  	fcall	stringdir
  3840  020B  00B5               	movwf	___ftmul@f2+2
  3841  020C  160A  118A  272D  120A  118A  	fcall	___ftmul
  3842  0211  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0212  1303               	bcf	3,6	;RP1=0, select bank0
  3844  0213  0830               	movf	?___ftmul,w
  3845  0214  00CC               	movwf	_fround$569
  3846  0215  0831               	movf	?___ftmul+1,w
  3847  0216  00CD               	movwf	_fround$569+1
  3848  0217  0832               	movf	?___ftmul+2,w
  3849  0218  00CE               	movwf	_fround$569+2
  3850                           
  3851                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3852  0219  3000               	movlw	0
  3853  021A  00B0               	movwf	___ftmul@f1
  3854  021B  3000               	movlw	0
  3855  021C  00B1               	movwf	___ftmul@f1+1
  3856  021D  303F               	movlw	63
  3857  021E  00B2               	movwf	___ftmul@f1+2
  3858  021F  084C               	movf	_fround$569,w
  3859  0220  00B3               	movwf	___ftmul@f2
  3860  0221  084D               	movf	_fround$569+1,w
  3861  0222  00B4               	movwf	___ftmul@f2+1
  3862  0223  084E               	movf	_fround$569+2,w
  3863  0224  00B5               	movwf	___ftmul@f2+2
  3864  0225  160A  118A  272D   	fcall	___ftmul
  3865  0228  1283               	bcf	3,5	;RP0=0, select bank0
  3866  0229  1303               	bcf	3,6	;RP1=0, select bank0
  3867  022A  0830               	movf	?___ftmul,w
  3868  022B  00C0               	movwf	?_fround
  3869  022C  0831               	movf	?___ftmul+1,w
  3870  022D  00C1               	movwf	?_fround+1
  3871  022E  0832               	movf	?___ftmul+2,w
  3872  022F  00C2               	movwf	?_fround+2
  3873  0230  0008               	return
  3874  0231                     l1941:	
  3875                           
  3876                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3877  0231  3000               	movlw	0
  3878  0232  00B0               	movwf	___ftmul@f1
  3879  0233  3000               	movlw	0
  3880  0234  00B1               	movwf	___ftmul@f1+1
  3881  0235  303F               	movlw	63
  3882  0236  00B2               	movwf	___ftmul@f1+2
  3883  0237  3003               	movlw	3
  3884  0238  00C3               	movwf	??_fround
  3885  0239  0843               	movf	??_fround,w
  3886  023A  00A4               	movwf	___bmul@multiplicand
  3887  023B  084F               	movf	fround@prec,w
  3888  023C  160A  118A  238F  120A  118A  	fcall	___bmul
  3889  0241  3E29               	addlw	low (__npowers_-__stringbase)
  3890  0242  0084               	movwf	4
  3891  0243  160A  118A  2000  120A  118A  	fcall	stringdir
  3892  0248  1283               	bcf	3,5	;RP0=0, select bank0
  3893  0249  1303               	bcf	3,6	;RP1=0, select bank0
  3894  024A  00B3               	movwf	___ftmul@f2
  3895  024B  160A  118A  2000  120A  118A  	fcall	stringdir
  3896  0250  00B4               	movwf	___ftmul@f2+1
  3897  0251  160A  118A  2000  120A  118A  	fcall	stringdir
  3898  0256  00B5               	movwf	___ftmul@f2+2
  3899  0257  160A  118A  272D   	fcall	___ftmul
  3900  025A  1283               	bcf	3,5	;RP0=0, select bank0
  3901  025B  1303               	bcf	3,6	;RP1=0, select bank0
  3902  025C  0830               	movf	?___ftmul,w
  3903  025D  00C0               	movwf	?_fround
  3904  025E  0831               	movf	?___ftmul+1,w
  3905  025F  00C1               	movwf	?_fround+1
  3906  0260  0832               	movf	?___ftmul+2,w
  3907  0261  00C2               	movwf	?_fround+2
  3908  0262  0008               	return
  3909  0263                     __end_of_fround:	
  3910                           
  3911                           	psect	text4
  3912  172D                     __ptext4:	
  3913 ;; *************** function ___ftmul *****************
  3914 ;; Defined at:
  3915 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  f1              3   16[BANK0 ] float 
  3918 ;;  f2              3   19[BANK0 ] float 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  3921 ;;  sign            1   31[BANK0 ] unsigned char 
  3922 ;;  cntr            1   30[BANK0 ] unsigned char 
  3923 ;;  exp             1   26[BANK0 ] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  3   16[BANK0 ] float 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0, pclath, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3933 ;;      Params:         0       6       0       0       0
  3934 ;;      Locals:         0       6       0       0       0
  3935 ;;      Temps:          0       4       0       0       0
  3936 ;;      Totals:         0      16       0       0       0
  3937 ;;Total ram usage:       16 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    1
  3940 ;; This function calls:
  3941 ;;		___ftpack
  3942 ;; This function is called by:
  3943 ;;		_main
  3944 ;;		_fround
  3945 ;;		_scale
  3946 ;;		_sprintf
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           
  3951                           ;psect for function ___ftmul
  3952  172D                     ___ftmul:	
  3953                           
  3954                           ;incstack = 0
  3955                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3956  172D  1283               	bcf	3,5	;RP0=0, select bank0
  3957  172E  1303               	bcf	3,6	;RP1=0, select bank0
  3958  172F  0830               	movf	___ftmul@f1,w
  3959  1730  00B6               	movwf	??___ftmul
  3960  1731  0831               	movf	___ftmul@f1+1,w
  3961  1732  00B7               	movwf	??___ftmul+1
  3962  1733  0832               	movf	___ftmul@f1+2,w
  3963  1734  00B8               	movwf	??___ftmul+2
  3964  1735  1003               	clrc
  3965  1736  0D37               	rlf	??___ftmul+1,w
  3966  1737  0D38               	rlf	??___ftmul+2,w
  3967  1738  00B9               	movwf	??___ftmul+3
  3968  1739  0839               	movf	??___ftmul+3,w
  3969  173A  00BA               	movwf	___ftmul@exp
  3970  173B  08BA               	movf	___ftmul@exp,f
  3971  173C  1D03               	skipz
  3972  173D  2F45               	goto	l1853
  3973  173E  3000               	movlw	0
  3974  173F  00B0               	movwf	?___ftmul
  3975  1740  3000               	movlw	0
  3976  1741  00B1               	movwf	?___ftmul+1
  3977  1742  3000               	movlw	0
  3978  1743  00B2               	movwf	?___ftmul+2
  3979  1744  0008               	return
  3980  1745                     l1853:	
  3981  1745  0833               	movf	___ftmul@f2,w
  3982  1746  00B6               	movwf	??___ftmul
  3983  1747  0834               	movf	___ftmul@f2+1,w
  3984  1748  00B7               	movwf	??___ftmul+1
  3985  1749  0835               	movf	___ftmul@f2+2,w
  3986  174A  00B8               	movwf	??___ftmul+2
  3987  174B  1003               	clrc
  3988  174C  0D37               	rlf	??___ftmul+1,w
  3989  174D  0D38               	rlf	??___ftmul+2,w
  3990  174E  00B9               	movwf	??___ftmul+3
  3991  174F  0839               	movf	??___ftmul+3,w
  3992  1750  00BF               	movwf	___ftmul@sign
  3993  1751  08BF               	movf	___ftmul@sign,f
  3994  1752  1D03               	skipz
  3995  1753  2F5B               	goto	l1859
  3996  1754  3000               	movlw	0
  3997  1755  00B0               	movwf	?___ftmul
  3998  1756  3000               	movlw	0
  3999  1757  00B1               	movwf	?___ftmul+1
  4000  1758  3000               	movlw	0
  4001  1759  00B2               	movwf	?___ftmul+2
  4002  175A  0008               	return
  4003  175B                     l1859:	
  4004  175B  083F               	movf	___ftmul@sign,w
  4005  175C  3E7B               	addlw	123
  4006  175D  00B6               	movwf	??___ftmul
  4007  175E  0836               	movf	??___ftmul,w
  4008  175F  07BA               	addwf	___ftmul@exp,f
  4009  1760  0830               	movf	___ftmul@f1,w
  4010  1761  00B6               	movwf	??___ftmul
  4011  1762  0831               	movf	___ftmul@f1+1,w
  4012  1763  00B7               	movwf	??___ftmul+1
  4013  1764  0832               	movf	___ftmul@f1+2,w
  4014  1765  00B8               	movwf	??___ftmul+2
  4015  1766  3010               	movlw	16
  4016  1767                     u2415:	
  4017  1767  1003               	clrc
  4018  1768  0CB8               	rrf	??___ftmul+2,f
  4019  1769  0CB7               	rrf	??___ftmul+1,f
  4020  176A  0CB6               	rrf	??___ftmul,f
  4021  176B  3EFF               	addlw	-1
  4022  176C  1D03               	skipz
  4023  176D  2F67               	goto	u2415
  4024  176E  0836               	movf	??___ftmul,w
  4025  176F  00B9               	movwf	??___ftmul+3
  4026  1770  0839               	movf	??___ftmul+3,w
  4027  1771  00BF               	movwf	___ftmul@sign
  4028  1772  0833               	movf	___ftmul@f2,w
  4029  1773  00B6               	movwf	??___ftmul
  4030  1774  0834               	movf	___ftmul@f2+1,w
  4031  1775  00B7               	movwf	??___ftmul+1
  4032  1776  0835               	movf	___ftmul@f2+2,w
  4033  1777  00B8               	movwf	??___ftmul+2
  4034  1778  3010               	movlw	16
  4035  1779                     u2425:	
  4036  1779  1003               	clrc
  4037  177A  0CB8               	rrf	??___ftmul+2,f
  4038  177B  0CB7               	rrf	??___ftmul+1,f
  4039  177C  0CB6               	rrf	??___ftmul,f
  4040  177D  3EFF               	addlw	-1
  4041  177E  1D03               	skipz
  4042  177F  2F79               	goto	u2425
  4043  1780  0836               	movf	??___ftmul,w
  4044  1781  00B9               	movwf	??___ftmul+3
  4045  1782  0839               	movf	??___ftmul+3,w
  4046  1783  06BF               	xorwf	___ftmul@sign,f
  4047  1784  3080               	movlw	128
  4048  1785  00B6               	movwf	??___ftmul
  4049  1786  0836               	movf	??___ftmul,w
  4050  1787  05BF               	andwf	___ftmul@sign,f
  4051  1788  17B1               	bsf	___ftmul@f1+1,7
  4052  1789  17B4               	bsf	___ftmul@f2+1,7
  4053  178A  30FF               	movlw	255
  4054  178B  05B3               	andwf	___ftmul@f2,f
  4055  178C  30FF               	movlw	255
  4056  178D  05B4               	andwf	___ftmul@f2+1,f
  4057  178E  3000               	movlw	0
  4058  178F  05B5               	andwf	___ftmul@f2+2,f
  4059  1790  3000               	movlw	0
  4060  1791  00BB               	movwf	___ftmul@f3_as_product
  4061  1792  3000               	movlw	0
  4062  1793  00BC               	movwf	___ftmul@f3_as_product+1
  4063  1794  3000               	movlw	0
  4064  1795  00BD               	movwf	___ftmul@f3_as_product+2
  4065  1796  3007               	movlw	7
  4066  1797  00B6               	movwf	??___ftmul
  4067  1798  0836               	movf	??___ftmul,w
  4068  1799  00BE               	movwf	___ftmul@cntr
  4069  179A                     l1871:	
  4070  179A  1C30               	btfss	___ftmul@f1,0
  4071  179B  2FAA               	goto	l1875
  4072  179C  0833               	movf	___ftmul@f2,w
  4073  179D  07BB               	addwf	___ftmul@f3_as_product,f
  4074  179E  0834               	movf	___ftmul@f2+1,w
  4075  179F  1103               	clrz
  4076  17A0  1803               	skipnc
  4077  17A1  0A34               	incf	___ftmul@f2+1,w
  4078  17A2  1D03               	btfss	3,2
  4079  17A3  07BC               	addwf	___ftmul@f3_as_product+1,f
  4080  17A4  0835               	movf	___ftmul@f2+2,w
  4081  17A5  1103               	clrz
  4082  17A6  1803               	skipnc
  4083  17A7  0A35               	incf	___ftmul@f2+2,w
  4084  17A8  1D03               	btfss	3,2
  4085  17A9  07BD               	addwf	___ftmul@f3_as_product+2,f
  4086  17AA                     l1875:	
  4087  17AA  3001               	movlw	1
  4088  17AB                     u2455:	
  4089  17AB  1003               	clrc
  4090  17AC  0CB2               	rrf	___ftmul@f1+2,f
  4091  17AD  0CB1               	rrf	___ftmul@f1+1,f
  4092  17AE  0CB0               	rrf	___ftmul@f1,f
  4093  17AF  3EFF               	addlw	-1
  4094  17B0  1D03               	skipz
  4095  17B1  2FAB               	goto	u2455
  4096  17B2  3001               	movlw	1
  4097  17B3                     u2465:	
  4098  17B3  1003               	clrc
  4099  17B4  0DB3               	rlf	___ftmul@f2,f
  4100  17B5  0DB4               	rlf	___ftmul@f2+1,f
  4101  17B6  0DB5               	rlf	___ftmul@f2+2,f
  4102  17B7  3EFF               	addlw	-1
  4103  17B8  1D03               	skipz
  4104  17B9  2FB3               	goto	u2465
  4105  17BA  3001               	movlw	1
  4106  17BB  02BE               	subwf	___ftmul@cntr,f
  4107  17BC  1D03               	btfss	3,2
  4108  17BD  2F9A               	goto	l1871
  4109  17BE  3009               	movlw	9
  4110  17BF  00B6               	movwf	??___ftmul
  4111  17C0  0836               	movf	??___ftmul,w
  4112  17C1  00BE               	movwf	___ftmul@cntr
  4113  17C2                     l1883:	
  4114  17C2  1C30               	btfss	___ftmul@f1,0
  4115  17C3  2FD2               	goto	l1887
  4116  17C4  0833               	movf	___ftmul@f2,w
  4117  17C5  07BB               	addwf	___ftmul@f3_as_product,f
  4118  17C6  0834               	movf	___ftmul@f2+1,w
  4119  17C7  1103               	clrz
  4120  17C8  1803               	skipnc
  4121  17C9  0A34               	incf	___ftmul@f2+1,w
  4122  17CA  1D03               	btfss	3,2
  4123  17CB  07BC               	addwf	___ftmul@f3_as_product+1,f
  4124  17CC  0835               	movf	___ftmul@f2+2,w
  4125  17CD  1103               	clrz
  4126  17CE  1803               	skipnc
  4127  17CF  0A35               	incf	___ftmul@f2+2,w
  4128  17D0  1D03               	btfss	3,2
  4129  17D1  07BD               	addwf	___ftmul@f3_as_product+2,f
  4130  17D2                     l1887:	
  4131  17D2  3001               	movlw	1
  4132  17D3                     u2505:	
  4133  17D3  1003               	clrc
  4134  17D4  0CB2               	rrf	___ftmul@f1+2,f
  4135  17D5  0CB1               	rrf	___ftmul@f1+1,f
  4136  17D6  0CB0               	rrf	___ftmul@f1,f
  4137  17D7  3EFF               	addlw	-1
  4138  17D8  1D03               	skipz
  4139  17D9  2FD3               	goto	u2505
  4140  17DA  3001               	movlw	1
  4141  17DB                     u2515:	
  4142  17DB  1003               	clrc
  4143  17DC  0CBD               	rrf	___ftmul@f3_as_product+2,f
  4144  17DD  0CBC               	rrf	___ftmul@f3_as_product+1,f
  4145  17DE  0CBB               	rrf	___ftmul@f3_as_product,f
  4146  17DF  3EFF               	addlw	-1
  4147  17E0  1D03               	skipz
  4148  17E1  2FDB               	goto	u2515
  4149  17E2  3001               	movlw	1
  4150  17E3  02BE               	subwf	___ftmul@cntr,f
  4151  17E4  1D03               	btfss	3,2
  4152  17E5  2FC2               	goto	l1883
  4153  17E6  083B               	movf	___ftmul@f3_as_product,w
  4154  17E7  00F0               	movwf	___ftpack@arg
  4155  17E8  083C               	movf	___ftmul@f3_as_product+1,w
  4156  17E9  00F1               	movwf	___ftpack@arg+1
  4157  17EA  083D               	movf	___ftmul@f3_as_product+2,w
  4158  17EB  00F2               	movwf	___ftpack@arg+2
  4159  17EC  083A               	movf	___ftmul@exp,w
  4160  17ED  00B6               	movwf	??___ftmul
  4161  17EE  0836               	movf	??___ftmul,w
  4162  17EF  00F3               	movwf	___ftpack@exp
  4163  17F0  083F               	movf	___ftmul@sign,w
  4164  17F1  00B7               	movwf	??___ftmul+1
  4165  17F2  0837               	movf	??___ftmul+1,w
  4166  17F3  00F4               	movwf	___ftpack@sign
  4167  17F4  160A  118A  2637   	fcall	___ftpack
  4168  17F7  0870               	movf	?___ftpack,w
  4169  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  4170  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  4171  17FA  00B0               	movwf	?___ftmul
  4172  17FB  0871               	movf	?___ftpack+1,w
  4173  17FC  00B1               	movwf	?___ftmul+1
  4174  17FD  0872               	movf	?___ftpack+2,w
  4175  17FE  00B2               	movwf	?___ftmul+2
  4176  17FF  0008               	return
  4177  1800                     __end_of___ftmul:	
  4178                           
  4179                           	psect	text5
  4180  138F                     __ptext5:	
  4181 ;; *************** function ___bmul *****************
  4182 ;; Defined at:
  4183 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;  multiplier      1    wreg     unsigned char 
  4186 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  multiplier      1    6[BANK0 ] unsigned char 
  4189 ;;  product         1    5[BANK0 ] unsigned char 
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  1    wreg      unsigned char 
  4192 ;; Registers used:
  4193 ;;		wreg, status,2, status,0
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4199 ;;      Params:         0       1       0       0       0
  4200 ;;      Locals:         0       2       0       0       0
  4201 ;;      Temps:          1       0       0       0       0
  4202 ;;      Totals:         1       3       0       0       0
  4203 ;;Total ram usage:        4 bytes
  4204 ;; Hardware stack levels used:    1
  4205 ;; This function calls:
  4206 ;;		Nothing
  4207 ;; This function is called by:
  4208 ;;		_fround
  4209 ;;		_scale
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           
  4214                           ;psect for function ___bmul
  4215  138F                     ___bmul:	
  4216                           
  4217                           ;incstack = 0
  4218                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4219                           ;___bmul@multiplier stored from wreg
  4220  138F  1283               	bcf	3,5	;RP0=0, select bank0
  4221  1390  1303               	bcf	3,6	;RP1=0, select bank0
  4222  1391  00A6               	movwf	___bmul@multiplier
  4223  1392  01A5               	clrf	___bmul@product
  4224  1393                     l1679:	
  4225  1393  1C26               	btfss	___bmul@multiplier,0
  4226  1394  2B99               	goto	l1683
  4227  1395  0824               	movf	___bmul@multiplicand,w
  4228  1396  00FC               	movwf	??___bmul
  4229  1397  087C               	movf	??___bmul,w
  4230  1398  07A5               	addwf	___bmul@product,f
  4231  1399                     l1683:	
  4232  1399  1003               	clrc
  4233  139A  0DA4               	rlf	___bmul@multiplicand,f
  4234  139B  1003               	clrc
  4235  139C  0CA6               	rrf	___bmul@multiplier,f
  4236  139D  08A6               	movf	___bmul@multiplier,f
  4237  139E  1D03               	skipz
  4238  139F  2B93               	goto	l1679
  4239  13A0  0825               	movf	___bmul@product,w
  4240  13A1  0008               	return
  4241  13A2                     __end_of___bmul:	
  4242                           
  4243                           	psect	text6
  4244  14D2                     __ptext6:	
  4245 ;; *************** function ___awmod *****************
  4246 ;; Defined at:
  4247 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  divisor         2    0[COMMON] int 
  4250 ;;  dividend        2    2[COMMON] int 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  sign            1    6[COMMON] unsigned char 
  4253 ;;  counter         1    5[COMMON] unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  2    0[COMMON] int 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4263 ;;      Params:         4       0       0       0       0
  4264 ;;      Locals:         2       0       0       0       0
  4265 ;;      Temps:          1       0       0       0       0
  4266 ;;      Totals:         7       0       0       0       0
  4267 ;;Total ram usage:        7 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_fround
  4273 ;;		_scale
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           
  4278                           ;psect for function ___awmod
  4279  14D2                     ___awmod:	
  4280                           
  4281                           ;incstack = 0
  4282                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4283  14D2  01F6               	clrf	___awmod@sign
  4284  14D3  1FF3               	btfss	___awmod@dividend+1,7
  4285  14D4  2CDC               	goto	l1745
  4286  14D5  09F2               	comf	___awmod@dividend,f
  4287  14D6  09F3               	comf	___awmod@dividend+1,f
  4288  14D7  0AF2               	incf	___awmod@dividend,f
  4289  14D8  1903               	skipnz
  4290  14D9  0AF3               	incf	___awmod@dividend+1,f
  4291  14DA  01F6               	clrf	___awmod@sign
  4292  14DB  0AF6               	incf	___awmod@sign,f
  4293  14DC                     l1745:	
  4294  14DC  1FF1               	btfss	___awmod@divisor+1,7
  4295  14DD  2CE3               	goto	l1749
  4296  14DE  09F0               	comf	___awmod@divisor,f
  4297  14DF  09F1               	comf	___awmod@divisor+1,f
  4298  14E0  0AF0               	incf	___awmod@divisor,f
  4299  14E1  1903               	skipnz
  4300  14E2  0AF1               	incf	___awmod@divisor+1,f
  4301  14E3                     l1749:	
  4302  14E3  0871               	movf	___awmod@divisor+1,w
  4303  14E4  0470               	iorwf	___awmod@divisor,w
  4304  14E5  1903               	skipnz
  4305  14E6  2D10               	goto	l1767
  4306  14E7  01F5               	clrf	___awmod@counter
  4307  14E8  0AF5               	incf	___awmod@counter,f
  4308  14E9                     l1757:	
  4309  14E9  1BF1               	btfsc	___awmod@divisor+1,7
  4310  14EA  2CF7               	goto	l1759
  4311  14EB  3001               	movlw	1
  4312  14EC                     u2095:	
  4313  14EC  1003               	clrc
  4314  14ED  0DF0               	rlf	___awmod@divisor,f
  4315  14EE  0DF1               	rlf	___awmod@divisor+1,f
  4316  14EF  3EFF               	addlw	-1
  4317  14F0  1D03               	skipz
  4318  14F1  2CEC               	goto	u2095
  4319  14F2  3001               	movlw	1
  4320  14F3  00F4               	movwf	??___awmod
  4321  14F4  0874               	movf	??___awmod,w
  4322  14F5  07F5               	addwf	___awmod@counter,f
  4323  14F6  2CE9               	goto	l1757
  4324  14F7                     l1759:	
  4325  14F7  0871               	movf	___awmod@divisor+1,w
  4326  14F8  0273               	subwf	___awmod@dividend+1,w
  4327  14F9  1D03               	skipz
  4328  14FA  2CFD               	goto	u2115
  4329  14FB  0870               	movf	___awmod@divisor,w
  4330  14FC  0272               	subwf	___awmod@dividend,w
  4331  14FD                     u2115:	
  4332  14FD  1C03               	skipc
  4333  14FE  2D05               	goto	l1763
  4334  14FF  0870               	movf	___awmod@divisor,w
  4335  1500  02F2               	subwf	___awmod@dividend,f
  4336  1501  0871               	movf	___awmod@divisor+1,w
  4337  1502  1C03               	skipc
  4338  1503  03F3               	decf	___awmod@dividend+1,f
  4339  1504  02F3               	subwf	___awmod@dividend+1,f
  4340  1505                     l1763:	
  4341  1505  3001               	movlw	1
  4342  1506                     u2125:	
  4343  1506  1003               	clrc
  4344  1507  0CF1               	rrf	___awmod@divisor+1,f
  4345  1508  0CF0               	rrf	___awmod@divisor,f
  4346  1509  3EFF               	addlw	-1
  4347  150A  1D03               	skipz
  4348  150B  2D06               	goto	u2125
  4349  150C  3001               	movlw	1
  4350  150D  02F5               	subwf	___awmod@counter,f
  4351  150E  1D03               	btfss	3,2
  4352  150F  2CF7               	goto	l1759
  4353  1510                     l1767:	
  4354  1510  0876               	movf	___awmod@sign,w
  4355  1511  1903               	btfsc	3,2
  4356  1512  2D18               	goto	l1771
  4357  1513  09F2               	comf	___awmod@dividend,f
  4358  1514  09F3               	comf	___awmod@dividend+1,f
  4359  1515  0AF2               	incf	___awmod@dividend,f
  4360  1516  1903               	skipnz
  4361  1517  0AF3               	incf	___awmod@dividend+1,f
  4362  1518                     l1771:	
  4363  1518  0873               	movf	___awmod@dividend+1,w
  4364  1519  01F1               	clrf	?___awmod+1
  4365  151A  07F1               	addwf	?___awmod+1,f
  4366  151B  0872               	movf	___awmod@dividend,w
  4367  151C  01F0               	clrf	?___awmod
  4368  151D  07F0               	addwf	?___awmod,f
  4369  151E  0008               	return
  4370  151F                     __end_of___awmod:	
  4371                           
  4372                           	psect	text7
  4373  157C                     __ptext7:	
  4374 ;; *************** function ___awdiv *****************
  4375 ;; Defined at:
  4376 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;  divisor         2    7[COMMON] int 
  4379 ;;  dividend        2    9[COMMON] int 
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  quotient        2    2[BANK0 ] int 
  4382 ;;  sign            1    1[BANK0 ] unsigned char 
  4383 ;;  counter         1    0[BANK0 ] unsigned char 
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  2    7[COMMON] int 
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4393 ;;      Params:         4       0       0       0       0
  4394 ;;      Locals:         0       4       0       0       0
  4395 ;;      Temps:          1       0       0       0       0
  4396 ;;      Totals:         5       4       0       0       0
  4397 ;;Total ram usage:        9 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; This function calls:
  4400 ;;		Nothing
  4401 ;; This function is called by:
  4402 ;;		_fround
  4403 ;;		_scale
  4404 ;;		_sprintf
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           
  4409                           ;psect for function ___awdiv
  4410  157C                     ___awdiv:	
  4411                           
  4412                           ;incstack = 0
  4413                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4414  157C  1283               	bcf	3,5	;RP0=0, select bank0
  4415  157D  1303               	bcf	3,6	;RP1=0, select bank0
  4416  157E  01A1               	clrf	___awdiv@sign
  4417  157F  1FF8               	btfss	___awdiv@divisor+1,7
  4418  1580  2D88               	goto	l1701
  4419  1581  09F7               	comf	___awdiv@divisor,f
  4420  1582  09F8               	comf	___awdiv@divisor+1,f
  4421  1583  0AF7               	incf	___awdiv@divisor,f
  4422  1584  1903               	skipnz
  4423  1585  0AF8               	incf	___awdiv@divisor+1,f
  4424  1586  01A1               	clrf	___awdiv@sign
  4425  1587  0AA1               	incf	___awdiv@sign,f
  4426  1588                     l1701:	
  4427  1588  1FFA               	btfss	___awdiv@dividend+1,7
  4428  1589  2D93               	goto	l1707
  4429  158A  09F9               	comf	___awdiv@dividend,f
  4430  158B  09FA               	comf	___awdiv@dividend+1,f
  4431  158C  0AF9               	incf	___awdiv@dividend,f
  4432  158D  1903               	skipnz
  4433  158E  0AFA               	incf	___awdiv@dividend+1,f
  4434  158F  3001               	movlw	1
  4435  1590  00FB               	movwf	??___awdiv
  4436  1591  087B               	movf	??___awdiv,w
  4437  1592  06A1               	xorwf	___awdiv@sign,f
  4438  1593                     l1707:	
  4439  1593  01A2               	clrf	___awdiv@quotient
  4440  1594  01A3               	clrf	___awdiv@quotient+1
  4441  1595  0878               	movf	___awdiv@divisor+1,w
  4442  1596  0477               	iorwf	___awdiv@divisor,w
  4443  1597  1903               	skipnz
  4444  1598  2DCA               	goto	l1729
  4445  1599  01A0               	clrf	___awdiv@counter
  4446  159A  0AA0               	incf	___awdiv@counter,f
  4447  159B                     l1717:	
  4448  159B  1BF8               	btfsc	___awdiv@divisor+1,7
  4449  159C  2DA9               	goto	l1719
  4450  159D  3001               	movlw	1
  4451  159E                     u1995:	
  4452  159E  1003               	clrc
  4453  159F  0DF7               	rlf	___awdiv@divisor,f
  4454  15A0  0DF8               	rlf	___awdiv@divisor+1,f
  4455  15A1  3EFF               	addlw	-1
  4456  15A2  1D03               	skipz
  4457  15A3  2D9E               	goto	u1995
  4458  15A4  3001               	movlw	1
  4459  15A5  00FB               	movwf	??___awdiv
  4460  15A6  087B               	movf	??___awdiv,w
  4461  15A7  07A0               	addwf	___awdiv@counter,f
  4462  15A8  2D9B               	goto	l1717
  4463  15A9                     l1719:	
  4464  15A9  3001               	movlw	1
  4465  15AA                     u2015:	
  4466  15AA  1003               	clrc
  4467  15AB  0DA2               	rlf	___awdiv@quotient,f
  4468  15AC  0DA3               	rlf	___awdiv@quotient+1,f
  4469  15AD  3EFF               	addlw	-1
  4470  15AE  1D03               	skipz
  4471  15AF  2DAA               	goto	u2015
  4472  15B0  0878               	movf	___awdiv@divisor+1,w
  4473  15B1  027A               	subwf	___awdiv@dividend+1,w
  4474  15B2  1D03               	skipz
  4475  15B3  2DB6               	goto	u2025
  4476  15B4  0877               	movf	___awdiv@divisor,w
  4477  15B5  0279               	subwf	___awdiv@dividend,w
  4478  15B6                     u2025:	
  4479  15B6  1C03               	skipc
  4480  15B7  2DBF               	goto	l1725
  4481  15B8  0877               	movf	___awdiv@divisor,w
  4482  15B9  02F9               	subwf	___awdiv@dividend,f
  4483  15BA  0878               	movf	___awdiv@divisor+1,w
  4484  15BB  1C03               	skipc
  4485  15BC  03FA               	decf	___awdiv@dividend+1,f
  4486  15BD  02FA               	subwf	___awdiv@dividend+1,f
  4487  15BE  1422               	bsf	___awdiv@quotient,0
  4488  15BF                     l1725:	
  4489  15BF  3001               	movlw	1
  4490  15C0                     u2035:	
  4491  15C0  1003               	clrc
  4492  15C1  0CF8               	rrf	___awdiv@divisor+1,f
  4493  15C2  0CF7               	rrf	___awdiv@divisor,f
  4494  15C3  3EFF               	addlw	-1
  4495  15C4  1D03               	skipz
  4496  15C5  2DC0               	goto	u2035
  4497  15C6  3001               	movlw	1
  4498  15C7  02A0               	subwf	___awdiv@counter,f
  4499  15C8  1D03               	btfss	3,2
  4500  15C9  2DA9               	goto	l1719
  4501  15CA                     l1729:	
  4502  15CA  0821               	movf	___awdiv@sign,w
  4503  15CB  1903               	btfsc	3,2
  4504  15CC  2DD2               	goto	l1733
  4505  15CD  09A2               	comf	___awdiv@quotient,f
  4506  15CE  09A3               	comf	___awdiv@quotient+1,f
  4507  15CF  0AA2               	incf	___awdiv@quotient,f
  4508  15D0  1903               	skipnz
  4509  15D1  0AA3               	incf	___awdiv@quotient+1,f
  4510  15D2                     l1733:	
  4511  15D2  0823               	movf	___awdiv@quotient+1,w
  4512  15D3  01F8               	clrf	?___awdiv+1
  4513  15D4  07F8               	addwf	?___awdiv+1,f
  4514  15D5  0822               	movf	___awdiv@quotient,w
  4515  15D6  01F7               	clrf	?___awdiv
  4516  15D7  07F7               	addwf	?___awdiv,f
  4517  15D8  0008               	return
  4518  15D9                     __end_of___awdiv:	
  4519                           
  4520                           	psect	text8
  4521  0004                     __ptext8:	
  4522 ;; *************** function __tdiv_to_l_ *****************
  4523 ;; Defined at:
  4524 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdivl.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  f1              3    0[COMMON] float 
  4527 ;;  f2              3    3[COMMON] float 
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;  quot            4    0[BANK0 ] unsigned long 
  4530 ;;  exp1            1    5[BANK0 ] unsigned char 
  4531 ;;  cntr            1    4[BANK0 ] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  4    0[COMMON] unsigned long 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4541 ;;      Params:         6       0       0       0       0
  4542 ;;      Locals:         0       6       0       0       0
  4543 ;;      Temps:          4       0       0       0       0
  4544 ;;      Totals:        10       6       0       0       0
  4545 ;;Total ram usage:       16 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_sprintf
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           
  4555                           ;psect for function __tdiv_to_l_
  4556  0004                     __tdiv_to_l_:	
  4557                           
  4558                           ;incstack = 0
  4559                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4560  0004  0870               	movf	__tdiv_to_l_@f1,w
  4561  0005  00F6               	movwf	??__tdiv_to_l_
  4562  0006  0871               	movf	__tdiv_to_l_@f1+1,w
  4563  0007  00F7               	movwf	??__tdiv_to_l_+1
  4564  0008  0872               	movf	__tdiv_to_l_@f1+2,w
  4565  0009  00F8               	movwf	??__tdiv_to_l_+2
  4566  000A  1003               	clrc
  4567  000B  0D77               	rlf	??__tdiv_to_l_+1,w
  4568  000C  0D78               	rlf	??__tdiv_to_l_+2,w
  4569  000D  00F9               	movwf	??__tdiv_to_l_+3
  4570  000E  0879               	movf	??__tdiv_to_l_+3,w
  4571  000F  1283               	bcf	3,5	;RP0=0, select bank0
  4572  0010  1303               	bcf	3,6	;RP1=0, select bank0
  4573  0011  00A5               	movwf	__tdiv_to_l_@exp1
  4574  0012  08A5               	movf	__tdiv_to_l_@exp1,f
  4575  0013  1D03               	skipz
  4576  0014  281E               	goto	l1991
  4577  0015  3000               	movlw	0
  4578  0016  00F3               	movwf	?__tdiv_to_l_+3
  4579  0017  3000               	movlw	0
  4580  0018  00F2               	movwf	?__tdiv_to_l_+2
  4581  0019  3000               	movlw	0
  4582  001A  00F1               	movwf	?__tdiv_to_l_+1
  4583  001B  3000               	movlw	0
  4584  001C  00F0               	movwf	?__tdiv_to_l_
  4585  001D  0008               	return
  4586  001E                     l1991:	
  4587  001E  0873               	movf	__tdiv_to_l_@f2,w
  4588  001F  00F6               	movwf	??__tdiv_to_l_
  4589  0020  0874               	movf	__tdiv_to_l_@f2+1,w
  4590  0021  00F7               	movwf	??__tdiv_to_l_+1
  4591  0022  0875               	movf	__tdiv_to_l_@f2+2,w
  4592  0023  00F8               	movwf	??__tdiv_to_l_+2
  4593  0024  1003               	clrc
  4594  0025  0D77               	rlf	??__tdiv_to_l_+1,w
  4595  0026  0D78               	rlf	??__tdiv_to_l_+2,w
  4596  0027  00F9               	movwf	??__tdiv_to_l_+3
  4597  0028  0879               	movf	??__tdiv_to_l_+3,w
  4598  0029  00A4               	movwf	__tdiv_to_l_@cntr
  4599  002A  08A4               	movf	__tdiv_to_l_@cntr,f
  4600  002B  1D03               	skipz
  4601  002C  2836               	goto	l485
  4602  002D  3000               	movlw	0
  4603  002E  00F3               	movwf	?__tdiv_to_l_+3
  4604  002F  3000               	movlw	0
  4605  0030  00F2               	movwf	?__tdiv_to_l_+2
  4606  0031  3000               	movlw	0
  4607  0032  00F1               	movwf	?__tdiv_to_l_+1
  4608  0033  3000               	movlw	0
  4609  0034  00F0               	movwf	?__tdiv_to_l_
  4610  0035  0008               	return
  4611  0036                     l485:	
  4612  0036  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4613  0037  30FF               	movlw	255
  4614  0038  05F0               	andwf	__tdiv_to_l_@f1,f
  4615  0039  30FF               	movlw	255
  4616  003A  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4617  003B  3000               	movlw	0
  4618  003C  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4619  003D  17F4               	bsf	__tdiv_to_l_@f2+1,7
  4620  003E  30FF               	movlw	255
  4621  003F  05F3               	andwf	__tdiv_to_l_@f2,f
  4622  0040  30FF               	movlw	255
  4623  0041  05F4               	andwf	__tdiv_to_l_@f2+1,f
  4624  0042  3000               	movlw	0
  4625  0043  05F5               	andwf	__tdiv_to_l_@f2+2,f
  4626  0044  3000               	movlw	0
  4627  0045  00A3               	movwf	__tdiv_to_l_@quot+3
  4628  0046  3000               	movlw	0
  4629  0047  00A2               	movwf	__tdiv_to_l_@quot+2
  4630  0048  3000               	movlw	0
  4631  0049  00A1               	movwf	__tdiv_to_l_@quot+1
  4632  004A  3000               	movlw	0
  4633  004B  00A0               	movwf	__tdiv_to_l_@quot
  4634  004C  307F               	movlw	127
  4635  004D  02A5               	subwf	__tdiv_to_l_@exp1,f
  4636  004E  3098               	movlw	152
  4637  004F  0724               	addwf	__tdiv_to_l_@cntr,w
  4638  0050  00F6               	movwf	??__tdiv_to_l_
  4639  0051  0876               	movf	??__tdiv_to_l_,w
  4640  0052  02A5               	subwf	__tdiv_to_l_@exp1,f
  4641  0053  3018               	movlw	24
  4642  0054  00F6               	movwf	??__tdiv_to_l_
  4643  0055  0876               	movf	??__tdiv_to_l_,w
  4644  0056  00A4               	movwf	__tdiv_to_l_@cntr
  4645  0057                     l2005:	
  4646  0057  3001               	movlw	1
  4647  0058  00F6               	movwf	??__tdiv_to_l_
  4648  0059                     u2645:	
  4649  0059  1003               	clrc
  4650  005A  0DA0               	rlf	__tdiv_to_l_@quot,f
  4651  005B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4652  005C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4653  005D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4654  005E  0BF6               	decfsz	??__tdiv_to_l_,f
  4655  005F  2859               	goto	u2645
  4656  0060  0875               	movf	__tdiv_to_l_@f2+2,w
  4657  0061  0272               	subwf	__tdiv_to_l_@f1+2,w
  4658  0062  1D03               	skipz
  4659  0063  286A               	goto	u2655
  4660  0064  0874               	movf	__tdiv_to_l_@f2+1,w
  4661  0065  0271               	subwf	__tdiv_to_l_@f1+1,w
  4662  0066  1D03               	skipz
  4663  0067  286A               	goto	u2655
  4664  0068  0873               	movf	__tdiv_to_l_@f2,w
  4665  0069  0270               	subwf	__tdiv_to_l_@f1,w
  4666  006A                     u2655:	
  4667  006A  1C03               	skipc
  4668  006B  2877               	goto	l2013
  4669  006C  0873               	movf	__tdiv_to_l_@f2,w
  4670  006D  02F0               	subwf	__tdiv_to_l_@f1,f
  4671  006E  0874               	movf	__tdiv_to_l_@f2+1,w
  4672  006F  1C03               	skipc
  4673  0070  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  4674  0071  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4675  0072  0875               	movf	__tdiv_to_l_@f2+2,w
  4676  0073  1C03               	skipc
  4677  0074  0A75               	incf	__tdiv_to_l_@f2+2,w
  4678  0075  02F2               	subwf	__tdiv_to_l_@f1+2,f
  4679  0076  1420               	bsf	__tdiv_to_l_@quot,0
  4680  0077                     l2013:	
  4681  0077  3001               	movlw	1
  4682  0078                     u2665:	
  4683  0078  1003               	clrc
  4684  0079  0DF0               	rlf	__tdiv_to_l_@f1,f
  4685  007A  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  4686  007B  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  4687  007C  3EFF               	addlw	-1
  4688  007D  1D03               	skipz
  4689  007E  2878               	goto	u2665
  4690  007F  3001               	movlw	1
  4691  0080  02A4               	subwf	__tdiv_to_l_@cntr,f
  4692  0081  1D03               	btfss	3,2
  4693  0082  2857               	goto	l2005
  4694  0083  1FA5               	btfss	__tdiv_to_l_@exp1,7
  4695  0084  28A3               	goto	l2025
  4696  0085  0825               	movf	__tdiv_to_l_@exp1,w
  4697  0086  3A80               	xorlw	128
  4698  0087  3E97               	addlw	151
  4699  0088  1803               	skipnc
  4700  0089  2893               	goto	l2023
  4701  008A  3000               	movlw	0
  4702  008B  00F3               	movwf	?__tdiv_to_l_+3
  4703  008C  3000               	movlw	0
  4704  008D  00F2               	movwf	?__tdiv_to_l_+2
  4705  008E  3000               	movlw	0
  4706  008F  00F1               	movwf	?__tdiv_to_l_+1
  4707  0090  3000               	movlw	0
  4708  0091  00F0               	movwf	?__tdiv_to_l_
  4709  0092  0008               	return
  4710  0093                     l2023:	
  4711  0093  3001               	movlw	1
  4712  0094                     u2705:	
  4713  0094  1003               	clrc
  4714  0095  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  4715  0096  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  4716  0097  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  4717  0098  0CA0               	rrf	__tdiv_to_l_@quot,f
  4718  0099  3EFF               	addlw	-1
  4719  009A  1D03               	skipz
  4720  009B  2894               	goto	u2705
  4721  009C  3001               	movlw	1
  4722  009D  00F6               	movwf	??__tdiv_to_l_
  4723  009E  0876               	movf	??__tdiv_to_l_,w
  4724  009F  07A5               	addwf	__tdiv_to_l_@exp1,f
  4725  00A0  1903               	btfsc	3,2
  4726  00A1  28BE               	goto	l2035
  4727  00A2  2893               	goto	l2023
  4728  00A3                     l2025:	
  4729  00A3  3018               	movlw	24
  4730  00A4  0225               	subwf	__tdiv_to_l_@exp1,w
  4731  00A5  1C03               	skipc
  4732  00A6  28BB               	goto	l2033
  4733  00A7  3000               	movlw	0
  4734  00A8  00F3               	movwf	?__tdiv_to_l_+3
  4735  00A9  3000               	movlw	0
  4736  00AA  00F2               	movwf	?__tdiv_to_l_+2
  4737  00AB  3000               	movlw	0
  4738  00AC  00F1               	movwf	?__tdiv_to_l_+1
  4739  00AD  3000               	movlw	0
  4740  00AE  00F0               	movwf	?__tdiv_to_l_
  4741  00AF  0008               	return
  4742  00B0                     l2031:	
  4743  00B0  3001               	movlw	1
  4744  00B1  00F6               	movwf	??__tdiv_to_l_
  4745  00B2                     u2735:	
  4746  00B2  1003               	clrc
  4747  00B3  0DA0               	rlf	__tdiv_to_l_@quot,f
  4748  00B4  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4749  00B5  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4750  00B6  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4751  00B7  0BF6               	decfsz	??__tdiv_to_l_,f
  4752  00B8  28B2               	goto	u2735
  4753  00B9  3001               	movlw	1
  4754  00BA  02A5               	subwf	__tdiv_to_l_@exp1,f
  4755  00BB                     l2033:	
  4756  00BB  08A5               	movf	__tdiv_to_l_@exp1,f
  4757  00BC  1D03               	skipz
  4758  00BD  28B0               	goto	l2031
  4759  00BE                     l2035:	
  4760  00BE  0823               	movf	__tdiv_to_l_@quot+3,w
  4761  00BF  00F3               	movwf	?__tdiv_to_l_+3
  4762  00C0  0822               	movf	__tdiv_to_l_@quot+2,w
  4763  00C1  00F2               	movwf	?__tdiv_to_l_+2
  4764  00C2  0821               	movf	__tdiv_to_l_@quot+1,w
  4765  00C3  00F1               	movwf	?__tdiv_to_l_+1
  4766  00C4  0820               	movf	__tdiv_to_l_@quot,w
  4767  00C5  00F0               	movwf	?__tdiv_to_l_
  4768  00C6  0008               	return
  4769  00C7                     __end_of__tdiv_to_l_:	
  4770                           
  4771                           	psect	text9
  4772  09C3                     __ptext9:	
  4773 ;; *************** function __div_to_l_ *****************
  4774 ;; Defined at:
  4775 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fldivl.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;  f1              3    0[COMMON] unsigned long 
  4778 ;;  f2              3    3[COMMON] unsigned long 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  quot            4    0[BANK0 ] unsigned long 
  4781 ;;  exp1            1    5[BANK0 ] unsigned char 
  4782 ;;  cntr            1    4[BANK0 ] unsigned char 
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  4    0[COMMON] unsigned long 
  4785 ;; Registers used:
  4786 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4792 ;;      Params:         6       0       0       0       0
  4793 ;;      Locals:         0       6       0       0       0
  4794 ;;      Temps:          8       0       0       0       0
  4795 ;;      Totals:        14       6       0       0       0
  4796 ;;Total ram usage:       20 bytes
  4797 ;; Hardware stack levels used:    1
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_sprintf
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           
  4806                           ;psect for function __div_to_l_
  4807  09C3                     __div_to_l_:	
  4808                           
  4809                           ;incstack = 0
  4810                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4811  09C3  3070               	movlw	low __div_to_l_@f1
  4812  09C4  0084               	movwf	4
  4813  09C5  0800               	movf	0,w
  4814  09C6  00F6               	movwf	??__div_to_l_
  4815  09C7  0A84               	incf	4,f
  4816  09C8  0800               	movf	0,w
  4817  09C9  00F7               	movwf	??__div_to_l_+1
  4818  09CA  0A84               	incf	4,f
  4819  09CB  0800               	movf	0,w
  4820  09CC  00F8               	movwf	??__div_to_l_+2
  4821  09CD  0A84               	incf	4,f
  4822  09CE  0800               	movf	0,w
  4823  09CF  00F9               	movwf	??__div_to_l_+3
  4824  09D0  1003               	clrc
  4825  09D1  0D78               	rlf	??__div_to_l_+2,w
  4826  09D2  0D79               	rlf	??__div_to_l_+3,w
  4827  09D3  00FA               	movwf	??__div_to_l_+4
  4828  09D4  087A               	movf	??__div_to_l_+4,w
  4829  09D5  1283               	bcf	3,5	;RP0=0, select bank0
  4830  09D6  1303               	bcf	3,6	;RP1=0, select bank0
  4831  09D7  00A5               	movwf	__div_to_l_@exp1
  4832  09D8  08A5               	movf	__div_to_l_@exp1,f
  4833  09D9  1D03               	skipz
  4834  09DA  29E4               	goto	l2045
  4835  09DB  3000               	movlw	0
  4836  09DC  00F3               	movwf	?__div_to_l_+3
  4837  09DD  3000               	movlw	0
  4838  09DE  00F2               	movwf	?__div_to_l_+2
  4839  09DF  3000               	movlw	0
  4840  09E0  00F1               	movwf	?__div_to_l_+1
  4841  09E1  3000               	movlw	0
  4842  09E2  00F0               	movwf	?__div_to_l_
  4843  09E3  0008               	return
  4844  09E4                     l2045:	
  4845  09E4  3073               	movlw	low __div_to_l_@f2
  4846  09E5  0084               	movwf	4
  4847  09E6  0800               	movf	0,w
  4848  09E7  00F6               	movwf	??__div_to_l_
  4849  09E8  0A84               	incf	4,f
  4850  09E9  0800               	movf	0,w
  4851  09EA  00F7               	movwf	??__div_to_l_+1
  4852  09EB  0A84               	incf	4,f
  4853  09EC  0800               	movf	0,w
  4854  09ED  00F8               	movwf	??__div_to_l_+2
  4855  09EE  0A84               	incf	4,f
  4856  09EF  0800               	movf	0,w
  4857  09F0  00F9               	movwf	??__div_to_l_+3
  4858  09F1  1003               	clrc
  4859  09F2  0D78               	rlf	??__div_to_l_+2,w
  4860  09F3  0D79               	rlf	??__div_to_l_+3,w
  4861  09F4  00FA               	movwf	??__div_to_l_+4
  4862  09F5  087A               	movf	??__div_to_l_+4,w
  4863  09F6  00A4               	movwf	__div_to_l_@cntr
  4864  09F7  08A4               	movf	__div_to_l_@cntr,f
  4865  09F8  1D03               	skipz
  4866  09F9  2A03               	goto	l2051
  4867  09FA  3000               	movlw	0
  4868  09FB  00F3               	movwf	?__div_to_l_+3
  4869  09FC  3000               	movlw	0
  4870  09FD  00F2               	movwf	?__div_to_l_+2
  4871  09FE  3000               	movlw	0
  4872  09FF  00F1               	movwf	?__div_to_l_+1
  4873  0A00  3000               	movlw	0
  4874  0A01  00F0               	movwf	?__div_to_l_
  4875  0A02  0008               	return
  4876  0A03                     l2051:	
  4877  0A03  3070               	movlw	low __div_to_l_@f1
  4878  0A04  0084               	movwf	4
  4879  0A05  3000               	movlw	0
  4880  0A06  0480               	iorwf	0,f
  4881  0A07  0A84               	incf	4,f
  4882  0A08  3000               	movlw	0
  4883  0A09  0480               	iorwf	0,f
  4884  0A0A  0A84               	incf	4,f
  4885  0A0B  3080               	movlw	128
  4886  0A0C  0480               	iorwf	0,f
  4887  0A0D  0A84               	incf	4,f
  4888  0A0E  3000               	movlw	0
  4889  0A0F  0480               	iorwf	0,f
  4890  0A10  3070               	movlw	low __div_to_l_@f1
  4891  0A11  0084               	movwf	4
  4892  0A12  30FF               	movlw	255
  4893  0A13  0580               	andwf	0,f
  4894  0A14  0A84               	incf	4,f
  4895  0A15  30FF               	movlw	255
  4896  0A16  0580               	andwf	0,f
  4897  0A17  0A84               	incf	4,f
  4898  0A18  30FF               	movlw	255
  4899  0A19  0580               	andwf	0,f
  4900  0A1A  0A84               	incf	4,f
  4901  0A1B  3000               	movlw	0
  4902  0A1C  0580               	andwf	0,f
  4903  0A1D  3073               	movlw	low __div_to_l_@f2
  4904  0A1E  0084               	movwf	4
  4905  0A1F  3000               	movlw	0
  4906  0A20  0480               	iorwf	0,f
  4907  0A21  0A84               	incf	4,f
  4908  0A22  3000               	movlw	0
  4909  0A23  0480               	iorwf	0,f
  4910  0A24  0A84               	incf	4,f
  4911  0A25  3080               	movlw	128
  4912  0A26  0480               	iorwf	0,f
  4913  0A27  0A84               	incf	4,f
  4914  0A28  3000               	movlw	0
  4915  0A29  0480               	iorwf	0,f
  4916  0A2A  3073               	movlw	low __div_to_l_@f2
  4917  0A2B  0084               	movwf	4
  4918  0A2C  30FF               	movlw	255
  4919  0A2D  0580               	andwf	0,f
  4920  0A2E  0A84               	incf	4,f
  4921  0A2F  30FF               	movlw	255
  4922  0A30  0580               	andwf	0,f
  4923  0A31  0A84               	incf	4,f
  4924  0A32  30FF               	movlw	255
  4925  0A33  0580               	andwf	0,f
  4926  0A34  0A84               	incf	4,f
  4927  0A35  3000               	movlw	0
  4928  0A36  0580               	andwf	0,f
  4929  0A37  3000               	movlw	0
  4930  0A38  00A3               	movwf	__div_to_l_@quot+3
  4931  0A39  3000               	movlw	0
  4932  0A3A  00A2               	movwf	__div_to_l_@quot+2
  4933  0A3B  3000               	movlw	0
  4934  0A3C  00A1               	movwf	__div_to_l_@quot+1
  4935  0A3D  3000               	movlw	0
  4936  0A3E  00A0               	movwf	__div_to_l_@quot
  4937  0A3F  307F               	movlw	127
  4938  0A40  02A5               	subwf	__div_to_l_@exp1,f
  4939  0A41  30A0               	movlw	160
  4940  0A42  0724               	addwf	__div_to_l_@cntr,w
  4941  0A43  00F6               	movwf	??__div_to_l_
  4942  0A44  0876               	movf	??__div_to_l_,w
  4943  0A45  02A5               	subwf	__div_to_l_@exp1,f
  4944  0A46  3020               	movlw	32
  4945  0A47  00F6               	movwf	??__div_to_l_
  4946  0A48  0876               	movf	??__div_to_l_,w
  4947  0A49  00A4               	movwf	__div_to_l_@cntr
  4948  0A4A                     l2061:	
  4949  0A4A  3001               	movlw	1
  4950  0A4B  00F6               	movwf	??__div_to_l_
  4951  0A4C                     u2775:	
  4952  0A4C  1003               	clrc
  4953  0A4D  0DA0               	rlf	__div_to_l_@quot,f
  4954  0A4E  0DA1               	rlf	__div_to_l_@quot+1,f
  4955  0A4F  0DA2               	rlf	__div_to_l_@quot+2,f
  4956  0A50  0DA3               	rlf	__div_to_l_@quot+3,f
  4957  0A51  0BF6               	decfsz	??__div_to_l_,f
  4958  0A52  2A4C               	goto	u2775
  4959  0A53  3073               	movlw	low __div_to_l_@f2
  4960  0A54  0084               	movwf	4
  4961  0A55  0800               	movf	0,w
  4962  0A56  00F6               	movwf	??__div_to_l_
  4963  0A57  0A84               	incf	4,f
  4964  0A58  0800               	movf	0,w
  4965  0A59  00F7               	movwf	??__div_to_l_+1
  4966  0A5A  0A84               	incf	4,f
  4967  0A5B  0800               	movf	0,w
  4968  0A5C  00F8               	movwf	??__div_to_l_+2
  4969  0A5D  0A84               	incf	4,f
  4970  0A5E  0800               	movf	0,w
  4971  0A5F  00F9               	movwf	??__div_to_l_+3
  4972  0A60  3070               	movlw	low __div_to_l_@f1
  4973  0A61  0084               	movwf	4
  4974  0A62  0800               	movf	0,w
  4975  0A63  00FA               	movwf	??__div_to_l_+4
  4976  0A64  0A84               	incf	4,f
  4977  0A65  0800               	movf	0,w
  4978  0A66  00FB               	movwf	??__div_to_l_+5
  4979  0A67  0A84               	incf	4,f
  4980  0A68  0800               	movf	0,w
  4981  0A69  00FC               	movwf	??__div_to_l_+6
  4982  0A6A  0A84               	incf	4,f
  4983  0A6B  0800               	movf	0,w
  4984  0A6C  00FD               	movwf	??__div_to_l_+7
  4985  0A6D  0879               	movf	??__div_to_l_+3,w
  4986  0A6E  027D               	subwf	??__div_to_l_+7,w
  4987  0A6F  1D03               	skipz
  4988  0A70  2A7B               	goto	u2785
  4989  0A71  0878               	movf	??__div_to_l_+2,w
  4990  0A72  027C               	subwf	??__div_to_l_+6,w
  4991  0A73  1D03               	skipz
  4992  0A74  2A7B               	goto	u2785
  4993  0A75  0877               	movf	??__div_to_l_+1,w
  4994  0A76  027B               	subwf	??__div_to_l_+5,w
  4995  0A77  1D03               	skipz
  4996  0A78  2A7B               	goto	u2785
  4997  0A79  0876               	movf	??__div_to_l_,w
  4998  0A7A  027A               	subwf	??__div_to_l_+4,w
  4999  0A7B                     u2785:	
  5000  0A7B  1C03               	skipc
  5001  0A7C  2AA0               	goto	l410
  5002  0A7D  3073               	movlw	low __div_to_l_@f2
  5003  0A7E  0084               	movwf	4
  5004  0A7F  0800               	movf	0,w
  5005  0A80  00F6               	movwf	??__div_to_l_
  5006  0A81  0A84               	incf	4,f
  5007  0A82  0800               	movf	0,w
  5008  0A83  00F7               	movwf	??__div_to_l_+1
  5009  0A84  0A84               	incf	4,f
  5010  0A85  0800               	movf	0,w
  5011  0A86  00F8               	movwf	??__div_to_l_+2
  5012  0A87  0A84               	incf	4,f
  5013  0A88  0800               	movf	0,w
  5014  0A89  00F9               	movwf	??__div_to_l_+3
  5015  0A8A  3070               	movlw	low __div_to_l_@f1
  5016  0A8B  0084               	movwf	4
  5017  0A8C  0876               	movf	??__div_to_l_,w
  5018  0A8D  0280               	subwf	0,f
  5019  0A8E  0A84               	incf	4,f
  5020  0A8F  0877               	movf	??__div_to_l_+1,w
  5021  0A90  1C03               	skipc
  5022  0A91  0F77               	incfsz	??__div_to_l_+1,w
  5023  0A92  0280               	subwf	0,f
  5024  0A93  0A84               	incf	4,f
  5025  0A94  0878               	movf	??__div_to_l_+2,w
  5026  0A95  1C03               	skipc
  5027  0A96  0F78               	incfsz	??__div_to_l_+2,w
  5028  0A97  0280               	subwf	0,f
  5029  0A98  0A84               	incf	4,f
  5030  0A99  0879               	movf	??__div_to_l_+3,w
  5031  0A9A  1C03               	skipc
  5032  0A9B  0A79               	incf	??__div_to_l_+3,w
  5033  0A9C  0280               	subwf	0,f
  5034  0A9D  3003               	movlw	3
  5035  0A9E  0284               	subwf	4,f
  5036  0A9F  1420               	bsf	__div_to_l_@quot,0
  5037  0AA0                     l410:	
  5038  0AA0  3070               	movlw	low __div_to_l_@f1
  5039  0AA1  0084               	movwf	4
  5040  0AA2  1003               	clrc
  5041  0AA3  0D80               	rlf	0,f
  5042  0AA4  0A84               	incf	4,f
  5043  0AA5  0D80               	rlf	0,f
  5044  0AA6  0A84               	incf	4,f
  5045  0AA7  0D80               	rlf	0,f
  5046  0AA8  0A84               	incf	4,f
  5047  0AA9  0D80               	rlf	0,f
  5048  0AAA  0384               	decf	4,f
  5049  0AAB  0384               	decf	4,f
  5050  0AAC  0384               	decf	4,f
  5051  0AAD  3001               	movlw	1
  5052  0AAE  02A4               	subwf	__div_to_l_@cntr,f
  5053  0AAF  1D03               	btfss	3,2
  5054  0AB0  2A4A               	goto	l2061
  5055  0AB1  1FA5               	btfss	__div_to_l_@exp1,7
  5056  0AB2  2AD1               	goto	l2079
  5057  0AB3  0825               	movf	__div_to_l_@exp1,w
  5058  0AB4  3A80               	xorlw	128
  5059  0AB5  3E9F               	addlw	159
  5060  0AB6  1803               	skipnc
  5061  0AB7  2AC1               	goto	l2077
  5062  0AB8  3000               	movlw	0
  5063  0AB9  00F3               	movwf	?__div_to_l_+3
  5064  0ABA  3000               	movlw	0
  5065  0ABB  00F2               	movwf	?__div_to_l_+2
  5066  0ABC  3000               	movlw	0
  5067  0ABD  00F1               	movwf	?__div_to_l_+1
  5068  0ABE  3000               	movlw	0
  5069  0ABF  00F0               	movwf	?__div_to_l_
  5070  0AC0  0008               	return
  5071  0AC1                     l2077:	
  5072  0AC1  3001               	movlw	1
  5073  0AC2                     u2825:	
  5074  0AC2  1003               	clrc
  5075  0AC3  0CA3               	rrf	__div_to_l_@quot+3,f
  5076  0AC4  0CA2               	rrf	__div_to_l_@quot+2,f
  5077  0AC5  0CA1               	rrf	__div_to_l_@quot+1,f
  5078  0AC6  0CA0               	rrf	__div_to_l_@quot,f
  5079  0AC7  3EFF               	addlw	-1
  5080  0AC8  1D03               	skipz
  5081  0AC9  2AC2               	goto	u2825
  5082  0ACA  3001               	movlw	1
  5083  0ACB  00F6               	movwf	??__div_to_l_
  5084  0ACC  0876               	movf	??__div_to_l_,w
  5085  0ACD  07A5               	addwf	__div_to_l_@exp1,f
  5086  0ACE  1903               	btfsc	3,2
  5087  0ACF  2AEC               	goto	l2089
  5088  0AD0  2AC1               	goto	l2077
  5089  0AD1                     l2079:	
  5090  0AD1  3020               	movlw	32
  5091  0AD2  0225               	subwf	__div_to_l_@exp1,w
  5092  0AD3  1C03               	skipc
  5093  0AD4  2AE9               	goto	l2087
  5094  0AD5  3000               	movlw	0
  5095  0AD6  00F3               	movwf	?__div_to_l_+3
  5096  0AD7  3000               	movlw	0
  5097  0AD8  00F2               	movwf	?__div_to_l_+2
  5098  0AD9  3000               	movlw	0
  5099  0ADA  00F1               	movwf	?__div_to_l_+1
  5100  0ADB  3000               	movlw	0
  5101  0ADC  00F0               	movwf	?__div_to_l_
  5102  0ADD  0008               	return
  5103  0ADE                     l2085:	
  5104  0ADE  3001               	movlw	1
  5105  0ADF  00F6               	movwf	??__div_to_l_
  5106  0AE0                     u2855:	
  5107  0AE0  1003               	clrc
  5108  0AE1  0DA0               	rlf	__div_to_l_@quot,f
  5109  0AE2  0DA1               	rlf	__div_to_l_@quot+1,f
  5110  0AE3  0DA2               	rlf	__div_to_l_@quot+2,f
  5111  0AE4  0DA3               	rlf	__div_to_l_@quot+3,f
  5112  0AE5  0BF6               	decfsz	??__div_to_l_,f
  5113  0AE6  2AE0               	goto	u2855
  5114  0AE7  3001               	movlw	1
  5115  0AE8  02A5               	subwf	__div_to_l_@exp1,f
  5116  0AE9                     l2087:	
  5117  0AE9  08A5               	movf	__div_to_l_@exp1,f
  5118  0AEA  1D03               	skipz
  5119  0AEB  2ADE               	goto	l2085
  5120  0AEC                     l2089:	
  5121  0AEC  0823               	movf	__div_to_l_@quot+3,w
  5122  0AED  00F3               	movwf	?__div_to_l_+3
  5123  0AEE  0822               	movf	__div_to_l_@quot+2,w
  5124  0AEF  00F2               	movwf	?__div_to_l_+2
  5125  0AF0  0821               	movf	__div_to_l_@quot+1,w
  5126  0AF1  00F1               	movwf	?__div_to_l_+1
  5127  0AF2  0820               	movf	__div_to_l_@quot,w
  5128  0AF3  00F0               	movwf	?__div_to_l_
  5129  0AF4  0008               	return
  5130  0AF5                     __end_of__div_to_l_:	
  5131                           
  5132                           	psect	text10
  5133  13EE                     __ptext10:	
  5134 ;; *************** function ___wmul *****************
  5135 ;; Defined at:
  5136 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;  multiplier      2    0[COMMON] unsigned int 
  5139 ;;  multiplicand    2    2[COMMON] unsigned int 
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  product         2    4[COMMON] unsigned int 
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  2    0[COMMON] unsigned int 
  5144 ;; Registers used:
  5145 ;;		wreg, status,2, status,0
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5151 ;;      Params:         4       0       0       0       0
  5152 ;;      Locals:         2       0       0       0       0
  5153 ;;      Temps:          0       0       0       0       0
  5154 ;;      Totals:         6       0       0       0       0
  5155 ;;Total ram usage:        6 bytes
  5156 ;; Hardware stack levels used:    1
  5157 ;; This function calls:
  5158 ;;		Nothing
  5159 ;; This function is called by:
  5160 ;;		_sprintf
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           
  5165                           ;psect for function ___wmul
  5166  13EE                     ___wmul:	
  5167                           
  5168                           ;incstack = 0
  5169                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5170  13EE  01F4               	clrf	___wmul@product
  5171  13EF  01F5               	clrf	___wmul@product+1
  5172  13F0                     l2095:	
  5173  13F0  1C70               	btfss	___wmul@multiplier,0
  5174  13F1  2BF8               	goto	l252
  5175  13F2  0872               	movf	___wmul@multiplicand,w
  5176  13F3  07F4               	addwf	___wmul@product,f
  5177  13F4  1803               	skipnc
  5178  13F5  0AF5               	incf	___wmul@product+1,f
  5179  13F6  0873               	movf	___wmul@multiplicand+1,w
  5180  13F7  07F5               	addwf	___wmul@product+1,f
  5181  13F8                     l252:	
  5182  13F8  3001               	movlw	1
  5183  13F9                     u2885:	
  5184  13F9  1003               	clrc
  5185  13FA  0DF2               	rlf	___wmul@multiplicand,f
  5186  13FB  0DF3               	rlf	___wmul@multiplicand+1,f
  5187  13FC  3EFF               	addlw	-1
  5188  13FD  1D03               	skipz
  5189  13FE  2BF9               	goto	u2885
  5190  13FF  3001               	movlw	1
  5191  1400                     u2895:	
  5192  1400  1003               	clrc
  5193  1401  0CF1               	rrf	___wmul@multiplier+1,f
  5194  1402  0CF0               	rrf	___wmul@multiplier,f
  5195  1403  3EFF               	addlw	-1
  5196  1404  1D03               	skipz
  5197  1405  2C00               	goto	u2895
  5198  1406  0871               	movf	___wmul@multiplier+1,w
  5199  1407  0470               	iorwf	___wmul@multiplier,w
  5200  1408  1D03               	skipz
  5201  1409  2BF0               	goto	l2095
  5202  140A  0875               	movf	___wmul@product+1,w
  5203  140B  01F1               	clrf	?___wmul+1
  5204  140C  07F1               	addwf	?___wmul+1,f
  5205  140D  0874               	movf	___wmul@product,w
  5206  140E  01F0               	clrf	?___wmul
  5207  140F  07F0               	addwf	?___wmul,f
  5208  1410  0008               	return
  5209  1411                     __end_of___wmul:	
  5210                           
  5211                           	psect	text11
  5212  145B                     __ptext11:	
  5213 ;; *************** function ___lltoft *****************
  5214 ;; Defined at:
  5215 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  c               4    8[COMMON] unsigned long 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  exp             1   13[COMMON] unsigned char 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  3    8[COMMON] float 
  5222 ;; Registers used:
  5223 ;;		wreg, status,2, status,0, pclath, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5229 ;;      Params:         4       0       0       0       0
  5230 ;;      Locals:         1       0       0       0       0
  5231 ;;      Temps:          1       0       0       0       0
  5232 ;;      Totals:         6       0       0       0       0
  5233 ;;Total ram usage:        6 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    1
  5236 ;; This function calls:
  5237 ;;		___ftpack
  5238 ;; This function is called by:
  5239 ;;		_sprintf
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           
  5244                           ;psect for function ___lltoft
  5245  145B                     ___lltoft:	
  5246                           
  5247                           ;incstack = 0
  5248                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5249  145B  308E               	movlw	142
  5250  145C  00FC               	movwf	??___lltoft
  5251  145D  087C               	movf	??___lltoft,w
  5252  145E  00FD               	movwf	___lltoft@exp
  5253  145F                     l2231:	
  5254  145F  30FF               	movlw	255
  5255  1460  057B               	andwf	___lltoft@c+3,w
  5256  1461  1903               	btfsc	3,2
  5257  1462  2C71               	goto	l2233
  5258  1463  3001               	movlw	1
  5259  1464                     u3205:	
  5260  1464  1003               	clrc
  5261  1465  0CFB               	rrf	___lltoft@c+3,f
  5262  1466  0CFA               	rrf	___lltoft@c+2,f
  5263  1467  0CF9               	rrf	___lltoft@c+1,f
  5264  1468  0CF8               	rrf	___lltoft@c,f
  5265  1469  3EFF               	addlw	-1
  5266  146A  1D03               	skipz
  5267  146B  2C64               	goto	u3205
  5268  146C  3001               	movlw	1
  5269  146D  00FC               	movwf	??___lltoft
  5270  146E  087C               	movf	??___lltoft,w
  5271  146F  07FD               	addwf	___lltoft@exp,f
  5272  1470  2C5F               	goto	l2231
  5273  1471                     l2233:	
  5274  1471  0878               	movf	___lltoft@c,w
  5275  1472  00F0               	movwf	___ftpack@arg
  5276  1473  0879               	movf	___lltoft@c+1,w
  5277  1474  00F1               	movwf	___ftpack@arg+1
  5278  1475  087A               	movf	___lltoft@c+2,w
  5279  1476  00F2               	movwf	___ftpack@arg+2
  5280  1477  087D               	movf	___lltoft@exp,w
  5281  1478  00FC               	movwf	??___lltoft
  5282  1479  087C               	movf	??___lltoft,w
  5283  147A  00F3               	movwf	___ftpack@exp
  5284  147B  01F4               	clrf	___ftpack@sign
  5285  147C  160A  118A  2637   	fcall	___ftpack
  5286  147F  0870               	movf	?___ftpack,w
  5287  1480  00F8               	movwf	?___lltoft
  5288  1481  0871               	movf	?___ftpack+1,w
  5289  1482  00F9               	movwf	?___lltoft+1
  5290  1483  0872               	movf	?___ftpack+2,w
  5291  1484  00FA               	movwf	?___lltoft+2
  5292  1485  0008               	return
  5293  1486                     __end_of___lltoft:	
  5294                           
  5295                           	psect	text12
  5296  1486                     __ptext12:	
  5297 ;; *************** function ___llmod *****************
  5298 ;; Defined at:
  5299 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;  divisor         4    0[COMMON] unsigned long 
  5302 ;;  dividend        4    4[COMMON] unsigned long 
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;  counter         1    9[COMMON] unsigned char 
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  4    0[COMMON] unsigned long 
  5307 ;; Registers used:
  5308 ;;		wreg, status,2, status,0
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5314 ;;      Params:         8       0       0       0       0
  5315 ;;      Locals:         1       0       0       0       0
  5316 ;;      Temps:          1       0       0       0       0
  5317 ;;      Totals:        10       0       0       0       0
  5318 ;;Total ram usage:       10 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; This function calls:
  5321 ;;		Nothing
  5322 ;; This function is called by:
  5323 ;;		_sprintf
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           
  5328                           ;psect for function ___llmod
  5329  1486                     ___llmod:	
  5330                           
  5331                           ;incstack = 0
  5332                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5333  1486  0873               	movf	___llmod@divisor+3,w
  5334  1487  0472               	iorwf	___llmod@divisor+2,w
  5335  1488  0471               	iorwf	___llmod@divisor+1,w
  5336  1489  0470               	iorwf	___llmod@divisor,w
  5337  148A  1903               	skipnz
  5338  148B  2CC9               	goto	l2223
  5339  148C  01F9               	clrf	___llmod@counter
  5340  148D  0AF9               	incf	___llmod@counter,f
  5341  148E                     l2213:	
  5342  148E  1BF3               	btfsc	___llmod@divisor+3,7
  5343  148F  2C9E               	goto	l2215
  5344  1490  3001               	movlw	1
  5345  1491  00F8               	movwf	??___llmod
  5346  1492                     u3155:	
  5347  1492  1003               	clrc
  5348  1493  0DF0               	rlf	___llmod@divisor,f
  5349  1494  0DF1               	rlf	___llmod@divisor+1,f
  5350  1495  0DF2               	rlf	___llmod@divisor+2,f
  5351  1496  0DF3               	rlf	___llmod@divisor+3,f
  5352  1497  0BF8               	decfsz	??___llmod,f
  5353  1498  2C92               	goto	u3155
  5354  1499  3001               	movlw	1
  5355  149A  00F8               	movwf	??___llmod
  5356  149B  0878               	movf	??___llmod,w
  5357  149C  07F9               	addwf	___llmod@counter,f
  5358  149D  2C8E               	goto	l2213
  5359  149E                     l2215:	
  5360  149E  0873               	movf	___llmod@divisor+3,w
  5361  149F  0277               	subwf	___llmod@dividend+3,w
  5362  14A0  1D03               	skipz
  5363  14A1  2CAC               	goto	u3175
  5364  14A2  0872               	movf	___llmod@divisor+2,w
  5365  14A3  0276               	subwf	___llmod@dividend+2,w
  5366  14A4  1D03               	skipz
  5367  14A5  2CAC               	goto	u3175
  5368  14A6  0871               	movf	___llmod@divisor+1,w
  5369  14A7  0275               	subwf	___llmod@dividend+1,w
  5370  14A8  1D03               	skipz
  5371  14A9  2CAC               	goto	u3175
  5372  14AA  0870               	movf	___llmod@divisor,w
  5373  14AB  0274               	subwf	___llmod@dividend,w
  5374  14AC                     u3175:	
  5375  14AC  1C03               	skipc
  5376  14AD  2CBC               	goto	l2219
  5377  14AE  0870               	movf	___llmod@divisor,w
  5378  14AF  02F4               	subwf	___llmod@dividend,f
  5379  14B0  0871               	movf	___llmod@divisor+1,w
  5380  14B1  1C03               	skipc
  5381  14B2  0F71               	incfsz	___llmod@divisor+1,w
  5382  14B3  02F5               	subwf	___llmod@dividend+1,f
  5383  14B4  0872               	movf	___llmod@divisor+2,w
  5384  14B5  1C03               	skipc
  5385  14B6  0F72               	incfsz	___llmod@divisor+2,w
  5386  14B7  02F6               	subwf	___llmod@dividend+2,f
  5387  14B8  0873               	movf	___llmod@divisor+3,w
  5388  14B9  1C03               	skipc
  5389  14BA  0F73               	incfsz	___llmod@divisor+3,w
  5390  14BB  02F7               	subwf	___llmod@dividend+3,f
  5391  14BC                     l2219:	
  5392  14BC  3001               	movlw	1
  5393  14BD                     u3185:	
  5394  14BD  1003               	clrc
  5395  14BE  0CF3               	rrf	___llmod@divisor+3,f
  5396  14BF  0CF2               	rrf	___llmod@divisor+2,f
  5397  14C0  0CF1               	rrf	___llmod@divisor+1,f
  5398  14C1  0CF0               	rrf	___llmod@divisor,f
  5399  14C2  3EFF               	addlw	-1
  5400  14C3  1D03               	skipz
  5401  14C4  2CBD               	goto	u3185
  5402  14C5  3001               	movlw	1
  5403  14C6  02F9               	subwf	___llmod@counter,f
  5404  14C7  1D03               	btfss	3,2
  5405  14C8  2C9E               	goto	l2215
  5406  14C9                     l2223:	
  5407  14C9  0877               	movf	___llmod@dividend+3,w
  5408  14CA  00F3               	movwf	?___llmod+3
  5409  14CB  0876               	movf	___llmod@dividend+2,w
  5410  14CC  00F2               	movwf	?___llmod+2
  5411  14CD  0875               	movf	___llmod@dividend+1,w
  5412  14CE  00F1               	movwf	?___llmod+1
  5413  14CF  0874               	movf	___llmod@dividend,w
  5414  14D0  00F0               	movwf	?___llmod
  5415  14D1  0008               	return
  5416  14D2                     __end_of___llmod:	
  5417                           
  5418                           	psect	text13
  5419  15D9                     __ptext13:	
  5420 ;; *************** function ___lldiv *****************
  5421 ;; Defined at:
  5422 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;  divisor         4    0[COMMON] unsigned long 
  5425 ;;  dividend        4    4[COMMON] unsigned long 
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;  quotient        4    9[COMMON] unsigned long 
  5428 ;;  counter         1   13[COMMON] unsigned char 
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  4    0[COMMON] unsigned long 
  5431 ;; Registers used:
  5432 ;;		wreg, status,2, status,0
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5438 ;;      Params:         8       0       0       0       0
  5439 ;;      Locals:         5       0       0       0       0
  5440 ;;      Temps:          1       0       0       0       0
  5441 ;;      Totals:        14       0       0       0       0
  5442 ;;Total ram usage:       14 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; This function calls:
  5445 ;;		Nothing
  5446 ;; This function is called by:
  5447 ;;		_sprintf
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           
  5452                           ;psect for function ___lldiv
  5453  15D9                     ___lldiv:	
  5454                           
  5455                           ;incstack = 0
  5456                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5457  15D9  3000               	movlw	0
  5458  15DA  00FC               	movwf	___lldiv@quotient+3
  5459  15DB  3000               	movlw	0
  5460  15DC  00FB               	movwf	___lldiv@quotient+2
  5461  15DD  3000               	movlw	0
  5462  15DE  00FA               	movwf	___lldiv@quotient+1
  5463  15DF  3000               	movlw	0
  5464  15E0  00F9               	movwf	___lldiv@quotient
  5465  15E1  0873               	movf	___lldiv@divisor+3,w
  5466  15E2  0472               	iorwf	___lldiv@divisor+2,w
  5467  15E3  0471               	iorwf	___lldiv@divisor+1,w
  5468  15E4  0470               	iorwf	___lldiv@divisor,w
  5469  15E5  1903               	skipnz
  5470  15E6  2E2E               	goto	l2203
  5471  15E7  01FD               	clrf	___lldiv@counter
  5472  15E8  0AFD               	incf	___lldiv@counter,f
  5473  15E9                     l2189:	
  5474  15E9  1BF3               	btfsc	___lldiv@divisor+3,7
  5475  15EA  2DF9               	goto	l2191
  5476  15EB  3001               	movlw	1
  5477  15EC  00F8               	movwf	??___lldiv
  5478  15ED                     u3085:	
  5479  15ED  1003               	clrc
  5480  15EE  0DF0               	rlf	___lldiv@divisor,f
  5481  15EF  0DF1               	rlf	___lldiv@divisor+1,f
  5482  15F0  0DF2               	rlf	___lldiv@divisor+2,f
  5483  15F1  0DF3               	rlf	___lldiv@divisor+3,f
  5484  15F2  0BF8               	decfsz	??___lldiv,f
  5485  15F3  2DED               	goto	u3085
  5486  15F4  3001               	movlw	1
  5487  15F5  00F8               	movwf	??___lldiv
  5488  15F6  0878               	movf	??___lldiv,w
  5489  15F7  07FD               	addwf	___lldiv@counter,f
  5490  15F8  2DE9               	goto	l2189
  5491  15F9                     l2191:	
  5492  15F9  3001               	movlw	1
  5493  15FA  00F8               	movwf	??___lldiv
  5494  15FB                     u3105:	
  5495  15FB  1003               	clrc
  5496  15FC  0DF9               	rlf	___lldiv@quotient,f
  5497  15FD  0DFA               	rlf	___lldiv@quotient+1,f
  5498  15FE  0DFB               	rlf	___lldiv@quotient+2,f
  5499  15FF  0DFC               	rlf	___lldiv@quotient+3,f
  5500  1600  0BF8               	decfsz	??___lldiv,f
  5501  1601  2DFB               	goto	u3105
  5502  1602  0873               	movf	___lldiv@divisor+3,w
  5503  1603  0277               	subwf	___lldiv@dividend+3,w
  5504  1604  1D03               	skipz
  5505  1605  2E10               	goto	u3115
  5506  1606  0872               	movf	___lldiv@divisor+2,w
  5507  1607  0276               	subwf	___lldiv@dividend+2,w
  5508  1608  1D03               	skipz
  5509  1609  2E10               	goto	u3115
  5510  160A  0871               	movf	___lldiv@divisor+1,w
  5511  160B  0275               	subwf	___lldiv@dividend+1,w
  5512  160C  1D03               	skipz
  5513  160D  2E10               	goto	u3115
  5514  160E  0870               	movf	___lldiv@divisor,w
  5515  160F  0274               	subwf	___lldiv@dividend,w
  5516  1610                     u3115:	
  5517  1610  1C03               	skipc
  5518  1611  2E21               	goto	l2199
  5519  1612  0870               	movf	___lldiv@divisor,w
  5520  1613  02F4               	subwf	___lldiv@dividend,f
  5521  1614  0871               	movf	___lldiv@divisor+1,w
  5522  1615  1C03               	skipc
  5523  1616  0F71               	incfsz	___lldiv@divisor+1,w
  5524  1617  02F5               	subwf	___lldiv@dividend+1,f
  5525  1618  0872               	movf	___lldiv@divisor+2,w
  5526  1619  1C03               	skipc
  5527  161A  0F72               	incfsz	___lldiv@divisor+2,w
  5528  161B  02F6               	subwf	___lldiv@dividend+2,f
  5529  161C  0873               	movf	___lldiv@divisor+3,w
  5530  161D  1C03               	skipc
  5531  161E  0F73               	incfsz	___lldiv@divisor+3,w
  5532  161F  02F7               	subwf	___lldiv@dividend+3,f
  5533  1620  1479               	bsf	___lldiv@quotient,0
  5534  1621                     l2199:	
  5535  1621  3001               	movlw	1
  5536  1622                     u3125:	
  5537  1622  1003               	clrc
  5538  1623  0CF3               	rrf	___lldiv@divisor+3,f
  5539  1624  0CF2               	rrf	___lldiv@divisor+2,f
  5540  1625  0CF1               	rrf	___lldiv@divisor+1,f
  5541  1626  0CF0               	rrf	___lldiv@divisor,f
  5542  1627  3EFF               	addlw	-1
  5543  1628  1D03               	skipz
  5544  1629  2E22               	goto	u3125
  5545  162A  3001               	movlw	1
  5546  162B  02FD               	subwf	___lldiv@counter,f
  5547  162C  1D03               	btfss	3,2
  5548  162D  2DF9               	goto	l2191
  5549  162E                     l2203:	
  5550  162E  087C               	movf	___lldiv@quotient+3,w
  5551  162F  00F3               	movwf	?___lldiv+3
  5552  1630  087B               	movf	___lldiv@quotient+2,w
  5553  1631  00F2               	movwf	?___lldiv+2
  5554  1632  087A               	movf	___lldiv@quotient+1,w
  5555  1633  00F1               	movwf	?___lldiv+1
  5556  1634  0879               	movf	___lldiv@quotient,w
  5557  1635  00F0               	movwf	?___lldiv
  5558  1636  0008               	return
  5559  1637                     __end_of___lldiv:	
  5560                           
  5561                           	psect	text14
  5562  169F                     __ptext14:	
  5563 ;; *************** function ___fttol *****************
  5564 ;; Defined at:
  5565 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  f1              3   41[BANK0 ] float 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  lval            4   50[BANK0 ] unsigned long 
  5570 ;;  exp1            1   54[BANK0 ] unsigned char 
  5571 ;;  sign1           1   49[BANK0 ] unsigned char 
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  4   41[BANK0 ] long 
  5574 ;; Registers used:
  5575 ;;		wreg, status,2, status,0
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5581 ;;      Params:         0       4       0       0       0
  5582 ;;      Locals:         0       6       0       0       0
  5583 ;;      Temps:          0       4       0       0       0
  5584 ;;      Totals:         0      14       0       0       0
  5585 ;;Total ram usage:       14 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; This function calls:
  5588 ;;		Nothing
  5589 ;; This function is called by:
  5590 ;;		_sprintf
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           
  5595                           ;psect for function ___fttol
  5596  169F                     ___fttol:	
  5597                           
  5598                           ;incstack = 0
  5599                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5600  169F  1283               	bcf	3,5	;RP0=0, select bank0
  5601  16A0  1303               	bcf	3,6	;RP1=0, select bank0
  5602  16A1  0849               	movf	___fttol@f1,w
  5603  16A2  00CD               	movwf	??___fttol
  5604  16A3  084A               	movf	___fttol@f1+1,w
  5605  16A4  00CE               	movwf	??___fttol+1
  5606  16A5  084B               	movf	___fttol@f1+2,w
  5607  16A6  00CF               	movwf	??___fttol+2
  5608  16A7  1003               	clrc
  5609  16A8  0D4E               	rlf	??___fttol+1,w
  5610  16A9  0D4F               	rlf	??___fttol+2,w
  5611  16AA  00D0               	movwf	??___fttol+3
  5612  16AB  0850               	movf	??___fttol+3,w
  5613  16AC  00D6               	movwf	___fttol@exp1
  5614  16AD  08D6               	movf	___fttol@exp1,f
  5615  16AE  1D03               	skipz
  5616  16AF  2EB9               	goto	l2145
  5617  16B0  3000               	movlw	0
  5618  16B1  00CC               	movwf	?___fttol+3
  5619  16B2  3000               	movlw	0
  5620  16B3  00CB               	movwf	?___fttol+2
  5621  16B4  3000               	movlw	0
  5622  16B5  00CA               	movwf	?___fttol+1
  5623  16B6  3000               	movlw	0
  5624  16B7  00C9               	movwf	?___fttol
  5625  16B8  0008               	return
  5626  16B9                     l2145:	
  5627  16B9  0849               	movf	___fttol@f1,w
  5628  16BA  00CD               	movwf	??___fttol
  5629  16BB  084A               	movf	___fttol@f1+1,w
  5630  16BC  00CE               	movwf	??___fttol+1
  5631  16BD  084B               	movf	___fttol@f1+2,w
  5632  16BE  00CF               	movwf	??___fttol+2
  5633  16BF  3017               	movlw	23
  5634  16C0                     u2985:	
  5635  16C0  1003               	clrc
  5636  16C1  0CCF               	rrf	??___fttol+2,f
  5637  16C2  0CCE               	rrf	??___fttol+1,f
  5638  16C3  0CCD               	rrf	??___fttol,f
  5639  16C4  3EFF               	addlw	-1
  5640  16C5  1D03               	skipz
  5641  16C6  2EC0               	goto	u2985
  5642  16C7  084D               	movf	??___fttol,w
  5643  16C8  00D0               	movwf	??___fttol+3
  5644  16C9  0850               	movf	??___fttol+3,w
  5645  16CA  00D1               	movwf	___fttol@sign1
  5646  16CB  17CA               	bsf	___fttol@f1+1,7
  5647  16CC  30FF               	movlw	255
  5648  16CD  05C9               	andwf	___fttol@f1,f
  5649  16CE  30FF               	movlw	255
  5650  16CF  05CA               	andwf	___fttol@f1+1,f
  5651  16D0  3000               	movlw	0
  5652  16D1  05CB               	andwf	___fttol@f1+2,f
  5653  16D2  0849               	movf	___fttol@f1,w
  5654  16D3  00D2               	movwf	___fttol@lval
  5655  16D4  084A               	movf	___fttol@f1+1,w
  5656  16D5  00D3               	movwf	___fttol@lval+1
  5657  16D6  084B               	movf	___fttol@f1+2,w
  5658  16D7  00D4               	movwf	___fttol@lval+2
  5659  16D8  01D5               	clrf	___fttol@lval+3
  5660  16D9  308E               	movlw	142
  5661  16DA  02D6               	subwf	___fttol@exp1,f
  5662  16DB  1FD6               	btfss	___fttol@exp1,7
  5663  16DC  2EFB               	goto	l2165
  5664  16DD  0856               	movf	___fttol@exp1,w
  5665  16DE  3A80               	xorlw	128
  5666  16DF  3E8F               	addlw	143
  5667  16E0  1803               	skipnc
  5668  16E1  2EEB               	goto	l2163
  5669  16E2  3000               	movlw	0
  5670  16E3  00CC               	movwf	?___fttol+3
  5671  16E4  3000               	movlw	0
  5672  16E5  00CB               	movwf	?___fttol+2
  5673  16E6  3000               	movlw	0
  5674  16E7  00CA               	movwf	?___fttol+1
  5675  16E8  3000               	movlw	0
  5676  16E9  00C9               	movwf	?___fttol
  5677  16EA  0008               	return
  5678  16EB                     l2163:	
  5679  16EB  3001               	movlw	1
  5680  16EC                     u3015:	
  5681  16EC  1003               	clrc
  5682  16ED  0CD5               	rrf	___fttol@lval+3,f
  5683  16EE  0CD4               	rrf	___fttol@lval+2,f
  5684  16EF  0CD3               	rrf	___fttol@lval+1,f
  5685  16F0  0CD2               	rrf	___fttol@lval,f
  5686  16F1  3EFF               	addlw	-1
  5687  16F2  1D03               	skipz
  5688  16F3  2EEC               	goto	u3015
  5689  16F4  3001               	movlw	1
  5690  16F5  00CD               	movwf	??___fttol
  5691  16F6  084D               	movf	??___fttol,w
  5692  16F7  07D6               	addwf	___fttol@exp1,f
  5693  16F8  1903               	btfsc	3,2
  5694  16F9  2F16               	goto	l2175
  5695  16FA  2EEB               	goto	l2163
  5696  16FB                     l2165:	
  5697  16FB  3018               	movlw	24
  5698  16FC  0256               	subwf	___fttol@exp1,w
  5699  16FD  1C03               	skipc
  5700  16FE  2F13               	goto	l2173
  5701  16FF  3000               	movlw	0
  5702  1700  00CC               	movwf	?___fttol+3
  5703  1701  3000               	movlw	0
  5704  1702  00CB               	movwf	?___fttol+2
  5705  1703  3000               	movlw	0
  5706  1704  00CA               	movwf	?___fttol+1
  5707  1705  3000               	movlw	0
  5708  1706  00C9               	movwf	?___fttol
  5709  1707  0008               	return
  5710  1708                     l2171:	
  5711  1708  3001               	movlw	1
  5712  1709  00CD               	movwf	??___fttol
  5713  170A                     u3045:	
  5714  170A  1003               	clrc
  5715  170B  0DD2               	rlf	___fttol@lval,f
  5716  170C  0DD3               	rlf	___fttol@lval+1,f
  5717  170D  0DD4               	rlf	___fttol@lval+2,f
  5718  170E  0DD5               	rlf	___fttol@lval+3,f
  5719  170F  0BCD               	decfsz	??___fttol,f
  5720  1710  2F0A               	goto	u3045
  5721  1711  3001               	movlw	1
  5722  1712  02D6               	subwf	___fttol@exp1,f
  5723  1713                     l2173:	
  5724  1713  08D6               	movf	___fttol@exp1,f
  5725  1714  1D03               	skipz
  5726  1715  2F08               	goto	l2171
  5727  1716                     l2175:	
  5728  1716  0851               	movf	___fttol@sign1,w
  5729  1717  1903               	btfsc	3,2
  5730  1718  2F24               	goto	l2179
  5731  1719  09D2               	comf	___fttol@lval,f
  5732  171A  09D3               	comf	___fttol@lval+1,f
  5733  171B  09D4               	comf	___fttol@lval+2,f
  5734  171C  09D5               	comf	___fttol@lval+3,f
  5735  171D  0AD2               	incf	___fttol@lval,f
  5736  171E  1903               	skipnz
  5737  171F  0AD3               	incf	___fttol@lval+1,f
  5738  1720  1903               	skipnz
  5739  1721  0AD4               	incf	___fttol@lval+2,f
  5740  1722  1903               	skipnz
  5741  1723  0AD5               	incf	___fttol@lval+3,f
  5742  1724                     l2179:	
  5743  1724  0855               	movf	___fttol@lval+3,w
  5744  1725  00CC               	movwf	?___fttol+3
  5745  1726  0854               	movf	___fttol@lval+2,w
  5746  1727  00CB               	movwf	?___fttol+2
  5747  1728  0853               	movf	___fttol@lval+1,w
  5748  1729  00CA               	movwf	?___fttol+1
  5749  172A  0852               	movf	___fttol@lval,w
  5750  172B  00C9               	movwf	?___fttol
  5751  172C  0008               	return
  5752  172D                     __end_of___fttol:	
  5753                           
  5754                           	psect	text15
  5755  13D2                     __ptext15:	
  5756 ;; *************** function ___ftsub *****************
  5757 ;; Defined at:
  5758 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  f2              3   61[BANK0 ] float 
  5761 ;;  f1              3   64[BANK0 ] float 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;		None
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  3   61[BANK0 ] float 
  5766 ;; Registers used:
  5767 ;;		wreg, status,2, status,0, pclath, cstack
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5773 ;;      Params:         0       6       0       0       0
  5774 ;;      Locals:         0       0       0       0       0
  5775 ;;      Temps:          0       0       0       0       0
  5776 ;;      Totals:         0       6       0       0       0
  5777 ;;Total ram usage:        6 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:    2
  5780 ;; This function calls:
  5781 ;;		___ftadd
  5782 ;; This function is called by:
  5783 ;;		_sprintf
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           
  5788                           ;psect for function ___ftsub
  5789  13D2                     ___ftsub:	
  5790                           
  5791                           ;incstack = 0
  5792                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5793  13D2  3080               	movlw	128
  5794  13D3  1283               	bcf	3,5	;RP0=0, select bank0
  5795  13D4  1303               	bcf	3,6	;RP1=0, select bank0
  5796  13D5  06DF               	xorwf	___ftsub@f2+2,f
  5797  13D6  0860               	movf	___ftsub@f1,w
  5798  13D7  00D0               	movwf	___ftadd@f1
  5799  13D8  0861               	movf	___ftsub@f1+1,w
  5800  13D9  00D1               	movwf	___ftadd@f1+1
  5801  13DA  0862               	movf	___ftsub@f1+2,w
  5802  13DB  00D2               	movwf	___ftadd@f1+2
  5803  13DC  085D               	movf	___ftsub@f2,w
  5804  13DD  00D3               	movwf	___ftadd@f2
  5805  13DE  085E               	movf	___ftsub@f2+1,w
  5806  13DF  00D4               	movwf	___ftadd@f2+1
  5807  13E0  085F               	movf	___ftsub@f2+2,w
  5808  13E1  00D5               	movwf	___ftadd@f2+2
  5809  13E2  120A  158A  20BA   	fcall	___ftadd
  5810  13E5  1283               	bcf	3,5	;RP0=0, select bank0
  5811  13E6  1303               	bcf	3,6	;RP1=0, select bank0
  5812  13E7  0850               	movf	?___ftadd,w
  5813  13E8  00DD               	movwf	?___ftsub
  5814  13E9  0851               	movf	?___ftadd+1,w
  5815  13EA  00DE               	movwf	?___ftsub+1
  5816  13EB  0852               	movf	?___ftadd+2,w
  5817  13EC  00DF               	movwf	?___ftsub+2
  5818  13ED  0008               	return
  5819  13EE                     __end_of___ftsub:	
  5820                           
  5821                           	psect	text16
  5822  08BA                     __ptext16:	
  5823 ;; *************** function ___ftadd *****************
  5824 ;; Defined at:
  5825 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  f1              3   48[BANK0 ] float 
  5828 ;;  f2              3   51[BANK0 ] float 
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;  exp1            1   60[BANK0 ] unsigned char 
  5831 ;;  exp2            1   59[BANK0 ] unsigned char 
  5832 ;;  sign            1   58[BANK0 ] unsigned char 
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  3   48[BANK0 ] float 
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0, pclath, cstack
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5842 ;;      Params:         0       6       0       0       0
  5843 ;;      Locals:         0       3       0       0       0
  5844 ;;      Temps:          0       4       0       0       0
  5845 ;;      Totals:         0      13       0       0       0
  5846 ;;Total ram usage:       13 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:    1
  5849 ;; This function calls:
  5850 ;;		___ftpack
  5851 ;; This function is called by:
  5852 ;;		_main
  5853 ;;		_sprintf
  5854 ;;		___ftsub
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           
  5859                           ;psect for function ___ftadd
  5860  08BA                     ___ftadd:	
  5861                           
  5862                           ;incstack = 0
  5863                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5864  08BA  1283               	bcf	3,5	;RP0=0, select bank0
  5865  08BB  1303               	bcf	3,6	;RP1=0, select bank0
  5866  08BC  0850               	movf	___ftadd@f1,w
  5867  08BD  00D6               	movwf	??___ftadd
  5868  08BE  0851               	movf	___ftadd@f1+1,w
  5869  08BF  00D7               	movwf	??___ftadd+1
  5870  08C0  0852               	movf	___ftadd@f1+2,w
  5871  08C1  00D8               	movwf	??___ftadd+2
  5872  08C2  1003               	clrc
  5873  08C3  0D57               	rlf	??___ftadd+1,w
  5874  08C4  0D58               	rlf	??___ftadd+2,w
  5875  08C5  00D9               	movwf	??___ftadd+3
  5876  08C6  0859               	movf	??___ftadd+3,w
  5877  08C7  00DC               	movwf	___ftadd@exp1
  5878  08C8  0853               	movf	___ftadd@f2,w
  5879  08C9  00D6               	movwf	??___ftadd
  5880  08CA  0854               	movf	___ftadd@f2+1,w
  5881  08CB  00D7               	movwf	??___ftadd+1
  5882  08CC  0855               	movf	___ftadd@f2+2,w
  5883  08CD  00D8               	movwf	??___ftadd+2
  5884  08CE  1003               	clrc
  5885  08CF  0D57               	rlf	??___ftadd+1,w
  5886  08D0  0D58               	rlf	??___ftadd+2,w
  5887  08D1  00D9               	movwf	??___ftadd+3
  5888  08D2  0859               	movf	??___ftadd+3,w
  5889  08D3  00DB               	movwf	___ftadd@exp2
  5890  08D4  085C               	movf	___ftadd@exp1,w
  5891  08D5  1903               	btfsc	3,2
  5892  08D6  28E3               	goto	l1783
  5893  08D7  085B               	movf	___ftadd@exp2,w
  5894  08D8  025C               	subwf	___ftadd@exp1,w
  5895  08D9  1803               	skipnc
  5896  08DA  28EA               	goto	l1787
  5897  08DB  035C               	decf	___ftadd@exp1,w
  5898  08DC  3AFF               	xorlw	255
  5899  08DD  075B               	addwf	___ftadd@exp2,w
  5900  08DE  00D6               	movwf	??___ftadd
  5901  08DF  3019               	movlw	25
  5902  08E0  0256               	subwf	??___ftadd,w
  5903  08E1  1C03               	skipc
  5904  08E2  28EA               	goto	l1787
  5905  08E3                     l1783:	
  5906  08E3  0853               	movf	___ftadd@f2,w
  5907  08E4  00D0               	movwf	?___ftadd
  5908  08E5  0854               	movf	___ftadd@f2+1,w
  5909  08E6  00D1               	movwf	?___ftadd+1
  5910  08E7  0855               	movf	___ftadd@f2+2,w
  5911  08E8  00D2               	movwf	?___ftadd+2
  5912  08E9  0008               	return
  5913  08EA                     l1787:	
  5914  08EA  085B               	movf	___ftadd@exp2,w
  5915  08EB  1903               	btfsc	3,2
  5916  08EC  0008               	return
  5917  08ED  085C               	movf	___ftadd@exp1,w
  5918  08EE  025B               	subwf	___ftadd@exp2,w
  5919  08EF  1803               	skipnc
  5920  08F0  28F9               	goto	l1793
  5921  08F1  035B               	decf	___ftadd@exp2,w
  5922  08F2  3AFF               	xorlw	255
  5923  08F3  075C               	addwf	___ftadd@exp1,w
  5924  08F4  00D6               	movwf	??___ftadd
  5925  08F5  3019               	movlw	25
  5926  08F6  0256               	subwf	??___ftadd,w
  5927  08F7  1803               	btfsc	3,0
  5928  08F8  0008               	return
  5929  08F9                     l1793:	
  5930  08F9  3006               	movlw	6
  5931  08FA  00D6               	movwf	??___ftadd
  5932  08FB  0856               	movf	??___ftadd,w
  5933  08FC  00DA               	movwf	___ftadd@sign
  5934  08FD  1BD2               	btfsc	___ftadd@f1+2,7
  5935  08FE  17DA               	bsf	___ftadd@sign,7
  5936  08FF  1BD5               	btfsc	___ftadd@f2+2,7
  5937  0900  175A               	bsf	___ftadd@sign,6
  5938  0901  17D1               	bsf	___ftadd@f1+1,7
  5939  0902  30FF               	movlw	255
  5940  0903  05D0               	andwf	___ftadd@f1,f
  5941  0904  30FF               	movlw	255
  5942  0905  05D1               	andwf	___ftadd@f1+1,f
  5943  0906  3000               	movlw	0
  5944  0907  05D2               	andwf	___ftadd@f1+2,f
  5945  0908  17D4               	bsf	___ftadd@f2+1,7
  5946  0909  30FF               	movlw	255
  5947  090A  05D3               	andwf	___ftadd@f2,f
  5948  090B  30FF               	movlw	255
  5949  090C  05D4               	andwf	___ftadd@f2+1,f
  5950  090D  3000               	movlw	0
  5951  090E  05D5               	andwf	___ftadd@f2+2,f
  5952  090F  085B               	movf	___ftadd@exp2,w
  5953  0910  025C               	subwf	___ftadd@exp1,w
  5954  0911  1803               	skipnc
  5955  0912  2939               	goto	l1815
  5956  0913                     l1805:	
  5957  0913  3001               	movlw	1
  5958  0914                     u2245:	
  5959  0914  1003               	clrc
  5960  0915  0DD3               	rlf	___ftadd@f2,f
  5961  0916  0DD4               	rlf	___ftadd@f2+1,f
  5962  0917  0DD5               	rlf	___ftadd@f2+2,f
  5963  0918  3EFF               	addlw	-1
  5964  0919  1D03               	skipz
  5965  091A  2914               	goto	u2245
  5966  091B  3001               	movlw	1
  5967  091C  02DB               	subwf	___ftadd@exp2,f
  5968  091D  085B               	movf	___ftadd@exp2,w
  5969  091E  065C               	xorwf	___ftadd@exp1,w
  5970  091F  1903               	skipnz
  5971  0920  2934               	goto	l1813
  5972  0921  3001               	movlw	1
  5973  0922  02DA               	subwf	___ftadd@sign,f
  5974  0923  085A               	movf	___ftadd@sign,w
  5975  0924  3907               	andlw	7
  5976  0925  1903               	btfsc	3,2
  5977  0926  2934               	goto	l1813
  5978  0927  2913               	goto	l1805
  5979  0928                     l1811:	
  5980  0928  3001               	movlw	1
  5981  0929                     u2275:	
  5982  0929  1003               	clrc
  5983  092A  0CD2               	rrf	___ftadd@f1+2,f
  5984  092B  0CD1               	rrf	___ftadd@f1+1,f
  5985  092C  0CD0               	rrf	___ftadd@f1,f
  5986  092D  3EFF               	addlw	-1
  5987  092E  1D03               	skipz
  5988  092F  2929               	goto	u2275
  5989  0930  3001               	movlw	1
  5990  0931  00D6               	movwf	??___ftadd
  5991  0932  0856               	movf	??___ftadd,w
  5992  0933  07DC               	addwf	___ftadd@exp1,f
  5993  0934                     l1813:	
  5994  0934  085C               	movf	___ftadd@exp1,w
  5995  0935  065B               	xorwf	___ftadd@exp2,w
  5996  0936  1903               	btfsc	3,2
  5997  0937  2962               	goto	l459
  5998  0938  2928               	goto	l1811
  5999  0939                     l1815:	
  6000  0939  085C               	movf	___ftadd@exp1,w
  6001  093A  025B               	subwf	___ftadd@exp2,w
  6002  093B  1803               	skipnc
  6003  093C  2962               	goto	l459
  6004  093D                     l1817:	
  6005  093D  3001               	movlw	1
  6006  093E                     u2305:	
  6007  093E  1003               	clrc
  6008  093F  0DD0               	rlf	___ftadd@f1,f
  6009  0940  0DD1               	rlf	___ftadd@f1+1,f
  6010  0941  0DD2               	rlf	___ftadd@f1+2,f
  6011  0942  3EFF               	addlw	-1
  6012  0943  1D03               	skipz
  6013  0944  293E               	goto	u2305
  6014  0945  3001               	movlw	1
  6015  0946  02DC               	subwf	___ftadd@exp1,f
  6016  0947  085B               	movf	___ftadd@exp2,w
  6017  0948  065C               	xorwf	___ftadd@exp1,w
  6018  0949  1903               	skipnz
  6019  094A  295E               	goto	l1825
  6020  094B  3001               	movlw	1
  6021  094C  02DA               	subwf	___ftadd@sign,f
  6022  094D  085A               	movf	___ftadd@sign,w
  6023  094E  3907               	andlw	7
  6024  094F  1903               	btfsc	3,2
  6025  0950  295E               	goto	l1825
  6026  0951  293D               	goto	l1817
  6027  0952                     l1823:	
  6028  0952  3001               	movlw	1
  6029  0953                     u2335:	
  6030  0953  1003               	clrc
  6031  0954  0CD5               	rrf	___ftadd@f2+2,f
  6032  0955  0CD4               	rrf	___ftadd@f2+1,f
  6033  0956  0CD3               	rrf	___ftadd@f2,f
  6034  0957  3EFF               	addlw	-1
  6035  0958  1D03               	skipz
  6036  0959  2953               	goto	u2335
  6037  095A  3001               	movlw	1
  6038  095B  00D6               	movwf	??___ftadd
  6039  095C  0856               	movf	??___ftadd,w
  6040  095D  07DB               	addwf	___ftadd@exp2,f
  6041  095E                     l1825:	
  6042  095E  085C               	movf	___ftadd@exp1,w
  6043  095F  065B               	xorwf	___ftadd@exp2,w
  6044  0960  1D03               	skipz
  6045  0961  2952               	goto	l1823
  6046  0962                     l459:	
  6047  0962  1FDA               	btfss	___ftadd@sign,7
  6048  0963  2974               	goto	l1829
  6049  0964  30FF               	movlw	255
  6050  0965  06D0               	xorwf	___ftadd@f1,f
  6051  0966  30FF               	movlw	255
  6052  0967  06D1               	xorwf	___ftadd@f1+1,f
  6053  0968  30FF               	movlw	255
  6054  0969  06D2               	xorwf	___ftadd@f1+2,f
  6055  096A  3001               	movlw	1
  6056  096B  07D0               	addwf	___ftadd@f1,f
  6057  096C  3000               	movlw	0
  6058  096D  1803               	skipnc
  6059  096E  3001               	movlw	1
  6060  096F  07D1               	addwf	___ftadd@f1+1,f
  6061  0970  3000               	movlw	0
  6062  0971  1803               	skipnc
  6063  0972  3001               	movlw	1
  6064  0973  07D2               	addwf	___ftadd@f1+2,f
  6065  0974                     l1829:	
  6066  0974  1F5A               	btfss	___ftadd@sign,6
  6067  0975  2986               	goto	l1833
  6068  0976  30FF               	movlw	255
  6069  0977  06D3               	xorwf	___ftadd@f2,f
  6070  0978  30FF               	movlw	255
  6071  0979  06D4               	xorwf	___ftadd@f2+1,f
  6072  097A  30FF               	movlw	255
  6073  097B  06D5               	xorwf	___ftadd@f2+2,f
  6074  097C  3001               	movlw	1
  6075  097D  07D3               	addwf	___ftadd@f2,f
  6076  097E  3000               	movlw	0
  6077  097F  1803               	skipnc
  6078  0980  3001               	movlw	1
  6079  0981  07D4               	addwf	___ftadd@f2+1,f
  6080  0982  3000               	movlw	0
  6081  0983  1803               	skipnc
  6082  0984  3001               	movlw	1
  6083  0985  07D5               	addwf	___ftadd@f2+2,f
  6084  0986                     l1833:	
  6085  0986  01DA               	clrf	___ftadd@sign
  6086  0987  0850               	movf	___ftadd@f1,w
  6087  0988  07D3               	addwf	___ftadd@f2,f
  6088  0989  0851               	movf	___ftadd@f1+1,w
  6089  098A  1103               	clrz
  6090  098B  1803               	skipnc
  6091  098C  0A51               	incf	___ftadd@f1+1,w
  6092  098D  1D03               	btfss	3,2
  6093  098E  07D4               	addwf	___ftadd@f2+1,f
  6094  098F  0852               	movf	___ftadd@f1+2,w
  6095  0990  1103               	clrz
  6096  0991  1803               	skipnc
  6097  0992  0A52               	incf	___ftadd@f1+2,w
  6098  0993  1D03               	btfss	3,2
  6099  0994  07D5               	addwf	___ftadd@f2+2,f
  6100  0995  1FD5               	btfss	___ftadd@f2+2,7
  6101  0996  29A9               	goto	l1843
  6102  0997  30FF               	movlw	255
  6103  0998  06D3               	xorwf	___ftadd@f2,f
  6104  0999  30FF               	movlw	255
  6105  099A  06D4               	xorwf	___ftadd@f2+1,f
  6106  099B  30FF               	movlw	255
  6107  099C  06D5               	xorwf	___ftadd@f2+2,f
  6108  099D  3001               	movlw	1
  6109  099E  07D3               	addwf	___ftadd@f2,f
  6110  099F  3000               	movlw	0
  6111  09A0  1803               	skipnc
  6112  09A1  3001               	movlw	1
  6113  09A2  07D4               	addwf	___ftadd@f2+1,f
  6114  09A3  3000               	movlw	0
  6115  09A4  1803               	skipnc
  6116  09A5  3001               	movlw	1
  6117  09A6  07D5               	addwf	___ftadd@f2+2,f
  6118  09A7  01DA               	clrf	___ftadd@sign
  6119  09A8  0ADA               	incf	___ftadd@sign,f
  6120  09A9                     l1843:	
  6121  09A9  0853               	movf	___ftadd@f2,w
  6122  09AA  00F0               	movwf	___ftpack@arg
  6123  09AB  0854               	movf	___ftadd@f2+1,w
  6124  09AC  00F1               	movwf	___ftpack@arg+1
  6125  09AD  0855               	movf	___ftadd@f2+2,w
  6126  09AE  00F2               	movwf	___ftpack@arg+2
  6127  09AF  085C               	movf	___ftadd@exp1,w
  6128  09B0  00D6               	movwf	??___ftadd
  6129  09B1  0856               	movf	??___ftadd,w
  6130  09B2  00F3               	movwf	___ftpack@exp
  6131  09B3  085A               	movf	___ftadd@sign,w
  6132  09B4  00D7               	movwf	??___ftadd+1
  6133  09B5  0857               	movf	??___ftadd+1,w
  6134  09B6  00F4               	movwf	___ftpack@sign
  6135  09B7  160A  118A  2637   	fcall	___ftpack
  6136  09BA  0870               	movf	?___ftpack,w
  6137  09BB  1283               	bcf	3,5	;RP0=0, select bank0
  6138  09BC  1303               	bcf	3,6	;RP1=0, select bank0
  6139  09BD  00D0               	movwf	?___ftadd
  6140  09BE  0871               	movf	?___ftpack+1,w
  6141  09BF  00D1               	movwf	?___ftadd+1
  6142  09C0  0872               	movf	?___ftpack+2,w
  6143  09C1  00D2               	movwf	?___ftadd+2
  6144  09C2  0008               	return
  6145  09C3                     __end_of___ftadd:	
  6146                           
  6147                           	psect	text17
  6148  1349                     __ptext17:	
  6149 ;; *************** function ___ftneg *****************
  6150 ;; Defined at:
  6151 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;  f1              3    0[COMMON] float 
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;		None
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  3    0[COMMON] float 
  6158 ;; Registers used:
  6159 ;;		wreg
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6165 ;;      Params:         3       0       0       0       0
  6166 ;;      Locals:         0       0       0       0       0
  6167 ;;      Temps:          0       0       0       0       0
  6168 ;;      Totals:         3       0       0       0       0
  6169 ;;Total ram usage:        3 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; This function calls:
  6172 ;;		Nothing
  6173 ;; This function is called by:
  6174 ;;		_sprintf
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           
  6179                           ;psect for function ___ftneg
  6180  1349                     ___ftneg:	
  6181                           
  6182                           ;incstack = 0
  6183                           ; Regs used in ___ftneg: [wreg]
  6184  1349  0872               	movf	___ftneg@f1+2,w
  6185  134A  0471               	iorwf	___ftneg@f1+1,w
  6186  134B  0470               	iorwf	___ftneg@f1,w
  6187  134C  1903               	skipnz
  6188  134D  0008               	return
  6189  134E  3080               	movlw	128
  6190  134F  06F2               	xorwf	___ftneg@f1+2,f
  6191  1350  0008               	return
  6192  1351                     __end_of___ftneg:	
  6193                           
  6194                           	psect	text18
  6195  151F                     __ptext18:	
  6196 ;; *************** function ___ftge *****************
  6197 ;; Defined at:
  6198 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  ff1             3    0[COMMON] float 
  6201 ;;  ff2             3    3[COMMON] float 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;		None
  6204 ;; Return value:  Size  Location     Type
  6205 ;;		None               void
  6206 ;; Registers used:
  6207 ;;		wreg, status,2, status,0
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6213 ;;      Params:         6       0       0       0       0
  6214 ;;      Locals:         0       0       0       0       0
  6215 ;;      Temps:          6       0       0       0       0
  6216 ;;      Totals:        12       0       0       0       0
  6217 ;;Total ram usage:       12 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; This function calls:
  6220 ;;		Nothing
  6221 ;; This function is called by:
  6222 ;;		_sprintf
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           
  6227                           ;psect for function ___ftge
  6228  151F                     ___ftge:	
  6229                           
  6230                           ;incstack = 0
  6231                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6232  151F  1FF2               	btfss	___ftge@ff1+2,7
  6233  1520  2D46               	goto	l2109
  6234  1521  3000               	movlw	0
  6235  1522  00F6               	movwf	??___ftge
  6236  1523  3000               	movlw	0
  6237  1524  00F7               	movwf	??___ftge+1
  6238  1525  3080               	movlw	128
  6239  1526  00F8               	movwf	??___ftge+2
  6240  1527  0970               	comf	___ftge@ff1,w
  6241  1528  00F9               	movwf	??___ftge+3
  6242  1529  0971               	comf	___ftge@ff1+1,w
  6243  152A  00FA               	movwf	??___ftge+4
  6244  152B  0972               	comf	___ftge@ff1+2,w
  6245  152C  00FB               	movwf	??___ftge+5
  6246  152D  0AF9               	incf	??___ftge+3,f
  6247  152E  1903               	skipnz
  6248  152F  0AFA               	incf	??___ftge+4,f
  6249  1530  1903               	skipnz
  6250  1531  0AFB               	incf	??___ftge+5,f
  6251  1532  0879               	movf	??___ftge+3,w
  6252  1533  07F6               	addwf	??___ftge,f
  6253  1534  087A               	movf	??___ftge+4,w
  6254  1535  1803               	skipnc
  6255  1536  0F7A               	incfsz	??___ftge+4,w
  6256  1537  2D39               	goto	u2921
  6257  1538  2D3A               	goto	u2922
  6258  1539                     u2921:	
  6259  1539  07F7               	addwf	??___ftge+1,f
  6260  153A                     u2922:	
  6261  153A  087B               	movf	??___ftge+5,w
  6262  153B  1803               	skipnc
  6263  153C  0F7B               	incfsz	??___ftge+5,w
  6264  153D  2D3F               	goto	u2923
  6265  153E  2D40               	goto	u2924
  6266  153F                     u2923:	
  6267  153F  07F8               	addwf	??___ftge+2,f
  6268  1540                     u2924:	
  6269  1540  0876               	movf	??___ftge,w
  6270  1541  00F0               	movwf	___ftge@ff1
  6271  1542  0877               	movf	??___ftge+1,w
  6272  1543  00F1               	movwf	___ftge@ff1+1
  6273  1544  0878               	movf	??___ftge+2,w
  6274  1545  00F2               	movwf	___ftge@ff1+2
  6275  1546                     l2109:	
  6276  1546  1FF5               	btfss	___ftge@ff2+2,7
  6277  1547  2D6D               	goto	l2113
  6278  1548  3000               	movlw	0
  6279  1549  00F6               	movwf	??___ftge
  6280  154A  3000               	movlw	0
  6281  154B  00F7               	movwf	??___ftge+1
  6282  154C  3080               	movlw	128
  6283  154D  00F8               	movwf	??___ftge+2
  6284  154E  0973               	comf	___ftge@ff2,w
  6285  154F  00F9               	movwf	??___ftge+3
  6286  1550  0974               	comf	___ftge@ff2+1,w
  6287  1551  00FA               	movwf	??___ftge+4
  6288  1552  0975               	comf	___ftge@ff2+2,w
  6289  1553  00FB               	movwf	??___ftge+5
  6290  1554  0AF9               	incf	??___ftge+3,f
  6291  1555  1903               	skipnz
  6292  1556  0AFA               	incf	??___ftge+4,f
  6293  1557  1903               	skipnz
  6294  1558  0AFB               	incf	??___ftge+5,f
  6295  1559  0879               	movf	??___ftge+3,w
  6296  155A  07F6               	addwf	??___ftge,f
  6297  155B  087A               	movf	??___ftge+4,w
  6298  155C  1803               	skipnc
  6299  155D  0F7A               	incfsz	??___ftge+4,w
  6300  155E  2D60               	goto	u2941
  6301  155F  2D61               	goto	u2942
  6302  1560                     u2941:	
  6303  1560  07F7               	addwf	??___ftge+1,f
  6304  1561                     u2942:	
  6305  1561  087B               	movf	??___ftge+5,w
  6306  1562  1803               	skipnc
  6307  1563  0F7B               	incfsz	??___ftge+5,w
  6308  1564  2D66               	goto	u2943
  6309  1565  2D67               	goto	u2944
  6310  1566                     u2943:	
  6311  1566  07F8               	addwf	??___ftge+2,f
  6312  1567                     u2944:	
  6313  1567  0876               	movf	??___ftge,w
  6314  1568  00F3               	movwf	___ftge@ff2
  6315  1569  0877               	movf	??___ftge+1,w
  6316  156A  00F4               	movwf	___ftge@ff2+1
  6317  156B  0878               	movf	??___ftge+2,w
  6318  156C  00F5               	movwf	___ftge@ff2+2
  6319  156D                     l2113:	
  6320  156D  3080               	movlw	128
  6321  156E  06F2               	xorwf	___ftge@ff1+2,f
  6322  156F  3080               	movlw	128
  6323  1570  06F5               	xorwf	___ftge@ff2+2,f
  6324  1571  0875               	movf	___ftge@ff2+2,w
  6325  1572  0272               	subwf	___ftge@ff1+2,w
  6326  1573  1D03               	skipz
  6327  1574  0008               	return
  6328  1575  0874               	movf	___ftge@ff2+1,w
  6329  1576  0271               	subwf	___ftge@ff1+1,w
  6330  1577  1D03               	skipz
  6331  1578  0008               	return
  6332  1579  0873               	movf	___ftge@ff2,w
  6333  157A  0270               	subwf	___ftge@ff1,w
  6334  157B  0008               	return
  6335  157C                     __end_of___ftge:	
  6336                           
  6337                           	psect	text19
  6338  135A                     __ptext19:	
  6339 ;; *************** function _init_I2C_Master *****************
  6340 ;; Defined at:
  6341 ;;		line 54 in file "D:\Embedded-Systems\Practical Activity #7\MPLAB\LE7-3.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;		None
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;		None               void
  6348 ;; Registers used:
  6349 ;;		wreg, status,2
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6355 ;;      Params:         0       0       0       0       0
  6356 ;;      Locals:         0       0       0       0       0
  6357 ;;      Temps:          0       0       0       0       0
  6358 ;;      Totals:         0       0       0       0       0
  6359 ;;Total ram usage:        0 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; This function calls:
  6362 ;;		Nothing
  6363 ;; This function is called by:
  6364 ;;		_main
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           
  6369                           ;psect for function _init_I2C_Master
  6370  135A                     _init_I2C_Master:	
  6371                           
  6372                           ;LE7-3.c: 56: TRISC3 = 1;
  6373                           
  6374                           ;incstack = 0
  6375                           ; Regs used in _init_I2C_Master: [wreg+status,2]
  6376  135A  1683               	bsf	3,5	;RP0=1, select bank1
  6377  135B  1303               	bcf	3,6	;RP1=0, select bank1
  6378  135C  1587               	bsf	7,3	;volatile
  6379                           
  6380                           ;LE7-3.c: 57: TRISC4 = 1;
  6381  135D  1607               	bsf	7,4	;volatile
  6382                           
  6383                           ;LE7-3.c: 58: SSPCON = 0x28;
  6384  135E  3028               	movlw	40
  6385  135F  1283               	bcf	3,5	;RP0=0, select bank0
  6386  1360  1303               	bcf	3,6	;RP1=0, select bank0
  6387  1361  0094               	movwf	20	;volatile
  6388                           
  6389                           ;LE7-3.c: 59: SSPCON2 = 0x00;
  6390  1362  1683               	bsf	3,5	;RP0=1, select bank1
  6391  1363  1303               	bcf	3,6	;RP1=0, select bank1
  6392  1364  0191               	clrf	17	;volatile
  6393                           
  6394                           ;LE7-3.c: 61: SSPSTAT = 0x00;
  6395  1365  0194               	clrf	20	;volatile
  6396                           
  6397                           ;LE7-3.c: 62: SSPADD = 0x09;
  6398  1366  3009               	movlw	9
  6399  1367  0093               	movwf	19	;volatile
  6400  1368  0008               	return
  6401  1369                     __end_of_init_I2C_Master:	
  6402                           
  6403                           	psect	text20
  6404  1411                     __ptext20:	
  6405 ;; *************** function _initLCD *****************
  6406 ;; Defined at:
  6407 ;;		line 35 in file "D:\Embedded-Systems\Practical Activity #7\MPLAB\LE7-3.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;		None
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;		None
  6412 ;; Return value:  Size  Location     Type
  6413 ;;		None               void
  6414 ;; Registers used:
  6415 ;;		wreg, status,2, status,0, pclath, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6421 ;;      Params:         0       0       0       0       0
  6422 ;;      Locals:         0       0       0       0       0
  6423 ;;      Temps:          1       0       0       0       0
  6424 ;;      Totals:         1       0       0       0       0
  6425 ;;Total ram usage:        1 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:    1
  6428 ;; This function calls:
  6429 ;;		_instCtrl
  6430 ;; This function is called by:
  6431 ;;		_main
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           
  6436                           ;psect for function _initLCD
  6437  1411                     _initLCD:	
  6438                           
  6439                           ;LE7-3.c: 37: _delay((unsigned long)((1)*(4000000/4000.0)));
  6440                           
  6441                           ;incstack = 0
  6442                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  6443  1411  30F9               	movlw	249
  6444  1412  00F2               	movwf	??_initLCD
  6445  1413                     u3687:	
  6446  1413  0000               	nop
  6447  1414  0BF2               	decfsz	??_initLCD,f
  6448  1415  2C13               	goto	u3687
  6449  1416  2C17               	nop2	;nop
  6450  1417  0000               	nop
  6451                           
  6452                           ;LE7-3.c: 38: instCtrl(0x38);
  6453  1418  3038               	movlw	56
  6454  1419  160A  118A  237C  160A  118A  	fcall	_instCtrl
  6455                           
  6456                           ;LE7-3.c: 39: instCtrl(0x08);
  6457  141E  3008               	movlw	8
  6458  141F  160A  118A  237C  160A  118A  	fcall	_instCtrl
  6459                           
  6460                           ;LE7-3.c: 40: instCtrl(0x01);
  6461  1424  3001               	movlw	1
  6462  1425  160A  118A  237C  160A  118A  	fcall	_instCtrl
  6463                           
  6464                           ;LE7-3.c: 41: instCtrl(0x06);
  6465  142A  3006               	movlw	6
  6466  142B  160A  118A  237C  160A  118A  	fcall	_instCtrl
  6467                           
  6468                           ;LE7-3.c: 42: instCtrl(0x0C);
  6469  1430  300C               	movlw	12
  6470  1431  160A  118A  237C   	fcall	_instCtrl
  6471  1434  0008               	return
  6472  1435                     __end_of_initLCD:	
  6473                           
  6474                           	psect	text21
  6475  137C                     __ptext21:	
  6476 ;; *************** function _instCtrl *****************
  6477 ;; Defined at:
  6478 ;;		line 15 in file "D:\Embedded-Systems\Practical Activity #7\MPLAB\LE7-3.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;  INST            1    wreg     unsigned char 
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;  INST            1    1[COMMON] unsigned char 
  6483 ;; Return value:  Size  Location     Type
  6484 ;;		None               void
  6485 ;; Registers used:
  6486 ;;		wreg
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6492 ;;      Params:         0       0       0       0       0
  6493 ;;      Locals:         1       0       0       0       0
  6494 ;;      Temps:          1       0       0       0       0
  6495 ;;      Totals:         2       0       0       0       0
  6496 ;;Total ram usage:        2 bytes
  6497 ;; Hardware stack levels used:    1
  6498 ;; This function calls:
  6499 ;;		Nothing
  6500 ;; This function is called by:
  6501 ;;		_initLCD
  6502 ;;		_main
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           
  6507                           ;psect for function _instCtrl
  6508  137C                     _instCtrl:	
  6509                           
  6510                           ;incstack = 0
  6511                           ; Regs used in _instCtrl: [wreg]
  6512                           ;instCtrl@INST stored from wreg
  6513  137C  00F1               	movwf	instCtrl@INST
  6514                           
  6515                           ;LE7-3.c: 17: PORTD = INST;
  6516  137D  0871               	movf	instCtrl@INST,w
  6517  137E  1283               	bcf	3,5	;RP0=0, select bank0
  6518  137F  1303               	bcf	3,6	;RP1=0, select bank0
  6519  1380  0088               	movwf	8	;volatile
  6520                           
  6521                           ;LE7-3.c: 18: RB5 = 0;
  6522  1381  1286               	bcf	6,5	;volatile
  6523                           
  6524                           ;LE7-3.c: 19: RB6 = 0;
  6525  1382  1306               	bcf	6,6	;volatile
  6526                           
  6527                           ;LE7-3.c: 20: RB7 = 1;
  6528  1383  1786               	bsf	6,7	;volatile
  6529                           
  6530                           ;LE7-3.c: 21: _delay((unsigned long)((1)*(4000000/4000.0)));
  6531  1384  30F9               	movlw	249
  6532  1385  00F0               	movwf	??_instCtrl
  6533  1386                     u3697:	
  6534  1386  0000               	nop
  6535  1387  0BF0               	decfsz	??_instCtrl,f
  6536  1388  2B86               	goto	u3697
  6537  1389  2B8A               	nop2	;nop
  6538  138A  0000               	nop
  6539                           
  6540                           ;LE7-3.c: 22: RB7 = 0;
  6541  138B  1283               	bcf	3,5	;RP0=0, select bank0
  6542  138C  1303               	bcf	3,6	;RP1=0, select bank0
  6543  138D  1386               	bcf	6,7	;volatile
  6544  138E  0008               	return
  6545  138F                     __end_of_instCtrl:	
  6546                           
  6547                           	psect	text22
  6548  13B6                     __ptext22:	
  6549 ;; *************** function _displayString *****************
  6550 ;; Defined at:
  6551 ;;		line 45 in file "D:\Embedded-Systems\Practical Activity #7\MPLAB\LE7-3.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  str             1    wreg     PTR const unsigned char 
  6554 ;;		 -> STR_2(13), STR_1(10), 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  str             1    3[COMMON] PTR const unsigned char 
  6557 ;;		 -> STR_2(13), STR_1(10), 
  6558 ;; Return value:  Size  Location     Type
  6559 ;;		None               void
  6560 ;; Registers used:
  6561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6567 ;;      Params:         0       0       0       0       0
  6568 ;;      Locals:         1       0       0       0       0
  6569 ;;      Temps:          1       0       0       0       0
  6570 ;;      Totals:         2       0       0       0       0
  6571 ;;Total ram usage:        2 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:    1
  6574 ;; This function calls:
  6575 ;;		_dataCtrl
  6576 ;; This function is called by:
  6577 ;;		_main
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           
  6582                           ;psect for function _displayString
  6583  13B6                     _displayString:	
  6584                           
  6585                           ;incstack = 0
  6586                           ; Regs used in _displayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6587                           ;displayString@str stored from wreg
  6588  13B6  00F3               	movwf	displayString@str
  6589  13B7                     l2255:	
  6590                           ;LE7-3.c: 47: while (*str)
  6591                           
  6592  13B7  0873               	movf	displayString@str,w
  6593  13B8  0084               	movwf	4
  6594  13B9  160A  118A  2000  160A  118A  	fcall	stringdir
  6595  13BE  3800               	iorlw	0
  6596  13BF  1903               	btfsc	3,2
  6597  13C0  0008               	return
  6598                           
  6599                           ;LE7-3.c: 48: {
  6600                           ;LE7-3.c: 49: dataCtrl(*str);
  6601  13C1  0873               	movf	displayString@str,w
  6602  13C2  0084               	movwf	4
  6603  13C3  160A  118A  2000  160A  118A  	fcall	stringdir
  6604  13C8  160A  118A  2369  160A  118A  	fcall	_dataCtrl
  6605                           
  6606                           ;LE7-3.c: 50: str++;
  6607  13CD  3001               	movlw	1
  6608  13CE  00F2               	movwf	??_displayString
  6609  13CF  0872               	movf	??_displayString,w
  6610  13D0  07F3               	addwf	displayString@str,f
  6611  13D1  2BB7               	goto	l2255
  6612  13D2                     __end_of_displayString:	
  6613                           
  6614                           	psect	text23
  6615  1369                     __ptext23:	
  6616 ;; *************** function _dataCtrl *****************
  6617 ;; Defined at:
  6618 ;;		line 25 in file "D:\Embedded-Systems\Practical Activity #7\MPLAB\LE7-3.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;  DATA            1    wreg     unsigned char 
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;  DATA            1    1[COMMON] unsigned char 
  6623 ;; Return value:  Size  Location     Type
  6624 ;;		None               void
  6625 ;; Registers used:
  6626 ;;		wreg
  6627 ;; Tracked objects:
  6628 ;;		On entry : 0/0
  6629 ;;		On exit  : 0/0
  6630 ;;		Unchanged: 0/0
  6631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6632 ;;      Params:         0       0       0       0       0
  6633 ;;      Locals:         1       0       0       0       0
  6634 ;;      Temps:          1       0       0       0       0
  6635 ;;      Totals:         2       0       0       0       0
  6636 ;;Total ram usage:        2 bytes
  6637 ;; Hardware stack levels used:    1
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		_displayString
  6642 ;;		_main
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           
  6647                           ;psect for function _dataCtrl
  6648  1369                     _dataCtrl:	
  6649                           
  6650                           ;incstack = 0
  6651                           ; Regs used in _dataCtrl: [wreg]
  6652                           ;dataCtrl@DATA stored from wreg
  6653  1369  00F1               	movwf	dataCtrl@DATA
  6654                           
  6655                           ;LE7-3.c: 27: PORTD = DATA;
  6656  136A  0871               	movf	dataCtrl@DATA,w
  6657  136B  1283               	bcf	3,5	;RP0=0, select bank0
  6658  136C  1303               	bcf	3,6	;RP1=0, select bank0
  6659  136D  0088               	movwf	8	;volatile
  6660                           
  6661                           ;LE7-3.c: 28: RB5 = 1;
  6662  136E  1686               	bsf	6,5	;volatile
  6663                           
  6664                           ;LE7-3.c: 29: RB6 = 0;
  6665  136F  1306               	bcf	6,6	;volatile
  6666                           
  6667                           ;LE7-3.c: 30: RB7 = 1;
  6668  1370  1786               	bsf	6,7	;volatile
  6669                           
  6670                           ;LE7-3.c: 31: _delay((unsigned long)((1)*(4000000/4000.0)));
  6671  1371  30F9               	movlw	249
  6672  1372  00F0               	movwf	??_dataCtrl
  6673  1373                     u3707:	
  6674  1373  0000               	nop
  6675  1374  0BF0               	decfsz	??_dataCtrl,f
  6676  1375  2B73               	goto	u3707
  6677  1376  2B77               	nop2	;nop
  6678  1377  0000               	nop
  6679                           
  6680                           ;LE7-3.c: 32: RB7 = 0;
  6681  1378  1283               	bcf	3,5	;RP0=0, select bank0
  6682  1379  1303               	bcf	3,6	;RP1=0, select bank0
  6683  137A  1386               	bcf	6,7	;volatile
  6684  137B  0008               	return
  6685  137C                     __end_of_dataCtrl:	
  6686                           
  6687                           	psect	text24
  6688  13A2                     __ptext24:	
  6689 ;; *************** function ___lwtoft *****************
  6690 ;; Defined at:
  6691 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  6692 ;; Parameters:    Size  Location     Type
  6693 ;;  c               2    8[COMMON] unsigned int 
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;		None
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  3    8[COMMON] float 
  6698 ;; Registers used:
  6699 ;;		wreg, status,2, status,0, pclath, cstack
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6705 ;;      Params:         3       0       0       0       0
  6706 ;;      Locals:         0       0       0       0       0
  6707 ;;      Temps:          1       0       0       0       0
  6708 ;;      Totals:         4       0       0       0       0
  6709 ;;Total ram usage:        4 bytes
  6710 ;; Hardware stack levels used:    1
  6711 ;; Hardware stack levels required when called:    1
  6712 ;; This function calls:
  6713 ;;		___ftpack
  6714 ;; This function is called by:
  6715 ;;		_main
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           
  6720                           ;psect for function ___lwtoft
  6721  13A2                     ___lwtoft:	
  6722                           
  6723                           ;incstack = 0
  6724                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6725  13A2  0878               	movf	___lwtoft@c,w
  6726  13A3  00F0               	movwf	___ftpack@arg
  6727  13A4  0879               	movf	___lwtoft@c+1,w
  6728  13A5  00F1               	movwf	___ftpack@arg+1
  6729  13A6  01F2               	clrf	___ftpack@arg+2
  6730  13A7  308E               	movlw	142
  6731  13A8  00FB               	movwf	??___lwtoft
  6732  13A9  087B               	movf	??___lwtoft,w
  6733  13AA  00F3               	movwf	___ftpack@exp
  6734  13AB  01F4               	clrf	___ftpack@sign
  6735  13AC  160A  118A  2637   	fcall	___ftpack
  6736  13AF  0870               	movf	?___ftpack,w
  6737  13B0  00F8               	movwf	?___lwtoft
  6738  13B1  0871               	movf	?___ftpack+1,w
  6739  13B2  00F9               	movwf	?___lwtoft+1
  6740  13B3  0872               	movf	?___ftpack+2,w
  6741  13B4  00FA               	movwf	?___lwtoft+2
  6742  13B5  0008               	return
  6743  13B6                     __end_of___lwtoft:	
  6744                           
  6745                           	psect	text25
  6746  0802                     __ptext25:	
  6747 ;; *************** function ___ftdiv *****************
  6748 ;; Defined at:
  6749 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  f2              3    0[BANK0 ] float 
  6752 ;;  f1              3    3[BANK0 ] float 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  f3              3   11[BANK0 ] float 
  6755 ;;  sign            1   15[BANK0 ] unsigned char 
  6756 ;;  exp             1   14[BANK0 ] unsigned char 
  6757 ;;  cntr            1   10[BANK0 ] unsigned char 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  3    0[BANK0 ] float 
  6760 ;; Registers used:
  6761 ;;		wreg, status,2, status,0, pclath, cstack
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6767 ;;      Params:         0       6       0       0       0
  6768 ;;      Locals:         0       6       0       0       0
  6769 ;;      Temps:          0       4       0       0       0
  6770 ;;      Totals:         0      16       0       0       0
  6771 ;;Total ram usage:       16 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:    1
  6774 ;; This function calls:
  6775 ;;		___ftpack
  6776 ;; This function is called by:
  6777 ;;		_main
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           
  6782                           ;psect for function ___ftdiv
  6783  0802                     ___ftdiv:	
  6784                           
  6785                           ;incstack = 0
  6786                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6787  0802  1283               	bcf	3,5	;RP0=0, select bank0
  6788  0803  1303               	bcf	3,6	;RP1=0, select bank0
  6789  0804  0823               	movf	___ftdiv@f1,w
  6790  0805  00A6               	movwf	??___ftdiv
  6791  0806  0824               	movf	___ftdiv@f1+1,w
  6792  0807  00A7               	movwf	??___ftdiv+1
  6793  0808  0825               	movf	___ftdiv@f1+2,w
  6794  0809  00A8               	movwf	??___ftdiv+2
  6795  080A  1003               	clrc
  6796  080B  0D27               	rlf	??___ftdiv+1,w
  6797  080C  0D28               	rlf	??___ftdiv+2,w
  6798  080D  00A9               	movwf	??___ftdiv+3
  6799  080E  0829               	movf	??___ftdiv+3,w
  6800  080F  00AE               	movwf	___ftdiv@exp
  6801  0810  08AE               	movf	___ftdiv@exp,f
  6802  0811  1D03               	skipz
  6803  0812  281A               	goto	l2467
  6804  0813  3000               	movlw	0
  6805  0814  00A0               	movwf	?___ftdiv
  6806  0815  3000               	movlw	0
  6807  0816  00A1               	movwf	?___ftdiv+1
  6808  0817  3000               	movlw	0
  6809  0818  00A2               	movwf	?___ftdiv+2
  6810  0819  0008               	return
  6811  081A                     l2467:	
  6812  081A  0820               	movf	___ftdiv@f2,w
  6813  081B  00A6               	movwf	??___ftdiv
  6814  081C  0821               	movf	___ftdiv@f2+1,w
  6815  081D  00A7               	movwf	??___ftdiv+1
  6816  081E  0822               	movf	___ftdiv@f2+2,w
  6817  081F  00A8               	movwf	??___ftdiv+2
  6818  0820  1003               	clrc
  6819  0821  0D27               	rlf	??___ftdiv+1,w
  6820  0822  0D28               	rlf	??___ftdiv+2,w
  6821  0823  00A9               	movwf	??___ftdiv+3
  6822  0824  0829               	movf	??___ftdiv+3,w
  6823  0825  00AF               	movwf	___ftdiv@sign
  6824  0826  08AF               	movf	___ftdiv@sign,f
  6825  0827  1D03               	skipz
  6826  0828  2830               	goto	l2473
  6827  0829  3000               	movlw	0
  6828  082A  00A0               	movwf	?___ftdiv
  6829  082B  3000               	movlw	0
  6830  082C  00A1               	movwf	?___ftdiv+1
  6831  082D  3000               	movlw	0
  6832  082E  00A2               	movwf	?___ftdiv+2
  6833  082F  0008               	return
  6834  0830                     l2473:	
  6835  0830  3000               	movlw	0
  6836  0831  00AB               	movwf	___ftdiv@f3
  6837  0832  3000               	movlw	0
  6838  0833  00AC               	movwf	___ftdiv@f3+1
  6839  0834  3000               	movlw	0
  6840  0835  00AD               	movwf	___ftdiv@f3+2
  6841  0836  3089               	movlw	137
  6842  0837  072F               	addwf	___ftdiv@sign,w
  6843  0838  00A6               	movwf	??___ftdiv
  6844  0839  0826               	movf	??___ftdiv,w
  6845  083A  02AE               	subwf	___ftdiv@exp,f
  6846  083B  0823               	movf	___ftdiv@f1,w
  6847  083C  00A6               	movwf	??___ftdiv
  6848  083D  0824               	movf	___ftdiv@f1+1,w
  6849  083E  00A7               	movwf	??___ftdiv+1
  6850  083F  0825               	movf	___ftdiv@f1+2,w
  6851  0840  00A8               	movwf	??___ftdiv+2
  6852  0841  3010               	movlw	16
  6853  0842                     u3575:	
  6854  0842  1003               	clrc
  6855  0843  0CA8               	rrf	??___ftdiv+2,f
  6856  0844  0CA7               	rrf	??___ftdiv+1,f
  6857  0845  0CA6               	rrf	??___ftdiv,f
  6858  0846  3EFF               	addlw	-1
  6859  0847  1D03               	skipz
  6860  0848  2842               	goto	u3575
  6861  0849  0826               	movf	??___ftdiv,w
  6862  084A  00A9               	movwf	??___ftdiv+3
  6863  084B  0829               	movf	??___ftdiv+3,w
  6864  084C  00AF               	movwf	___ftdiv@sign
  6865  084D  0820               	movf	___ftdiv@f2,w
  6866  084E  00A6               	movwf	??___ftdiv
  6867  084F  0821               	movf	___ftdiv@f2+1,w
  6868  0850  00A7               	movwf	??___ftdiv+1
  6869  0851  0822               	movf	___ftdiv@f2+2,w
  6870  0852  00A8               	movwf	??___ftdiv+2
  6871  0853  3010               	movlw	16
  6872  0854                     u3585:	
  6873  0854  1003               	clrc
  6874  0855  0CA8               	rrf	??___ftdiv+2,f
  6875  0856  0CA7               	rrf	??___ftdiv+1,f
  6876  0857  0CA6               	rrf	??___ftdiv,f
  6877  0858  3EFF               	addlw	-1
  6878  0859  1D03               	skipz
  6879  085A  2854               	goto	u3585
  6880  085B  0826               	movf	??___ftdiv,w
  6881  085C  00A9               	movwf	??___ftdiv+3
  6882  085D  0829               	movf	??___ftdiv+3,w
  6883  085E  06AF               	xorwf	___ftdiv@sign,f
  6884  085F  3080               	movlw	128
  6885  0860  00A6               	movwf	??___ftdiv
  6886  0861  0826               	movf	??___ftdiv,w
  6887  0862  05AF               	andwf	___ftdiv@sign,f
  6888  0863  17A4               	bsf	___ftdiv@f1+1,7
  6889  0864  30FF               	movlw	255
  6890  0865  05A3               	andwf	___ftdiv@f1,f
  6891  0866  30FF               	movlw	255
  6892  0867  05A4               	andwf	___ftdiv@f1+1,f
  6893  0868  3000               	movlw	0
  6894  0869  05A5               	andwf	___ftdiv@f1+2,f
  6895  086A  17A1               	bsf	___ftdiv@f2+1,7
  6896  086B  30FF               	movlw	255
  6897  086C  05A0               	andwf	___ftdiv@f2,f
  6898  086D  30FF               	movlw	255
  6899  086E  05A1               	andwf	___ftdiv@f2+1,f
  6900  086F  3000               	movlw	0
  6901  0870  05A2               	andwf	___ftdiv@f2+2,f
  6902  0871  3018               	movlw	24
  6903  0872  00A6               	movwf	??___ftdiv
  6904  0873  0826               	movf	??___ftdiv,w
  6905  0874  00AA               	movwf	___ftdiv@cntr
  6906  0875                     l2487:	
  6907  0875  3001               	movlw	1
  6908  0876                     u3595:	
  6909  0876  1003               	clrc
  6910  0877  0DAB               	rlf	___ftdiv@f3,f
  6911  0878  0DAC               	rlf	___ftdiv@f3+1,f
  6912  0879  0DAD               	rlf	___ftdiv@f3+2,f
  6913  087A  3EFF               	addlw	-1
  6914  087B  1D03               	skipz
  6915  087C  2876               	goto	u3595
  6916  087D  0822               	movf	___ftdiv@f2+2,w
  6917  087E  0225               	subwf	___ftdiv@f1+2,w
  6918  087F  1D03               	skipz
  6919  0880  2887               	goto	u3605
  6920  0881  0821               	movf	___ftdiv@f2+1,w
  6921  0882  0224               	subwf	___ftdiv@f1+1,w
  6922  0883  1D03               	skipz
  6923  0884  2887               	goto	u3605
  6924  0885  0820               	movf	___ftdiv@f2,w
  6925  0886  0223               	subwf	___ftdiv@f1,w
  6926  0887                     u3605:	
  6927  0887  1C03               	skipc
  6928  0888  2894               	goto	l2495
  6929  0889  0820               	movf	___ftdiv@f2,w
  6930  088A  02A3               	subwf	___ftdiv@f1,f
  6931  088B  0821               	movf	___ftdiv@f2+1,w
  6932  088C  1C03               	skipc
  6933  088D  0F21               	incfsz	___ftdiv@f2+1,w
  6934  088E  02A4               	subwf	___ftdiv@f1+1,f
  6935  088F  0822               	movf	___ftdiv@f2+2,w
  6936  0890  1C03               	skipc
  6937  0891  0A22               	incf	___ftdiv@f2+2,w
  6938  0892  02A5               	subwf	___ftdiv@f1+2,f
  6939  0893  142B               	bsf	___ftdiv@f3,0
  6940  0894                     l2495:	
  6941  0894  3001               	movlw	1
  6942  0895                     u3615:	
  6943  0895  1003               	clrc
  6944  0896  0DA3               	rlf	___ftdiv@f1,f
  6945  0897  0DA4               	rlf	___ftdiv@f1+1,f
  6946  0898  0DA5               	rlf	___ftdiv@f1+2,f
  6947  0899  3EFF               	addlw	-1
  6948  089A  1D03               	skipz
  6949  089B  2895               	goto	u3615
  6950  089C  3001               	movlw	1
  6951  089D  02AA               	subwf	___ftdiv@cntr,f
  6952  089E  1D03               	btfss	3,2
  6953  089F  2875               	goto	l2487
  6954  08A0  082B               	movf	___ftdiv@f3,w
  6955  08A1  00F0               	movwf	___ftpack@arg
  6956  08A2  082C               	movf	___ftdiv@f3+1,w
  6957  08A3  00F1               	movwf	___ftpack@arg+1
  6958  08A4  082D               	movf	___ftdiv@f3+2,w
  6959  08A5  00F2               	movwf	___ftpack@arg+2
  6960  08A6  082E               	movf	___ftdiv@exp,w
  6961  08A7  00A6               	movwf	??___ftdiv
  6962  08A8  0826               	movf	??___ftdiv,w
  6963  08A9  00F3               	movwf	___ftpack@exp
  6964  08AA  082F               	movf	___ftdiv@sign,w
  6965  08AB  00A7               	movwf	??___ftdiv+1
  6966  08AC  0827               	movf	??___ftdiv+1,w
  6967  08AD  00F4               	movwf	___ftpack@sign
  6968  08AE  160A  118A  2637   	fcall	___ftpack
  6969  08B1  0870               	movf	?___ftpack,w
  6970  08B2  1283               	bcf	3,5	;RP0=0, select bank0
  6971  08B3  1303               	bcf	3,6	;RP1=0, select bank0
  6972  08B4  00A0               	movwf	?___ftdiv
  6973  08B5  0871               	movf	?___ftpack+1,w
  6974  08B6  00A1               	movwf	?___ftdiv+1
  6975  08B7  0872               	movf	?___ftpack+2,w
  6976  08B8  00A2               	movwf	?___ftdiv+2
  6977  08B9  0008               	return
  6978  08BA                     __end_of___ftdiv:	
  6979                           
  6980                           	psect	text26
  6981  1637                     __ptext26:	
  6982 ;; *************** function ___ftpack *****************
  6983 ;; Defined at:
  6984 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  arg             3    0[COMMON] unsigned um
  6987 ;;  exp             1    3[COMMON] unsigned char 
  6988 ;;  sign            1    4[COMMON] unsigned char 
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  3    0[COMMON] float 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7000 ;;      Params:         5       0       0       0       0
  7001 ;;      Locals:         0       0       0       0       0
  7002 ;;      Temps:          3       0       0       0       0
  7003 ;;      Totals:         8       0       0       0       0
  7004 ;;Total ram usage:        8 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		___ftadd
  7010 ;;		___ftdiv
  7011 ;;		___ftmul
  7012 ;;		___lltoft
  7013 ;;		___lwtoft
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           
  7018                           ;psect for function ___ftpack
  7019  1637                     ___ftpack:	
  7020                           
  7021                           ;incstack = 0
  7022                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7023  1637  0873               	movf	___ftpack@exp,w
  7024  1638  1903               	btfsc	3,2
  7025  1639  2E3F               	goto	l1651
  7026  163A  0872               	movf	___ftpack@arg+2,w
  7027  163B  0471               	iorwf	___ftpack@arg+1,w
  7028  163C  0470               	iorwf	___ftpack@arg,w
  7029  163D  1D03               	skipz
  7030  163E  2E52               	goto	l1657
  7031  163F                     l1651:	
  7032  163F  3000               	movlw	0
  7033  1640  00F0               	movwf	?___ftpack
  7034  1641  3000               	movlw	0
  7035  1642  00F1               	movwf	?___ftpack+1
  7036  1643  3000               	movlw	0
  7037  1644  00F2               	movwf	?___ftpack+2
  7038  1645  0008               	return
  7039  1646                     l1655:	
  7040  1646  3001               	movlw	1
  7041  1647  00F5               	movwf	??___ftpack
  7042  1648  0875               	movf	??___ftpack,w
  7043  1649  07F3               	addwf	___ftpack@exp,f
  7044  164A  3001               	movlw	1
  7045  164B                     u1855:	
  7046  164B  1003               	clrc
  7047  164C  0CF2               	rrf	___ftpack@arg+2,f
  7048  164D  0CF1               	rrf	___ftpack@arg+1,f
  7049  164E  0CF0               	rrf	___ftpack@arg,f
  7050  164F  3EFF               	addlw	-1
  7051  1650  1D03               	skipz
  7052  1651  2E4B               	goto	u1855
  7053  1652                     l1657:	
  7054  1652  30FE               	movlw	254
  7055  1653  0572               	andwf	___ftpack@arg+2,w
  7056  1654  1903               	btfsc	3,2
  7057  1655  2E6D               	goto	l430
  7058  1656  2E46               	goto	l1655
  7059  1657                     l1659:	
  7060  1657  3001               	movlw	1
  7061  1658  00F5               	movwf	??___ftpack
  7062  1659  0875               	movf	??___ftpack,w
  7063  165A  07F3               	addwf	___ftpack@exp,f
  7064  165B  3001               	movlw	1
  7065  165C  07F0               	addwf	___ftpack@arg,f
  7066  165D  3000               	movlw	0
  7067  165E  1803               	skipnc
  7068  165F  3001               	movlw	1
  7069  1660  07F1               	addwf	___ftpack@arg+1,f
  7070  1661  3000               	movlw	0
  7071  1662  1803               	skipnc
  7072  1663  3001               	movlw	1
  7073  1664  07F2               	addwf	___ftpack@arg+2,f
  7074  1665  3001               	movlw	1
  7075  1666                     u1875:	
  7076  1666  1003               	clrc
  7077  1667  0CF2               	rrf	___ftpack@arg+2,f
  7078  1668  0CF1               	rrf	___ftpack@arg+1,f
  7079  1669  0CF0               	rrf	___ftpack@arg,f
  7080  166A  3EFF               	addlw	-1
  7081  166B  1D03               	skipz
  7082  166C  2E66               	goto	u1875
  7083  166D                     l430:	
  7084  166D  30FF               	movlw	255
  7085  166E  0572               	andwf	___ftpack@arg+2,w
  7086  166F  1903               	btfsc	3,2
  7087  1670  2E7C               	goto	l1667
  7088  1671  2E57               	goto	l1659
  7089  1672                     l1665:	
  7090  1672  3001               	movlw	1
  7091  1673  02F3               	subwf	___ftpack@exp,f
  7092  1674  3001               	movlw	1
  7093  1675                     u1895:	
  7094  1675  1003               	clrc
  7095  1676  0DF0               	rlf	___ftpack@arg,f
  7096  1677  0DF1               	rlf	___ftpack@arg+1,f
  7097  1678  0DF2               	rlf	___ftpack@arg+2,f
  7098  1679  3EFF               	addlw	-1
  7099  167A  1D03               	skipz
  7100  167B  2E75               	goto	u1895
  7101  167C                     l1667:	
  7102  167C  1FF1               	btfss	___ftpack@arg+1,7
  7103  167D  2E72               	goto	l1665
  7104  167E  1873               	btfsc	___ftpack@exp,0
  7105  167F  2E86               	goto	l436
  7106  1680  30FF               	movlw	255
  7107  1681  05F0               	andwf	___ftpack@arg,f
  7108  1682  307F               	movlw	127
  7109  1683  05F1               	andwf	___ftpack@arg+1,f
  7110  1684  30FF               	movlw	255
  7111  1685  05F2               	andwf	___ftpack@arg+2,f
  7112  1686                     l436:	
  7113  1686  1003               	clrc
  7114  1687  0CF3               	rrf	___ftpack@exp,f
  7115  1688  0873               	movf	___ftpack@exp,w
  7116  1689  00F5               	movwf	??___ftpack
  7117  168A  01F6               	clrf	??___ftpack+1
  7118  168B  01F7               	clrf	??___ftpack+2
  7119  168C  3010               	movlw	16
  7120  168D                     u1925:	
  7121  168D  1003               	clrc
  7122  168E  0DF5               	rlf	??___ftpack,f
  7123  168F  0DF6               	rlf	??___ftpack+1,f
  7124  1690  0DF7               	rlf	??___ftpack+2,f
  7125  1691  3EFF               	addlw	-1
  7126  1692  1D03               	skipz
  7127  1693  2E8D               	goto	u1925
  7128  1694  0875               	movf	??___ftpack,w
  7129  1695  04F0               	iorwf	___ftpack@arg,f
  7130  1696  0876               	movf	??___ftpack+1,w
  7131  1697  04F1               	iorwf	___ftpack@arg+1,f
  7132  1698  0877               	movf	??___ftpack+2,w
  7133  1699  04F2               	iorwf	___ftpack@arg+2,f
  7134  169A  0874               	movf	___ftpack@sign,w
  7135  169B  1903               	btfsc	3,2
  7136  169C  0008               	return
  7137  169D  17F2               	bsf	___ftpack@arg+2,7
  7138  169E  0008               	return
  7139  169F                     __end_of___ftpack:	
  7140                           
  7141                           	psect	text27
  7142  133A                     __ptext27:	
  7143 ;; *************** function _I2C_Stop *****************
  7144 ;; Defined at:
  7145 ;;		line 80 in file "D:\Embedded-Systems\Practical Activity #7\MPLAB\LE7-3.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;		None
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;		None
  7150 ;; Return value:  Size  Location     Type
  7151 ;;		None               void
  7152 ;; Registers used:
  7153 ;;		wreg, status,2, status,0, pclath, cstack
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7159 ;;      Params:         0       0       0       0       0
  7160 ;;      Locals:         0       0       0       0       0
  7161 ;;      Temps:          0       0       0       0       0
  7162 ;;      Totals:         0       0       0       0       0
  7163 ;;Total ram usage:        0 bytes
  7164 ;; Hardware stack levels used:    1
  7165 ;; Hardware stack levels required when called:    1
  7166 ;; This function calls:
  7167 ;;		_I2C_Wait
  7168 ;; This function is called by:
  7169 ;;		_main
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           
  7174                           ;psect for function _I2C_Stop
  7175  133A                     _I2C_Stop:	
  7176                           
  7177                           ;LE7-3.c: 83: I2C_Wait();
  7178                           
  7179                           ;incstack = 0
  7180                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  7181  133A  160A  118A  2341   	fcall	_I2C_Wait
  7182                           
  7183                           ;LE7-3.c: 85: PEN = 1;
  7184  133D  1683               	bsf	3,5	;RP0=1, select bank1
  7185  133E  1303               	bcf	3,6	;RP1=0, select bank1
  7186  133F  1511               	bsf	17,2	;volatile
  7187  1340  0008               	return
  7188  1341                     __end_of_I2C_Stop:	
  7189                           
  7190                           	psect	text28
  7191  1333                     __ptext28:	
  7192 ;; *************** function _I2C_Start *****************
  7193 ;; Defined at:
  7194 ;;		line 72 in file "D:\Embedded-Systems\Practical Activity #7\MPLAB\LE7-3.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;		None
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;		None
  7199 ;; Return value:  Size  Location     Type
  7200 ;;		None               void
  7201 ;; Registers used:
  7202 ;;		wreg, status,2, status,0, pclath, cstack
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7208 ;;      Params:         0       0       0       0       0
  7209 ;;      Locals:         0       0       0       0       0
  7210 ;;      Temps:          0       0       0       0       0
  7211 ;;      Totals:         0       0       0       0       0
  7212 ;;Total ram usage:        0 bytes
  7213 ;; Hardware stack levels used:    1
  7214 ;; Hardware stack levels required when called:    1
  7215 ;; This function calls:
  7216 ;;		_I2C_Wait
  7217 ;; This function is called by:
  7218 ;;		_main
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           
  7222                           
  7223                           ;psect for function _I2C_Start
  7224  1333                     _I2C_Start:	
  7225                           
  7226                           ;LE7-3.c: 75: I2C_Wait();
  7227                           
  7228                           ;incstack = 0
  7229                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  7230  1333  160A  118A  2341   	fcall	_I2C_Wait
  7231                           
  7232                           ;LE7-3.c: 77: SEN = 1;
  7233  1336  1683               	bsf	3,5	;RP0=1, select bank1
  7234  1337  1303               	bcf	3,6	;RP1=0, select bank1
  7235  1338  1411               	bsf	17,0	;volatile
  7236  1339  0008               	return
  7237  133A                     __end_of_I2C_Start:	
  7238                           
  7239                           	psect	text29
  7240  1351                     __ptext29:	
  7241 ;; *************** function _I2C_Send *****************
  7242 ;; Defined at:
  7243 ;;		line 96 in file "D:\Embedded-Systems\Practical Activity #7\MPLAB\LE7-3.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;  data            1    wreg     unsigned char 
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  data            1    0[COMMON] unsigned char 
  7248 ;; Return value:  Size  Location     Type
  7249 ;;		None               void
  7250 ;; Registers used:
  7251 ;;		wreg, status,2, status,0, pclath, cstack
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7257 ;;      Params:         0       0       0       0       0
  7258 ;;      Locals:         1       0       0       0       0
  7259 ;;      Temps:          0       0       0       0       0
  7260 ;;      Totals:         1       0       0       0       0
  7261 ;;Total ram usage:        1 bytes
  7262 ;; Hardware stack levels used:    1
  7263 ;; Hardware stack levels required when called:    1
  7264 ;; This function calls:
  7265 ;;		_I2C_Wait
  7266 ;; This function is called by:
  7267 ;;		_main
  7268 ;; This function uses a non-reentrant model
  7269 ;;
  7270                           
  7271                           
  7272                           ;psect for function _I2C_Send
  7273  1351                     _I2C_Send:	
  7274                           
  7275                           ;incstack = 0
  7276                           ; Regs used in _I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  7277                           ;I2C_Send@data stored from wreg
  7278  1351  00F0               	movwf	I2C_Send@data
  7279                           
  7280                           ;LE7-3.c: 99: I2C_Wait();
  7281  1352  160A  118A  2341   	fcall	_I2C_Wait
  7282                           
  7283                           ;LE7-3.c: 101: SSPBUF = data;
  7284  1355  0870               	movf	I2C_Send@data,w
  7285  1356  1283               	bcf	3,5	;RP0=0, select bank0
  7286  1357  1303               	bcf	3,6	;RP1=0, select bank0
  7287  1358  0093               	movwf	19	;volatile
  7288  1359  0008               	return
  7289  135A                     __end_of_I2C_Send:	
  7290                           
  7291                           	psect	text30
  7292  132C                     __ptext30:	
  7293 ;; *************** function _I2C_RepeatedStart *****************
  7294 ;; Defined at:
  7295 ;;		line 88 in file "D:\Embedded-Systems\Practical Activity #7\MPLAB\LE7-3.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;		None
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;		None
  7300 ;; Return value:  Size  Location     Type
  7301 ;;		None               void
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0, pclath, cstack
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7309 ;;      Params:         0       0       0       0       0
  7310 ;;      Locals:         0       0       0       0       0
  7311 ;;      Temps:          0       0       0       0       0
  7312 ;;      Totals:         0       0       0       0       0
  7313 ;;Total ram usage:        0 bytes
  7314 ;; Hardware stack levels used:    1
  7315 ;; Hardware stack levels required when called:    1
  7316 ;; This function calls:
  7317 ;;		_I2C_Wait
  7318 ;; This function is called by:
  7319 ;;		_main
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           
  7324                           ;psect for function _I2C_RepeatedStart
  7325  132C                     _I2C_RepeatedStart:	
  7326                           
  7327                           ;LE7-3.c: 91: I2C_Wait();
  7328                           
  7329                           ;incstack = 0
  7330                           ; Regs used in _I2C_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  7331  132C  160A  118A  2341   	fcall	_I2C_Wait
  7332                           
  7333                           ;LE7-3.c: 93: RSEN = 1;
  7334  132F  1683               	bsf	3,5	;RP0=1, select bank1
  7335  1330  1303               	bcf	3,6	;RP1=0, select bank1
  7336  1331  1491               	bsf	17,1	;volatile
  7337  1332  0008               	return
  7338  1333                     __end_of_I2C_RepeatedStart:	
  7339                           
  7340                           	psect	text31
  7341  1435                     __ptext31:	
  7342 ;; *************** function _I2C_Receive *****************
  7343 ;; Defined at:
  7344 ;;		line 104 in file "D:\Embedded-Systems\Practical Activity #7\MPLAB\LE7-3.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  ack             1    wreg     unsigned char 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;  ack             1    1[COMMON] unsigned char 
  7349 ;;  temp            1    2[COMMON] unsigned char 
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  1    wreg      unsigned char 
  7352 ;; Registers used:
  7353 ;;		wreg, status,2, status,0, pclath, cstack
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7359 ;;      Params:         0       0       0       0       0
  7360 ;;      Locals:         2       0       0       0       0
  7361 ;;      Temps:          1       0       0       0       0
  7362 ;;      Totals:         3       0       0       0       0
  7363 ;;Total ram usage:        3 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    1
  7366 ;; This function calls:
  7367 ;;		_I2C_Wait
  7368 ;; This function is called by:
  7369 ;;		_main
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           
  7374                           ;psect for function _I2C_Receive
  7375  1435                     _I2C_Receive:	
  7376                           
  7377                           ;incstack = 0
  7378                           ; Regs used in _I2C_Receive: [wreg+status,2+status,0+pclath+cstack]
  7379                           ;I2C_Receive@ack stored from wreg
  7380  1435  00F1               	movwf	I2C_Receive@ack
  7381                           
  7382                           ;LE7-3.c: 106: unsigned char temp;
  7383                           ;LE7-3.c: 107: I2C_Wait();
  7384  1436  160A  118A  2341  160A  118A  	fcall	_I2C_Wait
  7385                           
  7386                           ;LE7-3.c: 108: RCEN = 1;
  7387  143B  1683               	bsf	3,5	;RP0=1, select bank1
  7388  143C  1303               	bcf	3,6	;RP1=0, select bank1
  7389  143D  1591               	bsf	17,3	;volatile
  7390                           
  7391                           ;LE7-3.c: 109: I2C_Wait();
  7392  143E  160A  118A  2341  160A  118A  	fcall	_I2C_Wait
  7393                           
  7394                           ;LE7-3.c: 110: temp = SSPBUF;
  7395  1443  1283               	bcf	3,5	;RP0=0, select bank0
  7396  1444  1303               	bcf	3,6	;RP1=0, select bank0
  7397  1445  0813               	movf	19,w	;volatile
  7398  1446  00F0               	movwf	??_I2C_Receive
  7399  1447  0870               	movf	??_I2C_Receive,w
  7400  1448  00F2               	movwf	I2C_Receive@temp
  7401                           
  7402                           ;LE7-3.c: 111: I2C_Wait();
  7403  1449  160A  118A  2341  160A  118A  	fcall	_I2C_Wait
  7404                           
  7405                           ;LE7-3.c: 112: ACKDT = (ack) ? 0 : 1;
  7406  144E  08F1               	movf	I2C_Receive@ack,f
  7407  144F  1D03               	btfss	3,2
  7408  1450  2C55               	goto	u3230
  7409  1451  1683               	bsf	3,5	;RP0=1, select bank1
  7410  1452  1303               	bcf	3,6	;RP1=0, select bank1
  7411  1453  1691               	bsf	17,5	;volatile
  7412  1454  2C58               	goto	l2291
  7413  1455                     u3230:	
  7414  1455  1683               	bsf	3,5	;RP0=1, select bank1
  7415  1456  1303               	bcf	3,6	;RP1=0, select bank1
  7416  1457  1291               	bcf	17,5	;volatile
  7417  1458                     l2291:	
  7418                           
  7419                           ;LE7-3.c: 113: ACKEN = 1;
  7420  1458  1611               	bsf	17,4	;volatile
  7421                           
  7422                           ;LE7-3.c: 114: return temp;
  7423  1459  0872               	movf	I2C_Receive@temp,w
  7424  145A  0008               	return
  7425  145B                     __end_of_I2C_Receive:	
  7426                           
  7427                           	psect	text32
  7428  1341                     __ptext32:	
  7429 ;; *************** function _I2C_Wait *****************
  7430 ;; Defined at:
  7431 ;;		line 65 in file "D:\Embedded-Systems\Practical Activity #7\MPLAB\LE7-3.c"
  7432 ;; Parameters:    Size  Location     Type
  7433 ;;		None
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;		None
  7436 ;; Return value:  Size  Location     Type
  7437 ;;		None               void
  7438 ;; Registers used:
  7439 ;;		wreg, status,2
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7445 ;;      Params:         0       0       0       0       0
  7446 ;;      Locals:         0       0       0       0       0
  7447 ;;      Temps:          0       0       0       0       0
  7448 ;;      Totals:         0       0       0       0       0
  7449 ;;Total ram usage:        0 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; This function calls:
  7452 ;;		Nothing
  7453 ;; This function is called by:
  7454 ;;		_I2C_Start
  7455 ;;		_I2C_Stop
  7456 ;;		_I2C_RepeatedStart
  7457 ;;		_I2C_Send
  7458 ;;		_I2C_Receive
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           
  7463                           ;psect for function _I2C_Wait
  7464  1341                     _I2C_Wait:	
  7465  1341                     l1919:	
  7466                           ;LE7-3.c: 69: ;
  7467                           
  7468                           ;LE7-3.c: 68: while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04))
  7469                           
  7470                           ;incstack = 0
  7471                           ; Regs used in _I2C_Wait: [wreg+status,2]
  7472                           
  7473  1341  1683               	bsf	3,5	;RP0=1, select bank1
  7474  1342  1303               	bcf	3,6	;RP1=0, select bank1
  7475  1343  0811               	movf	17,w	;volatile
  7476  1344  391F               	andlw	31
  7477  1345  1903               	btfsc	3,2
  7478  1346  1914               	btfsc	20,2	;volatile
  7479  1347  2B41               	goto	l1919
  7480  1348  0008               	return
  7481  1349                     __end_of_I2C_Wait:	
  7482  007E                     btemp	set	126	;btemp
  7483  007E                     wtemp	set	126
  7484  007E                     wtemp0	set	126
  7485  0080                     wtemp1	set	128
  7486  0082                     wtemp2	set	130
  7487  0084                     wtemp3	set	132
  7488  0086                     wtemp4	set	134
  7489  0088                     wtemp5	set	136
  7490  007F                     wtemp6	set	127
  7491  007E                     ttemp	set	126
  7492  007E                     ttemp0	set	126
  7493  0081                     ttemp1	set	129
  7494  0084                     ttemp2	set	132
  7495  0087                     ttemp3	set	135
  7496  007F                     ttemp4	set	127
  7497  007E                     ltemp	set	126
  7498  007E                     ltemp0	set	126
  7499  0082                     ltemp1	set	130
  7500  0086                     ltemp2	set	134
  7501  0080                     ltemp3	set	128


Data Sizes:
    Strings     28
    Constant    118
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     56      56
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> main@temperatureStr(BANK1[4]), main@humidityStr(BANK1[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S133$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    displayString@str	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    _scale->___bmul
    _fround->___bmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___lltoft
    _initLCD->_instCtrl
    _displayString->_dataCtrl
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___ftdiv
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   44940
                                             77 BANK0      2     2      0
                                             34 BANK1     22    22      0
                        _I2C_Receive
                  _I2C_RepeatedStart
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                           _dataCtrl
                      _displayString
                            _initLCD
                    _init_I2C_Master
                           _instCtrl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    46      4   33518
                                             67 BANK0     10     6      4
                                              0 BANK1     34    34      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               12     9      3    7405
                                             32 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    16      3    7207
                                             32 BANK0     16    13      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3746
                                             16 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             12 COMMON     1     1      0
                                              4 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1170
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1846
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             41 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3139
                                             61 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2988
                                             48 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     560
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (1) _init_I2C_Master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      22
                                              2 COMMON     1     1      0
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _instCtrl                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _displayString                                        2     2      0     121
                                              2 COMMON     2     2      0
                           _dataCtrl
 ---------------------------------------------------------------------------------
 (2) _dataCtrl                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1852
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2216
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1724
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Send                                             1     1      0      22
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_RepeatedStart                                    0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Receive                                          3     3      0      45
                                              0 COMMON     3     3      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Receive
     _I2C_Wait
   _I2C_RepeatedStart
     _I2C_Wait
   _I2C_Send
     _I2C_Wait
   _I2C_Start
     _I2C_Wait
   _I2C_Stop
     _I2C_Wait
   ___ftadd
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
   ___ftdiv
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _dataCtrl
   _displayString
     _dataCtrl
   _initLCD
     _instCtrl
   _init_I2C_Master
   _instCtrl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     38      38       7       70.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Apr 27 22:07:33 2025

                         pc 0002              ___bmul@product 0025          __size_of_I2C_Start 0007  
               __CFG_CP$OFF 0000                          l84 0B1B                ___awdiv@sign 0021  
                        fsr 0004         ___wmul@multiplicand 0072                ___ftadd@exp1 005C  
              ___ftadd@exp2 005B                ___ftadd@sign 005A                         l126 028C  
                       l151 05C0                         l410 0AA0                         l252 13F8  
                       l430 166D                         l436 1686                         l459 0962  
                       l485 0036                         _RB5 0035                         _RB6 0036  
                       _RB7 0037                         _PEN 048A                __CFG_CPD$OFF 0000  
                       _SEN 0488                         fsr0 0004                         indf 0000  
              ___awmod@sign 0076        __size_of_I2C_Receive 0026                __CFG_FOSC$XT 0000  
               _sprintf$146 00A3                 _sprintf$572 00A0                __CFG_LVP$OFF 0000  
              ___ftdiv@cntr 002A                ___ftdiv@sign 002F              ?_displayString 0070  
                      l2013 0077                        l2005 0057                        l2031 00B0  
                      l2023 0093                        l2113 156D                        l2033 00BB  
                      l2025 00A3                        l2203 162E                        l2051 0A03  
                      l2035 00BE                        l2109 1546                        l2213 148E  
                      l2061 0A4A                        l2045 09E4                        l2215 149E  
                      l2223 14C9                        l2231 145F                        l2303 0289  
                      l2145 16B9                        l2233 1471                        l2171 1708  
                      l2163 16EB                        l2219 14BC                        l2323 02F9  
                      l2307 028E                        l2173 1713                        l2165 16FB  
                      l2085 0ADE                        l2077 0AC1                        l1701 1588  
                      l2421 0661                        l2309 02A4                        l2255 13B7  
                      l2175 1716                        l2191 15F9                        l2095 13F0  
                      l2087 0AE9                        l2079 0AD1                        l2415 0647  
                      l2351 03F5                        l2089 0AEC                        l2441 07B5  
                      l2409 062E                        l2291 1458                        l1651 163F  
                      l1811 0928                        l2179 1724                        l1707 1593  
                      l2427 0694                        l2363 0479                        l2355 043B  
                      l2347 03D8                        l2339 036B                        l1813 0934  
                      l1805 0913                        l2189 15E9                        l1733 15D2  
                      l1725 15BF                        l1717 159B                        l1655 1646  
                      l1823 0952                        l1815 0939                        l2199 1621  
                      l1719 15A9                        l2447 07CE                        l2383 0549  
                      l2367 0490                        l2455 026E                        l1665 1672  
                      l1657 1652                        l2473 0830                        l1833 0986  
                      l1825 095E                        l1817 093D                        l1729 15CA  
                      l1745 14DC                        l2449 07D3                        l2457 07F7  
                      l1667 167C                        l1659 1657                        l2467 081A  
                      l1843 09A9                        l1771 1518                        l1763 1505  
                      l1683 1399                        l2379 04DA                        l1829 0974  
                      l1757 14E9                        l1749 14E3                        l1853 1745  
                      l1941 0231                        l1933 01A7                        l2397 059F  
                      l2389 054F                        l1919 1341                        l2495 0894  
                      l2487 0875                        l1783 08E3                        l1759 14F7  
                      l1767 1510                        l1679 1393                        l1871 179A  
                      l1793 08F9                        l1787 08EA                        l1883 17C2  
                      l1875 17AA                        l1859 175B                        l1963 0E95  
                      l1981 0FE1                        l1957 0E27                        l1991 001E  
                      l1887 17D2                        l1975 0F73                        l1967 0EB4  
                      STR_1 1089                        STR_2 107C                        STR_3 1093  
                      STR_4 1093                        STR_5 1096                        u2015 15AA  
                      u2025 15B6                        u2035 15C0                        u2115 14FD  
                      u2125 1506                        u3015 16EC                        u2305 093E  
                      u3105 15FB                        u3115 1610                        u2245 0914  
                      u3045 170A                        u3125 1622                        u3205 1464  
                      u3230 1455                        u2335 0953                        u2095 14EC  
                      u2415 1767                        u2505 17D3                        u2425 1779  
                      u2275 0929                        u3155 1492                        u2515 17DB  
                      u3085 15ED                        u3405 0554                        u3175 14AC  
                      u2455 17AB                        u3415 0591                        u3335 0400  
                      u3185 14BD                        u2705 0094                        u2465 17B3  
                      u3505 077B                        u3345 0446                        u1925 168D  
                      u3605 0887                        u2645 0059                        u3445 05D0  
                      u1855 164B                        u3615 0895                        u2735 00B2  
                      u2655 006A                        u3375 0477                        u3295 0313  
                      u2921 1539                        u2825 0AC2                        u2665 0078  
                      u3465 0650                        u2922 153A                        u1875 1666  
                      u3707 1373                        u2923 153F                        u3475 065D  
                      u3635 0B8C                        u2924 1540                        u2941 1560  
                      u3645 0C8B                        u2942 1561                        u1895 1675  
                      u3575 0842                        u2943 1566                        u2855 0AE0  
                      u2775 0A4C                        u3495 0709                        u2944 1567  
                      u3585 0854                        u2785 0A7B                        u3657 0B80  
                      u3595 0876                        u1995 159E                        u3667 0C7F  
                      _RCEN 048B                        u2885 13F9                        u3677 0D5B  
                      u3687 1413                        u2895 1400                        u3697 1386  
                      u2985 16C0                        _RSEN 0489                __CFG_WRT$OFF 0000  
                      _main 0AF5                ___ftpack@arg 0070                ___ftpack@exp 0073  
          __end_of_I2C_Send 135A                        btemp 007E            __end_of_I2C_Wait 1349  
          __end_of_I2C_Stop 1341               __CFG_BOREN$ON 0000                        ltemp 007E  
                      start 0000                        ttemp 007E                        wtemp 007E  
         ___bmul@multiplier 0026                ___ftmul@cntr 003E                ___ftmul@sign 003F  
              ___fttol@exp1 0056                ___fttol@lval 0052                       ?_main 0070  
                     _ACKEN 048C                       _ACKDT 048D             __end_of___awdiv 15D9  
           __end_of___ftadd 09C3               __CFG_WDTE$OFF 0000             __end_of___awmod 151F  
           __end_of___ftdiv 08BA             __end_of___ftneg 1351             __end_of___lldiv 1637  
           __end_of___ftmul 1800             ___awdiv@divisor 0077             __end_of___llmod 14D2  
           __end_of___ftsub 13EE             __end_of___fttol 172D             ___awdiv@counter 0020  
                     _PORTD 0008                       _TRISB 0086                       _TRISD 0088  
             __CFG_PWRTE$ON 0000                ___lltoft@exp 007D                main@humidity 00C2  
           __end_of_initLCD 1435             __end_of_dpowers 102E                       _scale 0D61  
             ___ftpack@sign 0074          main@temperatureStr 00D4           __end_of_I2C_Start 133A  
                     pclath 000A                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
           __end_of_sprintf 07FC             __initialization 07FC                __end_of_main 0D61  
                    ??_main 006D               ___fttol@sign1 0051        __size_of__tdiv_to_l_ 00C3  
           ??_displayString 0072            ___llmod@dividend 0074                      ?_scale 0040  
          ___awdiv@dividend 0079            __end_of___ftpack 169F            __end_of___lltoft 1486  
          __end_of___lwtoft 13B6                      _SSPADD 0093                      _TRISC3 043B  
                    _TRISC4 043C                      _SSPCON 0014                      _SSPBUF 0013  
          __end_of_dataCtrl 137C            __end_of__powers_ 107C                      ___bmul 138F  
                    ___ftge 151F                      ___wmul 13EE                   ??___awdiv 007B  
                 ??___ftadd 0056                   ??___awmod 0074                   ??___ftdiv 0026  
                 ??___ftneg 0073                   ??___lldiv 0078                   ??___ftmul 0036  
                 ??___llmod 0078                   ??___ftsub 007E                   ??___fttol 004D  
  __size_of_init_I2C_Master 000F                      _fround 00C7            ___awdiv@quotient 0022  
           ___awmod@divisor 0070            __end_of_instCtrl 138F             ___awmod@counter 0075  
     ___ftmul@f3_as_product 003B                   ??_initLCD 0072                   ?_I2C_Send 0070  
                 ?_I2C_Wait 0070                   ?_I2C_Stop 0070                   ??_sprintf 0067  
   __end_of__initialization 07FC                  ___ftadd@f1 0050                  ___ftadd@f2 0053  
                ___ftge@ff1 0070                  ___ftge@ff2 0073                  ___ftdiv@f1 0023  
                ___ftdiv@f2 0020                  ___ftdiv@f3 002B                  ___ftneg@f1 0070  
       ___bmul@multiplicand 0024                  ___ftmul@f1 0030                  ___ftmul@f2 0033  
                ___ftsub@f1 0060                  ___ftsub@f2 005D                  ___fttol@f1 0049  
            __pcstackCOMMON 0070                  ___lltoft@c 0078               __end_of_scale 1000  
                ___lwtoft@c 0078                  __div_to_l_ 09C3                  ??_I2C_Send 0070  
                ??_I2C_Wait 0070                  ??_I2C_Stop 0070             __div_to_l_@exp1 0025  
           __div_to_l_@cntr 0024                sprintf@integ 00B8                     ??_scale 0043  
           __div_to_l_@quot 0020               __div_to_l_@f1 0070               __div_to_l_@f2 0073  
                __pmaintext 0AF5                     ?___bmul 0024                     ?___ftge 0070  
                   ?___wmul 0070                     ?_fround 0040                   ?___ftpack 0070  
             ??_I2C_Receive 0070                I2C_Send@data 0070                   ?___lltoft 0078  
                 ?___lwtoft 0078                   ?_dataCtrl 0070           ??_init_I2C_Master 0070  
                   _SSPCON2 0091                     _SSPSTAT 0094                  __stringtab 1000  
                 ?_instCtrl 0070                   _I2C_Start 1333              I2C_Receive@ack 0071  
         __end_of__npowers_ 1055             __size_of___bmul 0013             __size_of___ftge 005D  
                   ___awdiv 157C                     ___ftadd 08BA                     ___awmod 14D2  
                   ___ftdiv 0802                     ___ftneg 1349                     ___lldiv 15D9  
           __size_of___wmul 0023                     ___ftmul 172D                     ___llmod 1486  
                   ___ftsub 13D2                     ___fttol 169F                  _fround$570 0049  
                _fround$569 004C                  ??___ftpack 0075             __size_of_fround 019C  
                ??___lltoft 007C                     __ptext1 0263                     __ptext2 0D61  
                   __ptext3 00C7                     __ptext4 172D                     __ptext5 138F  
                   __ptext6 14D2                     __ptext7 157C                     __ptext8 0004  
                   __ptext9 09C3                  ??___lwtoft 007B                     _initLCD 1411  
               ?__div_to_l_ 0070                     _dpowers 1006                  ??_dataCtrl 0070  
          ___awmod@dividend 0072         __end_of_I2C_Receive 145B                     _sprintf 0263  
      end_of_initialization 07FC                  ??_instCtrl 0070                  ?_I2C_Start 0070  
           ___lldiv@divisor 0070             ___lldiv@counter 007D              __tdiv_to_l_@f1 0070  
            __tdiv_to_l_@f2 0073               ??__tdiv_to_l_ 0076           __size_of_I2C_Send 0009  
         __size_of_I2C_Wait 0008           __size_of_I2C_Stop 0007                instCtrl@INST 0071  
     __end_of_displayString 13D2                 ___ftdiv@exp 002E         __size_of__div_to_l_ 0132  
               ___ftmul@exp 003A              __end_of___bmul 13A2              __end_of___ftge 157C  
            __end_of___wmul 1411                 _I2C_Receive 1435              __end_of_fround 0263  
       start_initialization 07FC         __end_of__tdiv_to_l_ 00C7                dataCtrl@DATA 0071  
           ___llmod@divisor 0070                 ??_I2C_Start 0070             ___llmod@counter 0079  
                  ??___bmul 007C                    ??___ftge 0076                    ??___wmul 0074  
           _init_I2C_Master 135A               sprintf@vd_148 00AC           _I2C_RepeatedStart 132C  
                  ??_fround 0043          ?_I2C_RepeatedStart 0070                  fround@prec 004F  
         __size_of___ftpack 0068           __size_of___lltoft 002B                   ___latbits 0002  
         __size_of___lwtoft 0014               __pcstackBANK0 0020               __pcstackBANK1 00A0  
       ??_I2C_RepeatedStart 0070         __end_of__stringdata 1098           __size_of_dataCtrl 0013  
               sprintf@_val 00B4                 sprintf@flag 00B0                 sprintf@fval 00BE  
               sprintf@prec 00B2           __size_of_instCtrl 0013   __end_of_I2C_RepeatedStart 1333  
                  ?___awdiv 0077                    ?___ftadd 0050                    ?___awmod 0070  
                  ?___ftdiv 0020                    ?___ftneg 0070                    ?___lldiv 0070  
                  ?___ftmul 0030                    ?___llmod 0070                    ?___ftsub 005D  
                 __npowers_ 102E                    ?___fttol 0049                   __pstrings 1000  
               __tdiv_to_l_ 0004                ??__div_to_l_ 0076                    ?_initLCD 0070  
                  _I2C_Send 1351                    _I2C_Wait 1341                    _I2C_Stop 133A  
                 _scale$571 0045                    ?_sprintf 0063              __size_of_scale 029F  
            ___wmul@product 0074     __end_of_init_I2C_Master 1369          __end_of__div_to_l_ 0AF5  
               __stringbase 1005                 __stringdata 107C           ___wmul@multiplier 0070  
           I2C_Receive@temp 0072  __size_of_I2C_RepeatedStart 0007             main@humidityStr 00CC  
          __size_of___awdiv 005D            __size_of___ftadd 0109            __size_of___awmod 004D  
          __size_of___ftdiv 00B8            __size_of___ftneg 0008            __size_of___lldiv 005E  
          __size_of___ftmul 00D3            __size_of___llmod 004C            __size_of___ftsub 001C  
          __size_of___fttol 008E                    ___ftpack 1637          __end_of__stringtab 1006  
                  ___lltoft 145B                ?_I2C_Receive 0070                    ___lwtoft 13A2  
          displayString@str 0073                  sprintf@exp 00BB                    _dataCtrl 1369  
          __size_of_initLCD 0024                    __ptext10 13EE                    __ptext11 145B  
                  __ptext20 1411                    __ptext12 1486                    __ptext21 137C  
                  __ptext13 15D9                    __ptext30 132C                    __ptext22 13B6  
                  __ptext14 169F                    __ptext31 1435                    __ptext23 1369  
                  __ptext15 13D2                    __ptext32 1341                    __ptext24 13A2  
                  __ptext16 08BA                    __ptext25 0802                    __ptext17 1349  
                  __ptext26 1637                    __ptext18 151F                    __ptext27 133A  
                  __ptext19 135A                    __ptext28 1333                    __ptext29 1351  
                  __powers_ 1055            __size_of_sprintf 0599               __size_of_main 026C  
                  _instCtrl 137C            ?_init_I2C_Master 0070                    main@LSBH 00C8  
                  main@MSBH 00D0                    main@LSBT 00CA                    main@MSBT 00D2  
    __size_of_displayString 001C             main@temperature 00C5                    scale@scl 0048  
                 sprintf@ap 00A7            __tdiv_to_l_@exp1 0025                   sprintf@vd 00A8  
          __tdiv_to_l_@cntr 0024                   sprintf@sp 00BD            __tdiv_to_l_@quot 0020  
          ___lldiv@dividend 0074                   stringcode 1000                ?__tdiv_to_l_ 0070  
                  sprintf@c 00C1                    sprintf@f 0063            ___lldiv@quotient 0079  
                  stringdir 1000                    stringtab 1000               _displayString 13B6  
